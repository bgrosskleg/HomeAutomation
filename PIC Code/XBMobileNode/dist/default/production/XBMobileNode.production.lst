

Microchip Technology PIC LITE Macro Assembler V1.30 build 55553 
                                                                                               Sat Feb 01 23:38:23 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     	;# 
    32  0001                     	;# 
    33  0002                     	;# 
    34  0003                     	;# 
    35  0004                     	;# 
    36  0005                     	;# 
    37  0006                     	;# 
    38  0007                     	;# 
    39  0009                     	;# 
    40  000A                     	;# 
    41  000B                     	;# 
    42  000C                     	;# 
    43  000D                     	;# 
    44  000E                     	;# 
    45  000E                     	;# 
    46  000F                     	;# 
    47  0010                     	;# 
    48  0011                     	;# 
    49  0012                     	;# 
    50  0013                     	;# 
    51  0014                     	;# 
    52  0015                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0017                     	;# 
    56  0018                     	;# 
    57  0019                     	;# 
    58  001A                     	;# 
    59  001B                     	;# 
    60  001B                     	;# 
    61  001C                     	;# 
    62  001D                     	;# 
    63  001E                     	;# 
    64  001F                     	;# 
    65  0081                     	;# 
    66  0085                     	;# 
    67  0086                     	;# 
    68  0087                     	;# 
    69  0089                     	;# 
    70  008C                     	;# 
    71  008D                     	;# 
    72  008E                     	;# 
    73  008F                     	;# 
    74  0090                     	;# 
    75  0091                     	;# 
    76  0092                     	;# 
    77  0093                     	;# 
    78  0093                     	;# 
    79  0093                     	;# 
    80  0094                     	;# 
    81  0095                     	;# 
    82  0096                     	;# 
    83  0097                     	;# 
    84  0098                     	;# 
    85  0099                     	;# 
    86  009A                     	;# 
    87  009B                     	;# 
    88  009C                     	;# 
    89  009D                     	;# 
    90  009E                     	;# 
    91  009F                     	;# 
    92  0105                     	;# 
    93  0107                     	;# 
    94  0108                     	;# 
    95  0109                     	;# 
    96  010C                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  010E                     	;# 
   100  010F                     	;# 
   101  0185                     	;# 
   102  0187                     	;# 
   103  0188                     	;# 
   104  0189                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107                           
   108                           	psect	strings
   109  0003                     __pstrings:	
   110  0003                     stringtab:	
   111  0003                     __stringtab:	
   112                           
   113                           ;	String table - string pointers are 1 byte each
   114  0003  1BFF               	btfsc	btemp+1,7
   115  0004  280D               	ljmp	stringcode
   116  0005  1383               	bcf	3,7
   117  0006  187F               	btfsc	btemp+1,0
   118  0007  1783               	bsf	3,7
   119  0008  0800               	movf	0,w
   120  0009  0A84               	incf	4,f
   121  000A  1903               	skipnz
   122  000B  0AFF               	incf	btemp+1,f
   123  000C  0008               	return
   124  000D                     stringcode:	
   125  000D                     stringdir:	
   126  000D  3000               	movlw	high stringdir
   127  000E  008A               	movwf	10
   128  000F  0804               	movf	4,w
   129  0010  0A84               	incf	4,f
   130  0011  0782               	addwf	2,f
   131  0012                     __stringbase:	
   132  0012  3400               	retlw	0
   133  0013                     __end_of__stringtab:	
   134  0013                     _dpowers:	
   135  0013  3401               	retlw	1
   136  0014  3400               	retlw	0
   137  0015  340A               	retlw	10
   138  0016  3400               	retlw	0
   139  0017  3464               	retlw	100
   140  0018  3400               	retlw	0
   141  0019  34E8               	retlw	232
   142  001A  3403               	retlw	3
   143  001B  3410               	retlw	16
   144  001C  3427               	retlw	39
   145  001D                     __end_of_dpowers:	
   146  0005                     _PORTA	set	5
   147  0006                     _PORTB	set	6
   148  0007                     _PORTC	set	7
   149  001A                     _RCREG	set	26
   150  0019                     _TXREG	set	25
   151  00C4                     _CREN	set	196
   152  00C2                     _FERR	set	194
   153  005F                     _GIE	set	95
   154  00C1                     _OERR	set	193
   155  002F                     _RA7	set	47
   156  0030                     _RB0	set	48
   157  0031                     _RB1	set	49
   158  0065                     _RCIF	set	101
   159  00C6                     _RX9	set	198
   160  00C7                     _SPEN	set	199
   161  0064                     _TXIF	set	100
   162  0081                     _OPTION_REG	set	129
   163  009D                     _PSTRCON	set	157
   164  0099                     _SPBRG	set	153
   165  009A                     _SPBRGH	set	154
   166  0085                     _TRISA	set	133
   167  0086                     _TRISB	set	134
   168  0087                     _TRISC	set	135
   169  04C2                     _BRGH	set	1218
   170  0465                     _RCIE	set	1125
   171  04C4                     _SYNC	set	1220
   172  04C6                     _TX9	set	1222
   173  04C5                     _TXEN	set	1221
   174  0464                     _TXIE	set	1124
   175  0105                     _WDTCON	set	261
   176  0188                     _ANSEL	set	392
   177  0189                     _ANSELH	set	393
   178  0C3B                     _BRG16	set	3131
   179  001D                     __stringdata:	
   180  001D                     STR_11:	
   181  001D  3430               	retlw	48	;'0'
   182  001E  3430               	retlw	48	;'0'
   183  001F  3430               	retlw	48	;'0'
   184  0020  3430               	retlw	48	;'0'
   185  0021  3430               	retlw	48	;'0'
   186  0022  3430               	retlw	48	;'0'
   187  0023  3430               	retlw	48	;'0'
   188  0024  3430               	retlw	48	;'0'
   189  0025  3430               	retlw	48	;'0'
   190  0026  3430               	retlw	48	;'0'
   191  0027  3430               	retlw	48	;'0'
   192  0028  3430               	retlw	48	;'0'
   193  0029  3446               	retlw	70	;'F'
   194  002A  3446               	retlw	70	;'F'
   195  002B  3446               	retlw	70	;'F'
   196  002C  3446               	retlw	70	;'F'
   197  002D  3400               	retlw	0
   198  002E                     STR_1:	
   199  002E  3441               	retlw	65	;'A'
   200  002F  3454               	retlw	84	;'T'
   201  0030  3444               	retlw	68	;'D'
   202  0031  3442               	retlw	66	;'B'
   203  0032  340D               	retlw	13
   204  0033  3400               	retlw	0
   205  0034                     STR_3:	
   206  0034  3441               	retlw	65	;'A'
   207  0035  3454               	retlw	84	;'T'
   208  0036  3453               	retlw	83	;'S'
   209  0037  3448               	retlw	72	;'H'
   210  0038  340D               	retlw	13
   211  0039  3400               	retlw	0
   212  003A                     STR_4:	
   213  003A  3441               	retlw	65	;'A'
   214  003B  3454               	retlw	84	;'T'
   215  003C  3453               	retlw	83	;'S'
   216  003D  344C               	retlw	76	;'L'
   217  003E  340D               	retlw	13
   218  003F  3400               	retlw	0
   219  0040                     STR_10:	
   220  0040  3441               	retlw	65	;'A'
   221  0041  3454               	retlw	84	;'T'
   222  0042  3443               	retlw	67	;'C'
   223  0043  344E               	retlw	78	;'N'
   224  0044  340D               	retlw	13
   225  0045  3400               	retlw	0
   226  0046                     STR_5:	
   227  0046  3441               	retlw	65	;'A'
   228  0047  3454               	retlw	84	;'T'
   229  0048  3444               	retlw	68	;'D'
   230  0049  3448               	retlw	72	;'H'
   231  004A  3400               	retlw	0
   232  004B                     STR_7:	
   233  004B  3441               	retlw	65	;'A'
   234  004C  3454               	retlw	84	;'T'
   235  004D  3444               	retlw	68	;'D'
   236  004E  344C               	retlw	76	;'L'
   237  004F  3400               	retlw	0
   238  0050                     STR_9:	
   239  0050  342B               	retlw	43	;'+'
   240  0051  342B               	retlw	43	;'+'
   241  0052  342B               	retlw	43	;'+'
   242  0053  3400               	retlw	0
   243  0054                     STR_2:	
   244  0054  3425               	retlw	37	;'%'
   245  0055  3464               	retlw	100	;'d'
   246  0056  3400               	retlw	0
   247  0057                     __end_of__stringdata:	
   248                           
   249                           ; #config settings
   250  0000                     
   251                           	psect	cinit
   252  07F4                     start_initialization:	
   253  07F4                     __initialization:	
   254                           
   255                           ; Clear objects allocated to BANK0
   256  07F4  01E1               	clrf	__pbssBANK0& (0+127)
   257                           
   258                           ; Clear objects allocated to BANK1
   259  07F5  1383               	bcf	3,7	;select IRP bank0
   260  07F6  30A0               	movlw	low __pbssBANK1
   261  07F7  0084               	movwf	4
   262  07F8  30B0               	movlw	low (__pbssBANK1+16)
   263  07F9  120A  118A  2172   	fcall	clear_ram0
   264  07FC                     end_of_initialization:	
   265                           ;End of C runtime variable initialization code
   266                           
   267  07FC                     __end_of__initialization:	
   268  07FC  0183               	clrf	3
   269  07FD  120A  118A  2E2B   	ljmp	_main	;jump to C main() function
   270                           
   271                           	psect	bssBANK0
   272  0061                     __pbssBANK0:	
   273  0061                     _dummy:	
   274  0061                     	ds	1
   275                           
   276                           	psect	bssBANK1
   277  00A0                     __pbssBANK1:	
   278  00A0                     _BYTES_BUFFER:	
   279  00A0                     	ds	16
   280                           
   281                           	psect	clrtext
   282  0172                     clear_ram0:	
   283                           ;	Called with FSR containing the base address, and
   284                           ;	W with the last address+1
   285                           
   286  0172  0064               	clrwdt	;clear the watchdog before getting into this loop
   287  0173                     clrloop0:	
   288  0173  0180               	clrf	0	;clear RAM location pointed to by FSR
   289  0174  0A84               	incf	4,f	;increment pointer
   290  0175  0604               	xorwf	4,w	;XOR with final address
   291  0176  1903               	btfsc	3,2	;have we reached the end yet?
   292  0177  3400               	retlw	0	;all done for this memory range, return
   293  0178  0604               	xorwf	4,w	;XOR again to restore value
   294  0179  2973               	goto	clrloop0	;do the next byte
   295                           
   296                           	psect	cstackCOMMON
   297  0070                     __pcstackCOMMON:	
   298  0070                     ?_Setup_Baud_Gen:	
   299  0070                     ?_clear_usart_errors:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0070                     ??_clear_usart_errors:	
   303                           ; 0 bytes @ 0x0
   304                           
   305  0070                     ?_PIC_Initialization:	
   306                           ; 0 bytes @ 0x0
   307                           
   308  0070                     ??_PIC_Initialization:	
   309                           ; 0 bytes @ 0x0
   310                           
   311  0070                     ?_USART_Init:	
   312                           ; 0 bytes @ 0x0
   313                           
   314  0070                     ?_send_USART_char:	
   315                           ; 0 bytes @ 0x0
   316                           
   317  0070                     ?_flush_RCREG:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0070                     ??_flush_RCREG:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0070                     ?_getIdentification:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0070                     ?_setDestination:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0070                     ?_enterCommandMode:	
   330                           ; 0 bytes @ 0x0
   331                           
   332  0070                     ?_exitCommandMode:	
   333                           ; 0 bytes @ 0x0
   334                           
   335  0070                     ?_main:	
   336                           ; 0 bytes @ 0x0
   337                           
   338  0070                     ?_memcpy:	
   339                           ; 0 bytes @ 0x0
   340                           
   341  0070                     ?_get_USART_char:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_get_USART_char_timeout:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_strlen:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?___lwdiv:	
   351                           ; 2 bytes @ 0x0
   352                           
   353  0070                     memcpy@s1:	
   354                           ; 2 bytes @ 0x0
   355                           
   356  0070                     Setup_Baud_Gen@BAUD:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ___lwdiv@divisor:	
   360                           ; 2 bytes @ 0x0
   361                           
   362  0070                     strlen@s:	
   363                           ; 2 bytes @ 0x0
   364                           
   365                           
   366                           ; 2 bytes @ 0x0
   367  0070                     	ds	1
   368  0071                     ??_get_USART_char:	
   369  0071                     ??_get_USART_char_timeout:	
   370                           ; 0 bytes @ 0x1
   371                           
   372  0071                     ??_send_USART_char:	
   373                           ; 0 bytes @ 0x1
   374                           
   375  0071                     get_USART_char_timeout@timeout_int:	
   376                           ; 0 bytes @ 0x1
   377                           
   378  0071                     memcpy@n:	
   379                           ; 2 bytes @ 0x1
   380                           
   381                           
   382                           ; 2 bytes @ 0x1
   383  0071                     	ds	1
   384  0072                     ??_Setup_Baud_Gen:	
   385  0072                     ??_strlen:	
   386                           ; 0 bytes @ 0x2
   387                           
   388  0072                     ??_USART_Init:	
   389                           ; 0 bytes @ 0x2
   390                           
   391  0072                     send_USART_char@character:	
   392                           ; 0 bytes @ 0x2
   393                           
   394  0072                     ___lwdiv@dividend:	
   395                           ; 1 bytes @ 0x2
   396                           
   397                           
   398                           ; 2 bytes @ 0x2
   399  0072                     	ds	1
   400  0073                     ??_memcpy:	
   401                           
   402                           ; 0 bytes @ 0x3
   403  0073                     	ds	1
   404  0074                     ??___lwdiv:	
   405  0074                     memcpy@d:	
   406                           ; 0 bytes @ 0x4
   407                           
   408  0074                     strlen@cp:	
   409                           ; 1 bytes @ 0x4
   410                           
   411                           
   412                           ; 2 bytes @ 0x4
   413  0074                     	ds	1
   414  0075                     memcpy@s:	
   415  0075                     ___lwdiv@quotient:	
   416                           ; 1 bytes @ 0x5
   417                           
   418                           
   419                           ; 2 bytes @ 0x5
   420  0075                     	ds	1
   421  0076                     ?_send_USART_string:	
   422  0076                     memcpy@d1:	
   423                           ; 0 bytes @ 0x6
   424                           
   425  0076                     send_USART_string@string:	
   426                           ; 1 bytes @ 0x6
   427                           
   428                           
   429                           ; 2 bytes @ 0x6
   430  0076                     	ds	1
   431  0077                     ___lwdiv@counter:	
   432                           
   433                           ; 1 bytes @ 0x7
   434  0077                     	ds	1
   435  0078                     ??_send_USART_string:	
   436  0078                     ?___lwmod:	
   437                           ; 0 bytes @ 0x8
   438                           
   439  0078                     ___lwmod@divisor:	
   440                           ; 2 bytes @ 0x8
   441                           
   442                           
   443                           ; 2 bytes @ 0x8
   444  0078                     	ds	2
   445  007A                     send_USART_string@iter:	
   446  007A                     ___lwmod@dividend:	
   447                           ; 1 bytes @ 0xA
   448                           
   449                           
   450                           ; 2 bytes @ 0xA
   451  007A                     	ds	1
   452  007B                     ??_getIdentification:	
   453  007B                     ??_setDestination:	
   454                           ; 0 bytes @ 0xB
   455                           
   456  007B                     ??_enterCommandMode:	
   457                           ; 0 bytes @ 0xB
   458                           
   459  007B                     ??_exitCommandMode:	
   460                           ; 0 bytes @ 0xB
   461                           
   462                           
   463                           ; 0 bytes @ 0xB
   464  007B                     	ds	1
   465  007C                     ??___lwmod:	
   466  007C                     exitCommandMode@iter:	
   467                           ; 0 bytes @ 0xC
   468                           
   469                           
   470                           ; 1 bytes @ 0xC
   471  007C                     	ds	1
   472  007D                     enterCommandMode@iter:	
   473  007D                     ___lwmod@counter:	
   474                           ; 1 bytes @ 0xD
   475                           
   476                           
   477                           ; 1 bytes @ 0xD
   478  007D                     	ds	1
   479                           
   480                           	psect	cstackBANK0
   481  0020                     __pcstackBANK0:	
   482  0020                     ?_sprintf:	
   483  0020                     sprintf@f:	
   484                           ; 2 bytes @ 0x0
   485                           
   486  0020                     getIdentification@temp:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0020                     setDestination@subbuff:	
   490                           ; 8 bytes @ 0x0
   491                           
   492                           
   493                           ; 9 bytes @ 0x0
   494  0020                     	ds	3
   495  0023                     ??_sprintf:	
   496                           
   497                           ; 0 bytes @ 0x3
   498  0023                     	ds	3
   499  0026                     sprintf@ap:	
   500                           
   501                           ; 1 bytes @ 0x6
   502  0026                     	ds	1
   503  0027                     sprintf@flag:	
   504                           
   505                           ; 1 bytes @ 0x7
   506  0027                     	ds	1
   507  0028                     getIdentification@offset:	
   508  0028                     sprintf@prec:	
   509                           ; 1 bytes @ 0x8
   510                           
   511                           
   512                           ; 1 bytes @ 0x8
   513  0028                     	ds	1
   514  0029                     getIdentification@iter:	
   515  0029                     sprintf@_val:	
   516                           ; 1 bytes @ 0x9
   517                           
   518  0029                     setDestination@subbuff2:	
   519                           ; 4 bytes @ 0x9
   520                           
   521                           
   522                           ; 9 bytes @ 0x9
   523  0029                     	ds	1
   524  002A                     getIdentification@iter_128:	
   525                           
   526                           ; 1 bytes @ 0xA
   527  002A                     	ds	1
   528  002B                     getIdentification@iter_132:	
   529                           
   530                           ; 1 bytes @ 0xB
   531  002B                     	ds	1
   532  002C                     getIdentification@result:	
   533                           
   534                           ; 1 bytes @ 0xC
   535  002C                     	ds	1
   536  002D                     getIdentification@iter_129:	
   537  002D                     sprintf@sp:	
   538                           ; 1 bytes @ 0xD
   539                           
   540                           
   541                           ; 1 bytes @ 0xD
   542  002D                     	ds	1
   543  002E                     getIdentification@iter_130:	
   544  002E                     sprintf@c:	
   545                           ; 1 bytes @ 0xE
   546                           
   547                           
   548                           ; 1 bytes @ 0xE
   549  002E                     	ds	1
   550  002F                     getIdentification@iter_133:	
   551                           
   552                           ; 1 bytes @ 0xF
   553  002F                     	ds	1
   554  0030                     getIdentification@iter_134:	
   555                           
   556                           ; 1 bytes @ 0x10
   557  0030                     	ds	2
   558  0032                     setDestination@destination:	
   559                           
   560                           ; 1 bytes @ 0x12
   561  0032                     	ds	1
   562  0033                     setDestination@iter:	
   563                           
   564                           ; 1 bytes @ 0x13
   565  0033                     	ds	1
   566  0034                     setDestination@iter_144:	
   567                           
   568                           ; 1 bytes @ 0x14
   569  0034                     	ds	1
   570  0035                     ??_main:	
   571                           
   572                           ; 0 bytes @ 0x15
   573  0035                     	ds	3
   574  0038                     main@mobile:	
   575                           
   576                           ; 17 bytes @ 0x18
   577  0038                     	ds	17
   578  0049                     main@broadcastNumberBuf:	
   579                           
   580                           ; 10 bytes @ 0x29
   581  0049                     	ds	10
   582  0053                     main@lightingValueBuf:	
   583                           
   584                           ; 10 bytes @ 0x33
   585  0053                     	ds	10
   586  005D                     main@lightingValue:	
   587                           
   588                           ; 2 bytes @ 0x3D
   589  005D                     	ds	2
   590  005F                     main@broadcastNumber:	
   591                           
   592                           ; 2 bytes @ 0x3F
   593  005F                     	ds	2
   594                           
   595                           	psect	maintext
   596  062B                     __pmaintext:	
   597 ;;
   598 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   599 ;;
   600 ;; *************** function _main *****************
   601 ;; Defined at:
   602 ;;		line 26 in file "XBMobileNode.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  mobile         17   24[BANK0 ] unsigned char [17]
   607 ;;  lightingValu   10   51[BANK0 ] unsigned char [10]
   608 ;;  broadcastNum   10   41[BANK0 ] unsigned char [10]
   609 ;;  broadcastNum    2   63[BANK0 ] int 
   610 ;;  lightingValu    2   61[BANK0 ] int 
   611 ;; Return value:  Size  Location     Type
   612 ;;		None               void
   613 ;; Registers used:
   614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 17F/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   620 ;;      Params:         0       0       0       0       0
   621 ;;      Locals:         0      41       0       0       0
   622 ;;      Temps:          0       3       0       0       0
   623 ;;      Totals:         0      44       0       0       0
   624 ;;Total ram usage:       44 bytes
   625 ;; Hardware stack levels required when called:    4
   626 ;; This function calls:
   627 ;;		_PIC_Initialization
   628 ;;		_USART_Init
   629 ;;		_enterCommandMode
   630 ;;		_exitCommandMode
   631 ;;		_getIdentification
   632 ;;		_send_USART_char
   633 ;;		_send_USART_string
   634 ;;		_setDestination
   635 ;;		_sprintf
   636 ;; This function is called by:
   637 ;;		Startup code after reset
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           
   642                           ;psect for function _main
   643  062B                     _main:	
   644                           
   645                           ;XBMobileNode.c: 28: PIC_Initialization();
   646                           
   647                           ;incstack = 0
   648                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   649  062B  120A  118A  21BF   	fcall	_PIC_Initialization
      +       120A  118A         
   650                           
   651                           ;XBMobileNode.c: 30: USART_Init();
   652  0630  120A  118A  21D9   	fcall	_USART_Init
      +       120A  118A         
   653                           
   654                           ;XBMobileNode.c: 32: SPEN = 1;
   655  0635  1283               	bcf	3,5	;RP0=0, select bank0
   656  0636  1303               	bcf	3,6	;RP1=0, select bank0
   657  0637  1798               	bsf	24,7	;volatile
   658                           
   659                           ;XBMobileNode.c: 34: _delay((unsigned long)((250)*(4000000/4000.0)));
   660  0638  3002               	movlw	2
   661  0639  00B7               	movwf	??_main+2
   662  063A  3045               	movlw	69
   663  063B  00B6               	movwf	??_main+1
   664  063C  30A9               	movlw	169
   665  063D  00B5               	movwf	??_main
   666  063E                     u1337:	
   667  063E  0BB5               	decfsz	??_main,f
   668  063F  2E3E               	goto	u1337
   669  0640  0BB6               	decfsz	??_main+1,f
   670  0641  2E3E               	goto	u1337
   671  0642  0BB7               	decfsz	??_main+2,f
   672  0643  2E3E               	goto	u1337
   673  0644  2E45               	nop2
   674                           
   675                           ;XBMobileNode.c: 37: enterCommandMode();
   676  0645  120A  118A  2302   	fcall	_enterCommandMode
      +       120A  118A         
   677                           
   678                           ;XBMobileNode.c: 40: setDestination("000000000000FFFF");
   679  064A  300B               	movlw	(STR_11-__stringbase)& (0+255)
   680  064B  120A  118A  23BD   	fcall	_setDestination
      +       120A  118A         
   681                           
   682                           ;XBMobileNode.c: 43: char mobile[16+1];
   683                           ;XBMobileNode.c: 44: getIdentification(mobile);
   684  0650  3038               	movlw	main@mobile& (0+255)
   685  0651  120A  118A  2544   	fcall	_getIdentification
      +       120A  118A         
   686                           
   687                           ;XBMobileNode.c: 47: exitCommandMode();
   688  0656  120A  118A  21F7   	fcall	_exitCommandMode
      +       120A  118A         
   689                           
   690                           ;XBMobileNode.c: 49: int broadcastNumber = 0;
   691  065B  1283               	bcf	3,5	;RP0=0, select bank0
   692  065C  1303               	bcf	3,6	;RP1=0, select bank0
   693  065D  01DF               	clrf	main@broadcastNumber
   694  065E  01E0               	clrf	main@broadcastNumber+1
   695  065F                     l2046:	
   696                           ;XBMobileNode.c: 50: char broadcastNumberBuf[10];
   697                           ;XBMobileNode.c: 52: int lightingValue;
   698                           ;XBMobileNode.c: 53: char lightingValueBuf[10];
   699                           ;XBMobileNode.c: 55: for(;;)
   700                           
   701                           
   702                           ;XBMobileNode.c: 56: {
   703                           ;XBMobileNode.c: 57: if (RB0 == 1)
   704  065F  1283               	bcf	3,5	;RP0=0, select bank0
   705  0660  1303               	bcf	3,6	;RP1=0, select bank0
   706  0661  1C06               	btfss	6,0	;volatile
   707  0662  2ED9               	goto	l2072
   708                           
   709                           ;XBMobileNode.c: 58: {
   710                           ;XBMobileNode.c: 60: send_USART_char('!');
   711  0663  3021               	movlw	33
   712  0664  120A  118A  2194   	fcall	_send_USART_char
      +       120A  118A         
   713                           
   714                           ;XBMobileNode.c: 62: lightingValue = 147;
   715  0669  3093               	movlw	147
   716  066A  1283               	bcf	3,5	;RP0=0, select bank0
   717  066B  1303               	bcf	3,6	;RP1=0, select bank0
   718  066C  00DD               	movwf	main@lightingValue
   719  066D  3000               	movlw	0
   720  066E  00DE               	movwf	main@lightingValue+1
   721                           
   722                           ;XBMobileNode.c: 64: if(lightingValue < 10)
   723  066F  085E               	movf	main@lightingValue+1,w
   724  0670  3A80               	xorlw	128
   725  0671  00FF               	movwf	127
   726  0672  3080               	movlw	128
   727  0673  027F               	subwf	127,w
   728  0674  1D03               	skipz
   729  0675  2E78               	goto	u1275
   730  0676  300A               	movlw	10
   731  0677  025D               	subwf	main@lightingValue,w
   732  0678                     u1275:	
   733  0678  1803               	skipnc
   734  0679  2E90               	goto	l2060
   735                           
   736                           ;XBMobileNode.c: 65: {
   737                           ;XBMobileNode.c: 66: lightingValueBuf[0] = '0';
   738  067A  3030               	movlw	48
   739  067B  1283               	bcf	3,5	;RP0=0, select bank0
   740  067C  1303               	bcf	3,6	;RP1=0, select bank0
   741  067D  00B5               	movwf	??_main
   742  067E  0835               	movf	??_main,w
   743  067F  00D3               	movwf	main@lightingValueBuf
   744                           
   745                           ;XBMobileNode.c: 67: lightingValueBuf[1] = '0';
   746  0680  3030               	movlw	48
   747  0681  00B5               	movwf	??_main
   748  0682  0835               	movf	??_main,w
   749  0683  00D4               	movwf	main@lightingValueBuf+1
   750                           
   751                           ;XBMobileNode.c: 68: sprintf(lightingValueBuf+2 , "%d", lightingValue);
   752  0684  3042               	movlw	(STR_2-__stringbase)& (0+255)
   753  0685  00B5               	movwf	??_main
   754  0686  0835               	movf	??_main,w
   755  0687  00A0               	movwf	sprintf@f
   756  0688  085E               	movf	main@lightingValue+1,w
   757  0689  01A2               	clrf	?_sprintf+2
   758  068A  07A2               	addwf	?_sprintf+2,f
   759  068B  085D               	movf	main@lightingValue,w
   760  068C  01A1               	clrf	?_sprintf+1
   761  068D  07A1               	addwf	?_sprintf+1,f
   762  068E  3055               	movlw	(main@lightingValueBuf+2)& (0+255)
   763  068F  2EBC               	goto	L1
   764  0690                     l2060:	
   765                           ;XBMobileNode.c: 70: }
   766                           
   767                           ;XBMobileNode.c: 69: send_USART_string(lightingValueBuf);
   768                           
   769                           
   770                           ;XBMobileNode.c: 71: else if(lightingValue < 100)
   771  0690  1283               	bcf	3,5	;RP0=0, select bank0
   772  0691  1303               	bcf	3,6	;RP1=0, select bank0
   773  0692  085E               	movf	main@lightingValue+1,w
   774  0693  3A80               	xorlw	128
   775  0694  00FF               	movwf	127
   776  0695  3080               	movlw	128
   777  0696  027F               	subwf	127,w
   778  0697  1D03               	skipz
   779  0698  2E9B               	goto	u1285
   780  0699  3064               	movlw	100
   781  069A  025D               	subwf	main@lightingValue,w
   782  069B                     u1285:	
   783  069B  1803               	skipnc
   784  069C  2EAF               	goto	l2068
   785                           
   786                           ;XBMobileNode.c: 72: {
   787                           ;XBMobileNode.c: 73: lightingValueBuf[0] = '0';
   788  069D  3030               	movlw	48
   789  069E  1283               	bcf	3,5	;RP0=0, select bank0
   790  069F  1303               	bcf	3,6	;RP1=0, select bank0
   791  06A0  00B5               	movwf	??_main
   792  06A1  0835               	movf	??_main,w
   793  06A2  00D3               	movwf	main@lightingValueBuf
   794                           
   795                           ;XBMobileNode.c: 74: sprintf(lightingValueBuf+1 , "%d", lightingValue);
   796  06A3  3042               	movlw	(STR_2-__stringbase)& (0+255)
   797  06A4  00B5               	movwf	??_main
   798  06A5  0835               	movf	??_main,w
   799  06A6  00A0               	movwf	sprintf@f
   800  06A7  085E               	movf	main@lightingValue+1,w
   801  06A8  01A2               	clrf	?_sprintf+2
   802  06A9  07A2               	addwf	?_sprintf+2,f
   803  06AA  085D               	movf	main@lightingValue,w
   804  06AB  01A1               	clrf	?_sprintf+1
   805  06AC  07A1               	addwf	?_sprintf+1,f
   806  06AD  3054               	movlw	(main@lightingValueBuf+1)& (0+255)
   807  06AE  2EBC               	goto	L1
   808  06AF                     l2068:	
   809                           ;XBMobileNode.c: 76: }
   810                           
   811                           ;XBMobileNode.c: 75: send_USART_string(lightingValueBuf);
   812                           
   813                           
   814                           ;XBMobileNode.c: 77: else
   815                           ;XBMobileNode.c: 78: {
   816                           ;XBMobileNode.c: 79: sprintf(lightingValueBuf , "%d", lightingValue);
   817  06AF  3042               	movlw	(STR_2-__stringbase)& (0+255)
   818  06B0  1283               	bcf	3,5	;RP0=0, select bank0
   819  06B1  1303               	bcf	3,6	;RP1=0, select bank0
   820  06B2  00B5               	movwf	??_main
   821  06B3  0835               	movf	??_main,w
   822  06B4  00A0               	movwf	sprintf@f
   823  06B5  085E               	movf	main@lightingValue+1,w
   824  06B6  01A2               	clrf	?_sprintf+2
   825  06B7  07A2               	addwf	?_sprintf+2,f
   826  06B8  085D               	movf	main@lightingValue,w
   827  06B9  01A1               	clrf	?_sprintf+1
   828  06BA  07A1               	addwf	?_sprintf+1,f
   829  06BB  3053               	movlw	main@lightingValueBuf& (0+255)
   830  06BC                     L1:	
   831  06BC  120A  118A  246B   	fcall	_sprintf
      +       120A  118A         
   832                           
   833                           ;XBMobileNode.c: 80: send_USART_string(lightingValueBuf);
   834  06C1  3053               	movlw	main@lightingValueBuf& (0+255)
   835  06C2  00F6               	movwf	send_USART_string@string
   836  06C3  3000               	movlw	0
   837  06C4  00F7               	movwf	send_USART_string@string+1
   838  06C5  120A  118A  229F   	fcall	_send_USART_string
      +       120A  118A         
   839                           
   840                           ;XBMobileNode.c: 81: }
   841                           ;XBMobileNode.c: 82: _delay((unsigned long)((250)*(4000000/4000.0)));
   842  06CA  3002               	movlw	2
   843  06CB  1283               	bcf	3,5	;RP0=0, select bank0
   844  06CC  1303               	bcf	3,6	;RP1=0, select bank0
   845  06CD  00B7               	movwf	??_main+2
   846  06CE  3045               	movlw	69
   847  06CF  00B6               	movwf	??_main+1
   848  06D0  30A9               	movlw	169
   849  06D1  00B5               	movwf	??_main
   850  06D2                     u1347:	
   851  06D2  0BB5               	decfsz	??_main,f
   852  06D3  2ED2               	goto	u1347
   853  06D4  0BB6               	decfsz	??_main+1,f
   854  06D5  2ED2               	goto	u1347
   855  06D6  0BB7               	decfsz	??_main+2,f
   856  06D7  2ED2               	goto	u1347
   857  06D8  2ED9               	nop2
   858  06D9                     l2072:	
   859                           
   860                           ;XBMobileNode.c: 83: }
   861                           ;XBMobileNode.c: 86: if (RB1 == 1)
   862  06D9  1283               	bcf	3,5	;RP0=0, select bank0
   863  06DA  1303               	bcf	3,6	;RP1=0, select bank0
   864  06DB  1C86               	btfss	6,1	;volatile
   865  06DC  2E5F               	goto	l2046
   866                           
   867                           ;XBMobileNode.c: 87: {
   868                           ;XBMobileNode.c: 89: RA7 = 1;
   869  06DD  1785               	bsf	5,7	;volatile
   870                           
   871                           ;XBMobileNode.c: 90: _delay((unsigned long)((250)*(4000000/4000.0)));
   872  06DE  3002               	movlw	2
   873  06DF  00B7               	movwf	??_main+2
   874  06E0  3045               	movlw	69
   875  06E1  00B6               	movwf	??_main+1
   876  06E2  30A9               	movlw	169
   877  06E3  00B5               	movwf	??_main
   878  06E4                     u1357:	
   879  06E4  0BB5               	decfsz	??_main,f
   880  06E5  2EE4               	goto	u1357
   881  06E6  0BB6               	decfsz	??_main+1,f
   882  06E7  2EE4               	goto	u1357
   883  06E8  0BB7               	decfsz	??_main+2,f
   884  06E9  2EE4               	goto	u1357
   885  06EA  2EEB               	nop2
   886                           
   887                           ;XBMobileNode.c: 95: send_USART_char('*');
   888  06EB  302A               	movlw	42
   889  06EC  120A  118A  2194   	fcall	_send_USART_char
      +       120A  118A         
   890                           
   891                           ;XBMobileNode.c: 97: if(broadcastNumber == 999)
   892  06F1  3003               	movlw	3
   893  06F2  1283               	bcf	3,5	;RP0=0, select bank0
   894  06F3  1303               	bcf	3,6	;RP1=0, select bank0
   895  06F4  0660               	xorwf	main@broadcastNumber+1,w
   896  06F5  1D03               	skipz
   897  06F6  2EF9               	goto	u1305
   898  06F7  30E7               	movlw	231
   899  06F8  065F               	xorwf	main@broadcastNumber,w
   900  06F9                     u1305:	
   901  06F9  1D03               	skipz
   902  06FA  2EFF               	goto	l2084
   903                           
   904                           ;XBMobileNode.c: 98: {
   905                           ;XBMobileNode.c: 99: broadcastNumber = 1;
   906  06FB  3001               	movlw	1
   907  06FC  00DF               	movwf	main@broadcastNumber
   908  06FD  3000               	movlw	0
   909  06FE  00E0               	movwf	main@broadcastNumber+1
   910  06FF                     l2084:	
   911                           
   912                           ;XBMobileNode.c: 100: }
   913                           ;XBMobileNode.c: 102: if(broadcastNumber < 10)
   914  06FF  0860               	movf	main@broadcastNumber+1,w
   915  0700  3A80               	xorlw	128
   916  0701  00FF               	movwf	127
   917  0702  3080               	movlw	128
   918  0703  027F               	subwf	127,w
   919  0704  1D03               	skipz
   920  0705  2F08               	goto	u1315
   921  0706  300A               	movlw	10
   922  0707  025F               	subwf	main@broadcastNumber,w
   923  0708                     u1315:	
   924  0708  1803               	skipnc
   925  0709  2F20               	goto	l2092
   926                           
   927                           ;XBMobileNode.c: 103: {
   928                           ;XBMobileNode.c: 104: broadcastNumberBuf[0] = '0';
   929  070A  3030               	movlw	48
   930  070B  1283               	bcf	3,5	;RP0=0, select bank0
   931  070C  1303               	bcf	3,6	;RP1=0, select bank0
   932  070D  00B5               	movwf	??_main
   933  070E  0835               	movf	??_main,w
   934  070F  00C9               	movwf	main@broadcastNumberBuf
   935                           
   936                           ;XBMobileNode.c: 105: broadcastNumberBuf[1] = '0';
   937  0710  3030               	movlw	48
   938  0711  00B5               	movwf	??_main
   939  0712  0835               	movf	??_main,w
   940  0713  00CA               	movwf	main@broadcastNumberBuf+1
   941                           
   942                           ;XBMobileNode.c: 106: sprintf(broadcastNumberBuf+2 , "%d", broadcastNumber);
   943  0714  3042               	movlw	(STR_2-__stringbase)& (0+255)
   944  0715  00B5               	movwf	??_main
   945  0716  0835               	movf	??_main,w
   946  0717  00A0               	movwf	sprintf@f
   947  0718  0860               	movf	main@broadcastNumber+1,w
   948  0719  01A2               	clrf	?_sprintf+2
   949  071A  07A2               	addwf	?_sprintf+2,f
   950  071B  085F               	movf	main@broadcastNumber,w
   951  071C  01A1               	clrf	?_sprintf+1
   952  071D  07A1               	addwf	?_sprintf+1,f
   953  071E  304B               	movlw	(main@broadcastNumberBuf+2)& (0+255)
   954  071F  2F4C               	goto	L2
   955  0720                     l2092:	
   956                           ;XBMobileNode.c: 108: }
   957                           
   958                           ;XBMobileNode.c: 107: send_USART_string(broadcastNumberBuf);
   959                           
   960                           
   961                           ;XBMobileNode.c: 109: else if(broadcastNumber < 100)
   962  0720  1283               	bcf	3,5	;RP0=0, select bank0
   963  0721  1303               	bcf	3,6	;RP1=0, select bank0
   964  0722  0860               	movf	main@broadcastNumber+1,w
   965  0723  3A80               	xorlw	128
   966  0724  00FF               	movwf	127
   967  0725  3080               	movlw	128
   968  0726  027F               	subwf	127,w
   969  0727  1D03               	skipz
   970  0728  2F2B               	goto	u1325
   971  0729  3064               	movlw	100
   972  072A  025F               	subwf	main@broadcastNumber,w
   973  072B                     u1325:	
   974  072B  1803               	skipnc
   975  072C  2F3F               	goto	l2100
   976                           
   977                           ;XBMobileNode.c: 110: {
   978                           ;XBMobileNode.c: 111: broadcastNumberBuf[0] = '0';
   979  072D  3030               	movlw	48
   980  072E  1283               	bcf	3,5	;RP0=0, select bank0
   981  072F  1303               	bcf	3,6	;RP1=0, select bank0
   982  0730  00B5               	movwf	??_main
   983  0731  0835               	movf	??_main,w
   984  0732  00C9               	movwf	main@broadcastNumberBuf
   985                           
   986                           ;XBMobileNode.c: 112: sprintf(broadcastNumberBuf+1 , "%d", broadcastNumber);
   987  0733  3042               	movlw	(STR_2-__stringbase)& (0+255)
   988  0734  00B5               	movwf	??_main
   989  0735  0835               	movf	??_main,w
   990  0736  00A0               	movwf	sprintf@f
   991  0737  0860               	movf	main@broadcastNumber+1,w
   992  0738  01A2               	clrf	?_sprintf+2
   993  0739  07A2               	addwf	?_sprintf+2,f
   994  073A  085F               	movf	main@broadcastNumber,w
   995  073B  01A1               	clrf	?_sprintf+1
   996  073C  07A1               	addwf	?_sprintf+1,f
   997  073D  304A               	movlw	(main@broadcastNumberBuf+1)& (0+255)
   998  073E  2F4C               	goto	L2
   999  073F                     l2100:	
  1000                           ;XBMobileNode.c: 114: }
  1001                           
  1002                           ;XBMobileNode.c: 113: send_USART_string(broadcastNumberBuf);
  1003                           
  1004                           
  1005                           ;XBMobileNode.c: 115: else
  1006                           ;XBMobileNode.c: 116: {
  1007                           ;XBMobileNode.c: 117: sprintf(broadcastNumberBuf , "%d", broadcastNumber);
  1008  073F  3042               	movlw	(STR_2-__stringbase)& (0+255)
  1009  0740  1283               	bcf	3,5	;RP0=0, select bank0
  1010  0741  1303               	bcf	3,6	;RP1=0, select bank0
  1011  0742  00B5               	movwf	??_main
  1012  0743  0835               	movf	??_main,w
  1013  0744  00A0               	movwf	sprintf@f
  1014  0745  0860               	movf	main@broadcastNumber+1,w
  1015  0746  01A2               	clrf	?_sprintf+2
  1016  0747  07A2               	addwf	?_sprintf+2,f
  1017  0748  085F               	movf	main@broadcastNumber,w
  1018  0749  01A1               	clrf	?_sprintf+1
  1019  074A  07A1               	addwf	?_sprintf+1,f
  1020  074B  3049               	movlw	main@broadcastNumberBuf& (0+255)
  1021  074C                     L2:	
  1022  074C  120A  118A  246B   	fcall	_sprintf
      +       120A  118A         
  1023                           
  1024                           ;XBMobileNode.c: 118: send_USART_string(broadcastNumberBuf);
  1025  0751  3049               	movlw	main@broadcastNumberBuf& (0+255)
  1026  0752  00F6               	movwf	send_USART_string@string
  1027  0753  3000               	movlw	0
  1028  0754  00F7               	movwf	send_USART_string@string+1
  1029  0755  120A  118A  229F   	fcall	_send_USART_string
      +       120A  118A         
  1030                           
  1031                           ;XBMobileNode.c: 119: }
  1032                           ;XBMobileNode.c: 121: broadcastNumber++;
  1033  075A  3001               	movlw	1
  1034  075B  1283               	bcf	3,5	;RP0=0, select bank0
  1035  075C  1303               	bcf	3,6	;RP1=0, select bank0
  1036  075D  07DF               	addwf	main@broadcastNumber,f
  1037  075E  1803               	skipnc
  1038  075F  0AE0               	incf	main@broadcastNumber+1,f
  1039  0760  3000               	movlw	0
  1040  0761  07E0               	addwf	main@broadcastNumber+1,f
  1041                           
  1042                           ;XBMobileNode.c: 124: send_USART_string(mobile);
  1043  0762  3038               	movlw	main@mobile& (0+255)
  1044  0763  00F6               	movwf	send_USART_string@string
  1045  0764  3000               	movlw	0
  1046  0765  00F7               	movwf	send_USART_string@string+1
  1047  0766  120A  118A  229F   	fcall	_send_USART_string
      +       120A  118A         
  1048                           
  1049                           ;XBMobileNode.c: 126: _delay((unsigned long)((250)*(4000000/4000.0)));
  1050  076B  3002               	movlw	2
  1051  076C  1283               	bcf	3,5	;RP0=0, select bank0
  1052  076D  1303               	bcf	3,6	;RP1=0, select bank0
  1053  076E  00B7               	movwf	??_main+2
  1054  076F  3045               	movlw	69
  1055  0770  00B6               	movwf	??_main+1
  1056  0771  30A9               	movlw	169
  1057  0772  00B5               	movwf	??_main
  1058  0773                     u1367:	
  1059  0773  0BB5               	decfsz	??_main,f
  1060  0774  2F73               	goto	u1367
  1061  0775  0BB6               	decfsz	??_main+1,f
  1062  0776  2F73               	goto	u1367
  1063  0777  0BB7               	decfsz	??_main+2,f
  1064  0778  2F73               	goto	u1367
  1065  0779  2F7A               	nop2
  1066                           
  1067                           ;XBMobileNode.c: 127: _delay((unsigned long)((250)*(4000000/4000.0)));
  1068  077A  3002               	movlw	2
  1069  077B  1283               	bcf	3,5	;RP0=0, select bank0
  1070  077C  1303               	bcf	3,6	;RP1=0, select bank0
  1071  077D  00B7               	movwf	??_main+2
  1072  077E  3045               	movlw	69
  1073  077F  00B6               	movwf	??_main+1
  1074  0780  30A9               	movlw	169
  1075  0781  00B5               	movwf	??_main
  1076  0782                     u1377:	
  1077  0782  0BB5               	decfsz	??_main,f
  1078  0783  2F82               	goto	u1377
  1079  0784  0BB6               	decfsz	??_main+1,f
  1080  0785  2F82               	goto	u1377
  1081  0786  0BB7               	decfsz	??_main+2,f
  1082  0787  2F82               	goto	u1377
  1083  0788  2F89               	nop2
  1084                           
  1085                           ;XBMobileNode.c: 128: _delay((unsigned long)((250)*(4000000/4000.0)));
  1086  0789  3002               	movlw	2
  1087  078A  1283               	bcf	3,5	;RP0=0, select bank0
  1088  078B  1303               	bcf	3,6	;RP1=0, select bank0
  1089  078C  00B7               	movwf	??_main+2
  1090  078D  3045               	movlw	69
  1091  078E  00B6               	movwf	??_main+1
  1092  078F  30A9               	movlw	169
  1093  0790  00B5               	movwf	??_main
  1094  0791                     u1387:	
  1095  0791  0BB5               	decfsz	??_main,f
  1096  0792  2F91               	goto	u1387
  1097  0793  0BB6               	decfsz	??_main+1,f
  1098  0794  2F91               	goto	u1387
  1099  0795  0BB7               	decfsz	??_main+2,f
  1100  0796  2F91               	goto	u1387
  1101  0797  2F98               	nop2
  1102                           
  1103                           ;XBMobileNode.c: 129: _delay((unsigned long)((250)*(4000000/4000.0)));
  1104  0798  3002               	movlw	2
  1105  0799  1283               	bcf	3,5	;RP0=0, select bank0
  1106  079A  1303               	bcf	3,6	;RP1=0, select bank0
  1107  079B  00B7               	movwf	??_main+2
  1108  079C  3045               	movlw	69
  1109  079D  00B6               	movwf	??_main+1
  1110  079E  30A9               	movlw	169
  1111  079F  00B5               	movwf	??_main
  1112  07A0                     u1397:	
  1113  07A0  0BB5               	decfsz	??_main,f
  1114  07A1  2FA0               	goto	u1397
  1115  07A2  0BB6               	decfsz	??_main+1,f
  1116  07A3  2FA0               	goto	u1397
  1117  07A4  0BB7               	decfsz	??_main+2,f
  1118  07A5  2FA0               	goto	u1397
  1119  07A6  2FA7               	nop2
  1120                           
  1121                           ;XBMobileNode.c: 131: _delay((unsigned long)((250)*(4000000/4000.0)));
  1122  07A7  3002               	movlw	2
  1123  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  1124  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  1125  07AA  00B7               	movwf	??_main+2
  1126  07AB  3045               	movlw	69
  1127  07AC  00B6               	movwf	??_main+1
  1128  07AD  30A9               	movlw	169
  1129  07AE  00B5               	movwf	??_main
  1130  07AF                     u1407:	
  1131  07AF  0BB5               	decfsz	??_main,f
  1132  07B0  2FAF               	goto	u1407
  1133  07B1  0BB6               	decfsz	??_main+1,f
  1134  07B2  2FAF               	goto	u1407
  1135  07B3  0BB7               	decfsz	??_main+2,f
  1136  07B4  2FAF               	goto	u1407
  1137  07B5  2FB6               	nop2
  1138                           
  1139                           ;XBMobileNode.c: 132: _delay((unsigned long)((250)*(4000000/4000.0)));
  1140  07B6  3002               	movlw	2
  1141  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  1142  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  1143  07B9  00B7               	movwf	??_main+2
  1144  07BA  3045               	movlw	69
  1145  07BB  00B6               	movwf	??_main+1
  1146  07BC  30A9               	movlw	169
  1147  07BD  00B5               	movwf	??_main
  1148  07BE                     u1417:	
  1149  07BE  0BB5               	decfsz	??_main,f
  1150  07BF  2FBE               	goto	u1417
  1151  07C0  0BB6               	decfsz	??_main+1,f
  1152  07C1  2FBE               	goto	u1417
  1153  07C2  0BB7               	decfsz	??_main+2,f
  1154  07C3  2FBE               	goto	u1417
  1155  07C4  2FC5               	nop2
  1156                           
  1157                           ;XBMobileNode.c: 133: _delay((unsigned long)((250)*(4000000/4000.0)));
  1158  07C5  3002               	movlw	2
  1159  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1160  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1161  07C8  00B7               	movwf	??_main+2
  1162  07C9  3045               	movlw	69
  1163  07CA  00B6               	movwf	??_main+1
  1164  07CB  30A9               	movlw	169
  1165  07CC  00B5               	movwf	??_main
  1166  07CD                     u1427:	
  1167  07CD  0BB5               	decfsz	??_main,f
  1168  07CE  2FCD               	goto	u1427
  1169  07CF  0BB6               	decfsz	??_main+1,f
  1170  07D0  2FCD               	goto	u1427
  1171  07D1  0BB7               	decfsz	??_main+2,f
  1172  07D2  2FCD               	goto	u1427
  1173  07D3  2FD4               	nop2
  1174                           
  1175                           ;XBMobileNode.c: 134: _delay((unsigned long)((250)*(4000000/4000.0)));
  1176  07D4  3002               	movlw	2
  1177  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1178  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1179  07D7  00B7               	movwf	??_main+2
  1180  07D8  3045               	movlw	69
  1181  07D9  00B6               	movwf	??_main+1
  1182  07DA  30A9               	movlw	169
  1183  07DB  00B5               	movwf	??_main
  1184  07DC                     u1437:	
  1185  07DC  0BB5               	decfsz	??_main,f
  1186  07DD  2FDC               	goto	u1437
  1187  07DE  0BB6               	decfsz	??_main+1,f
  1188  07DF  2FDC               	goto	u1437
  1189  07E0  0BB7               	decfsz	??_main+2,f
  1190  07E1  2FDC               	goto	u1437
  1191  07E2  2FE3               	nop2
  1192                           
  1193                           ;XBMobileNode.c: 137: RA7 = 0;
  1194  07E3  1283               	bcf	3,5	;RP0=0, select bank0
  1195  07E4  1303               	bcf	3,6	;RP1=0, select bank0
  1196  07E5  1385               	bcf	5,7	;volatile
  1197                           
  1198                           ;XBMobileNode.c: 138: _delay((unsigned long)((250)*(4000000/4000.0)));
  1199  07E6  3002               	movlw	2
  1200  07E7  00B7               	movwf	??_main+2
  1201  07E8  3045               	movlw	69
  1202  07E9  00B6               	movwf	??_main+1
  1203  07EA  30A9               	movlw	169
  1204  07EB  00B5               	movwf	??_main
  1205  07EC                     u1447:	
  1206  07EC  0BB5               	decfsz	??_main,f
  1207  07ED  2FEC               	goto	u1447
  1208  07EE  0BB6               	decfsz	??_main+1,f
  1209  07EF  2FEC               	goto	u1447
  1210  07F0  0BB7               	decfsz	??_main+2,f
  1211  07F1  2FEC               	goto	u1447
  1212  07F2  2FF3               	nop2
  1213                           
  1214                           ;XBMobileNode.c: 139: }
  1215                           ;XBMobileNode.c: 140: }
  1216  07F3  2E5F               	goto	l2046
  1217  07F4                     __end_of_main:	
  1218                           
  1219                           	psect	text1
  1220  046B                     __ptext1:	
  1221 ;; *************** function _sprintf *****************
  1222 ;; Defined at:
  1223 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\doprnt.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;  sp              1    wreg     PTR unsigned char 
  1226 ;;		 -> main@broadcastNumberBuf(10), main@lightingValueBuf(10), getRSSI@dBmbuf(2), 
  1227 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1228 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_14(3), 
  1229 ;;		 -> STR_13(3), STR_12(3), STR_2(3), 
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  sp              1   13[BANK0 ] PTR unsigned char 
  1232 ;;		 -> main@broadcastNumberBuf(10), main@lightingValueBuf(10), getRSSI@dBmbuf(2), 
  1233 ;;  _val            4    9[BANK0 ] struct .
  1234 ;;  c               1   14[BANK0 ] char 
  1235 ;;  prec            1    8[BANK0 ] char 
  1236 ;;  flag            1    7[BANK0 ] unsigned char 
  1237 ;;  ap              1    6[BANK0 ] PTR void [1]
  1238 ;;		 -> ?_sprintf(2), 
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  2    0[BANK0 ] int 
  1241 ;; Registers used:
  1242 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1248 ;;      Params:         0       3       0       0       0
  1249 ;;      Locals:         0       9       0       0       0
  1250 ;;      Temps:          0       3       0       0       0
  1251 ;;      Totals:         0      15       0       0       0
  1252 ;;Total ram usage:       15 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    1
  1255 ;; This function calls:
  1256 ;;		___lwdiv
  1257 ;;		___lwmod
  1258 ;; This function is called by:
  1259 ;;		_main
  1260 ;;		_getRSSI
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           
  1265                           ;psect for function _sprintf
  1266  046B                     _sprintf:	
  1267                           
  1268                           ;incstack = 0
  1269                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1270                           ;sprintf@sp stored from wreg
  1271  046B  1283               	bcf	3,5	;RP0=0, select bank0
  1272  046C  1303               	bcf	3,6	;RP1=0, select bank0
  1273  046D  00AD               	movwf	sprintf@sp
  1274                           
  1275                           ;doprnt.c: 494: va_list ap;
  1276                           ;doprnt.c: 499: signed char c;
  1277                           ;doprnt.c: 506: signed char prec;
  1278                           ;doprnt.c: 508: unsigned char flag;
  1279                           ;doprnt.c: 527: union {
  1280                           ;doprnt.c: 528: unsigned int _val;
  1281                           ;doprnt.c: 529: struct {
  1282                           ;doprnt.c: 530: const char * _cp;
  1283                           ;doprnt.c: 531: unsigned _len;
  1284                           ;doprnt.c: 532: } _str;
  1285                           ;doprnt.c: 533: } _val;
  1286                           ;doprnt.c: 542: *ap = __va_start();
  1287  046E  3021               	movlw	(?_sprintf+1)& (0+255)
  1288  046F  00A3               	movwf	??_sprintf
  1289  0470  0823               	movf	??_sprintf,w
  1290  0471  00A6               	movwf	sprintf@ap
  1291  0472                     l1834:	
  1292                           ;doprnt.c: 545: while(c = *f++) {
  1293                           
  1294  0472  3001               	movlw	1
  1295  0473  07A0               	addwf	sprintf@f,f
  1296  0474  30FF               	movlw	-1
  1297  0475  0720               	addwf	sprintf@f,w
  1298  0476  0084               	movwf	4
  1299  0477  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  1300  047C  00A3               	movwf	??_sprintf
  1301  047D  0823               	movf	??_sprintf,w
  1302  047E  00AE               	movwf	sprintf@c
  1303  047F  08AE               	movf	sprintf@c,f
  1304  0480  1903               	btfsc	3,2
  1305  0481  2D3F               	goto	l1836
  1306                           
  1307                           ;doprnt.c: 547: if(c != '%')
  1308  0482  082E               	movf	sprintf@c,w
  1309  0483  3A25               	xorlw	37
  1310  0484  1903               	skipnz
  1311  0485  2C92               	goto	l1790
  1312                           
  1313                           ;doprnt.c: 549: {
  1314                           ;doprnt.c: 550: ((*sp++ = (c)));
  1315  0486  082E               	movf	sprintf@c,w
  1316  0487  00A3               	movwf	??_sprintf
  1317  0488  082D               	movf	sprintf@sp,w
  1318  0489  0084               	movwf	4
  1319  048A  0823               	movf	??_sprintf,w
  1320  048B  1383               	bcf	3,7	;select IRP bank0
  1321  048C  0080               	movwf	0
  1322  048D  3001               	movlw	1
  1323  048E  00A3               	movwf	??_sprintf
  1324  048F  0823               	movf	??_sprintf,w
  1325  0490  07AD               	addwf	sprintf@sp,f
  1326                           
  1327                           ;doprnt.c: 551: continue;
  1328  0491  2C72               	goto	l1834
  1329  0492                     l1790:	
  1330                           
  1331                           ;doprnt.c: 552: }
  1332                           ;doprnt.c: 557: flag = 0;
  1333  0492  01A7               	clrf	sprintf@flag
  1334                           
  1335                           ;doprnt.c: 831: }
  1336                           
  1337                           ;doprnt.c: 822: continue;
  1338                           
  1339                           ;doprnt.c: 811: default:
  1340                           
  1341                           ;doprnt.c: 707: case 'i':
  1342                           ;doprnt.c: 708: break;
  1343                           
  1344                           ;doprnt.c: 706: case 'd':
  1345                           
  1346                           ;doprnt.c: 647: goto alldone;
  1347                           
  1348                           ;doprnt.c: 646: case 0:
  1349                           
  1350                           ;doprnt.c: 644: switch(c = *f++) {
  1351  0493  3001               	movlw	1
  1352  0494  07A0               	addwf	sprintf@f,f
  1353  0495  30FF               	movlw	-1
  1354  0496  0720               	addwf	sprintf@f,w
  1355  0497  0084               	movwf	4
  1356  0498  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  1357  049D  00AE               	movwf	sprintf@c
  1358                           
  1359                           ; Switch size 1, requested type "space"
  1360                           ; Number of cases is 3, Range of values is 0 to 105
  1361                           ; switch strategies available:
  1362                           ; Name         Instructions Cycles
  1363                           ; simple_byte           10     6 (average)
  1364                           ; jumptable            260     6 (fixed)
  1365                           ;	Chosen strategy is simple_byte
  1366  049E  3A00               	xorlw	0	; case 0
  1367  049F  1903               	skipnz
  1368  04A0  2D3F               	goto	l1836
  1369  04A1  3A64               	xorlw	100	; case 100
  1370  04A2  1903               	skipnz
  1371  04A3  2CA8               	goto	l1796
  1372  04A4  3A0D               	xorlw	13	; case 105
  1373  04A5  1903               	skipnz
  1374  04A6  2CA8               	goto	l1796
  1375  04A7  2C72               	goto	l1834
  1376  04A8                     l1796:	
  1377                           
  1378                           ;doprnt.c: 1262: {
  1379                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1380  04A8  0826               	movf	sprintf@ap,w
  1381  04A9  0084               	movwf	4
  1382  04AA  1383               	bcf	3,7	;select IRP bank0
  1383  04AB  0800               	movf	0,w
  1384  04AC  00A9               	movwf	sprintf@_val
  1385  04AD  0A84               	incf	4,f
  1386  04AE  0800               	movf	0,w
  1387  04AF  00AA               	movwf	sprintf@_val+1
  1388  04B0  3002               	movlw	2
  1389  04B1  00A3               	movwf	??_sprintf
  1390  04B2  0823               	movf	??_sprintf,w
  1391  04B3  07A6               	addwf	sprintf@ap,f
  1392                           
  1393                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  1394  04B4  1FAA               	btfss	sprintf@_val+1,7
  1395  04B5  2CBF               	goto	l1806
  1396                           
  1397                           ;doprnt.c: 1271: flag |= 0x03;
  1398  04B6  3003               	movlw	3
  1399  04B7  00A3               	movwf	??_sprintf
  1400  04B8  0823               	movf	??_sprintf,w
  1401  04B9  04A7               	iorwf	sprintf@flag,f
  1402                           
  1403                           ;doprnt.c: 1272: _val._val = -_val._val;
  1404  04BA  09A9               	comf	sprintf@_val,f
  1405  04BB  09AA               	comf	sprintf@_val+1,f
  1406  04BC  0AA9               	incf	sprintf@_val,f
  1407  04BD  1903               	skipnz
  1408  04BE  0AAA               	incf	sprintf@_val+1,f
  1409  04BF                     l1806:	
  1410                           
  1411                           ;doprnt.c: 1273: }
  1412                           ;doprnt.c: 1275: }
  1413                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1414  04BF  01AE               	clrf	sprintf@c
  1415  04C0  0AAE               	incf	sprintf@c,f
  1416  04C1  082E               	movf	sprintf@c,w
  1417  04C2  3A05               	xorlw	5
  1418  04C3  1903               	btfsc	3,2
  1419  04C4  2CE6               	goto	l1818
  1420  04C5                     l1810:	
  1421                           
  1422                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  1423  04C5  082E               	movf	sprintf@c,w
  1424  04C6  00A3               	movwf	??_sprintf
  1425  04C7  0723               	addwf	??_sprintf,w
  1426  04C8  3E01               	addlw	low (_dpowers-__stringbase)
  1427  04C9  0084               	movwf	4
  1428  04CA  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  1429  04CF  00A4               	movwf	??_sprintf+1
  1430  04D0  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  1431  04D5  00A5               	movwf	??_sprintf+2
  1432  04D6  0825               	movf	??_sprintf+2,w
  1433  04D7  022A               	subwf	sprintf@_val+1,w
  1434  04D8  1D03               	skipz
  1435  04D9  2CDC               	goto	u955
  1436  04DA  0824               	movf	??_sprintf+1,w
  1437  04DB  0229               	subwf	sprintf@_val,w
  1438  04DC                     u955:	
  1439  04DC  1C03               	btfss	3,0
  1440  04DD  2CE6               	goto	l1818
  1441                           
  1442                           ;doprnt.c: 1316: break;
  1443  04DE  3001               	movlw	1
  1444  04DF  00A3               	movwf	??_sprintf
  1445  04E0  0823               	movf	??_sprintf,w
  1446  04E1  07AE               	addwf	sprintf@c,f
  1447  04E2  082E               	movf	sprintf@c,w
  1448  04E3  3A05               	xorlw	5
  1449  04E4  1D03               	skipz
  1450  04E5  2CC5               	goto	l1810
  1451  04E6                     l1818:	
  1452                           
  1453                           ;doprnt.c: 1431: {
  1454                           ;doprnt.c: 1447: if(flag & 0x03)
  1455  04E6  0827               	movf	sprintf@flag,w
  1456  04E7  3903               	andlw	3
  1457  04E8  1903               	btfsc	3,2
  1458  04E9  2CF5               	goto	l1824
  1459                           
  1460                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  1461  04EA  302D               	movlw	45
  1462  04EB  00A3               	movwf	??_sprintf
  1463  04EC  082D               	movf	sprintf@sp,w
  1464  04ED  0084               	movwf	4
  1465  04EE  0823               	movf	??_sprintf,w
  1466  04EF  1383               	bcf	3,7	;select IRP bank0
  1467  04F0  0080               	movwf	0
  1468  04F1  3001               	movlw	1
  1469  04F2  00A3               	movwf	??_sprintf
  1470  04F3  0823               	movf	??_sprintf,w
  1471  04F4  07AD               	addwf	sprintf@sp,f
  1472  04F5                     l1824:	
  1473                           
  1474                           ;doprnt.c: 1478: }
  1475                           ;doprnt.c: 1481: prec = c;
  1476  04F5  082E               	movf	sprintf@c,w
  1477  04F6  00A3               	movwf	??_sprintf
  1478  04F7  0823               	movf	??_sprintf,w
  1479  04F8  00A8               	movwf	sprintf@prec
  1480  04F9                     l1832:	
  1481                           ;doprnt.c: 1483: while(prec--) {
  1482                           
  1483  04F9  30FF               	movlw	-1
  1484  04FA  00A3               	movwf	??_sprintf
  1485  04FB  0823               	movf	??_sprintf,w
  1486  04FC  07A8               	addwf	sprintf@prec,f
  1487  04FD  0828               	movf	sprintf@prec,w
  1488  04FE  3AFF               	xorlw	-1
  1489  04FF  1903               	btfsc	3,2
  1490  0500  2C72               	goto	l1834
  1491                           
  1492                           ;doprnt.c: 1487: {
  1493                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  1494  0501  300A               	movlw	10
  1495  0502  00F8               	movwf	___lwmod@divisor
  1496  0503  3000               	movlw	0
  1497  0504  00F9               	movwf	___lwmod@divisor+1
  1498  0505  0828               	movf	sprintf@prec,w
  1499  0506  00A3               	movwf	??_sprintf
  1500  0507  0723               	addwf	??_sprintf,w
  1501  0508  3E01               	addlw	low (_dpowers-__stringbase)
  1502  0509  0084               	movwf	4
  1503  050A  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  1504  050F  00F0               	movwf	___lwdiv@divisor
  1505  0510  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  1506  0515  00F1               	movwf	___lwdiv@divisor+1
  1507  0516  082A               	movf	sprintf@_val+1,w
  1508  0517  01F3               	clrf	___lwdiv@dividend+1
  1509  0518  07F3               	addwf	___lwdiv@dividend+1,f
  1510  0519  0829               	movf	sprintf@_val,w
  1511  051A  01F2               	clrf	___lwdiv@dividend
  1512  051B  07F2               	addwf	___lwdiv@dividend,f
  1513  051C  120A  118A  2338   	fcall	___lwdiv
      +       120A  118A         
  1514  0521  0871               	movf	?___lwdiv+1,w
  1515  0522  01FB               	clrf	___lwmod@dividend+1
  1516  0523  07FB               	addwf	___lwmod@dividend+1,f
  1517  0524  0870               	movf	?___lwdiv,w
  1518  0525  01FA               	clrf	___lwmod@dividend
  1519  0526  07FA               	addwf	___lwmod@dividend,f
  1520  0527  120A  118A  22CE   	fcall	___lwmod
      +       120A  118A         
  1521  052C  0878               	movf	?___lwmod,w
  1522  052D  3E30               	addlw	48
  1523  052E  1283               	bcf	3,5	;RP0=0, select bank0
  1524  052F  1303               	bcf	3,6	;RP1=0, select bank0
  1525  0530  00A4               	movwf	??_sprintf+1
  1526  0531  0824               	movf	??_sprintf+1,w
  1527  0532  00AE               	movwf	sprintf@c
  1528                           
  1529                           ;doprnt.c: 1532: }
  1530                           ;doprnt.c: 1533: ((*sp++ = (c)));
  1531  0533  082E               	movf	sprintf@c,w
  1532  0534  00A3               	movwf	??_sprintf
  1533  0535  082D               	movf	sprintf@sp,w
  1534  0536  0084               	movwf	4
  1535  0537  0823               	movf	??_sprintf,w
  1536  0538  1383               	bcf	3,7	;select IRP bank0
  1537  0539  0080               	movwf	0
  1538  053A  3001               	movlw	1
  1539  053B  00A3               	movwf	??_sprintf
  1540  053C  0823               	movf	??_sprintf,w
  1541  053D  07AD               	addwf	sprintf@sp,f
  1542  053E  2CF9               	goto	l1832
  1543  053F                     l1836:	
  1544                           ;doprnt.c: 1534: }
  1545                           ;doprnt.c: 1542: }
  1546                           ;doprnt.c: 1544: alldone:
  1547                           
  1548                           
  1549                           ;doprnt.c: 1547: *sp = 0;
  1550  053F  082D               	movf	sprintf@sp,w
  1551  0540  0084               	movwf	4
  1552  0541  1383               	bcf	3,7	;select IRP bank0
  1553  0542  0180               	clrf	0
  1554  0543  0008               	return
  1555  0544                     __end_of_sprintf:	
  1556                           ;doprnt.c: 1549: return 0;
  1557                           ;	Return value of _sprintf is never used
  1558                           
  1559                           
  1560                           	psect	text2
  1561  02CE                     __ptext2:	
  1562 ;; *************** function ___lwmod *****************
  1563 ;; Defined at:
  1564 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;  divisor         2    8[COMMON] unsigned int 
  1567 ;;  dividend        2   10[COMMON] unsigned int 
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;  counter         1   13[COMMON] unsigned char 
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  2    8[COMMON] unsigned int 
  1572 ;; Registers used:
  1573 ;;		wreg, status,2, status,0
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1579 ;;      Params:         4       0       0       0       0
  1580 ;;      Locals:         1       0       0       0       0
  1581 ;;      Temps:          1       0       0       0       0
  1582 ;;      Totals:         6       0       0       0       0
  1583 ;;Total ram usage:        6 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; This function calls:
  1586 ;;		Nothing
  1587 ;; This function is called by:
  1588 ;;		_sprintf
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           
  1593                           ;psect for function ___lwmod
  1594  02CE                     ___lwmod:	
  1595                           
  1596                           ;incstack = 0
  1597                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1598  02CE  0879               	movf	___lwmod@divisor+1,w
  1599  02CF  0478               	iorwf	___lwmod@divisor,w
  1600  02D0  1903               	skipnz
  1601  02D1  2AFB               	goto	l1770
  1602  02D2  01FD               	clrf	___lwmod@counter
  1603  02D3  0AFD               	incf	___lwmod@counter,f
  1604  02D4                     l1760:	
  1605  02D4  1BF9               	btfsc	___lwmod@divisor+1,7
  1606  02D5  2AE2               	goto	l1762
  1607  02D6  3001               	movlw	1
  1608  02D7                     u865:	
  1609  02D7  1003               	clrc
  1610  02D8  0DF8               	rlf	___lwmod@divisor,f
  1611  02D9  0DF9               	rlf	___lwmod@divisor+1,f
  1612  02DA  3EFF               	addlw	-1
  1613  02DB  1D03               	skipz
  1614  02DC  2AD7               	goto	u865
  1615  02DD  3001               	movlw	1
  1616  02DE  00FC               	movwf	??___lwmod
  1617  02DF  087C               	movf	??___lwmod,w
  1618  02E0  07FD               	addwf	___lwmod@counter,f
  1619  02E1  2AD4               	goto	l1760
  1620  02E2                     l1762:	
  1621  02E2  0879               	movf	___lwmod@divisor+1,w
  1622  02E3  027B               	subwf	___lwmod@dividend+1,w
  1623  02E4  1D03               	skipz
  1624  02E5  2AE8               	goto	u885
  1625  02E6  0878               	movf	___lwmod@divisor,w
  1626  02E7  027A               	subwf	___lwmod@dividend,w
  1627  02E8                     u885:	
  1628  02E8  1C03               	skipc
  1629  02E9  2AF0               	goto	l1766
  1630  02EA  0878               	movf	___lwmod@divisor,w
  1631  02EB  02FA               	subwf	___lwmod@dividend,f
  1632  02EC  0879               	movf	___lwmod@divisor+1,w
  1633  02ED  1C03               	skipc
  1634  02EE  03FB               	decf	___lwmod@dividend+1,f
  1635  02EF  02FB               	subwf	___lwmod@dividend+1,f
  1636  02F0                     l1766:	
  1637  02F0  3001               	movlw	1
  1638  02F1                     u895:	
  1639  02F1  1003               	clrc
  1640  02F2  0CF9               	rrf	___lwmod@divisor+1,f
  1641  02F3  0CF8               	rrf	___lwmod@divisor,f
  1642  02F4  3EFF               	addlw	-1
  1643  02F5  1D03               	skipz
  1644  02F6  2AF1               	goto	u895
  1645  02F7  3001               	movlw	1
  1646  02F8  02FD               	subwf	___lwmod@counter,f
  1647  02F9  1D03               	btfss	3,2
  1648  02FA  2AE2               	goto	l1762
  1649  02FB                     l1770:	
  1650  02FB  087B               	movf	___lwmod@dividend+1,w
  1651  02FC  01F9               	clrf	?___lwmod+1
  1652  02FD  07F9               	addwf	?___lwmod+1,f
  1653  02FE  087A               	movf	___lwmod@dividend,w
  1654  02FF  01F8               	clrf	?___lwmod
  1655  0300  07F8               	addwf	?___lwmod,f
  1656  0301  0008               	return
  1657  0302                     __end_of___lwmod:	
  1658                           
  1659                           	psect	text3
  1660  0338                     __ptext3:	
  1661 ;; *************** function ___lwdiv *****************
  1662 ;; Defined at:
  1663 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwdiv.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  divisor         2    0[COMMON] unsigned int 
  1666 ;;  dividend        2    2[COMMON] unsigned int 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  quotient        2    5[COMMON] unsigned int 
  1669 ;;  counter         1    7[COMMON] unsigned char 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  2    0[COMMON] unsigned int 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1679 ;;      Params:         4       0       0       0       0
  1680 ;;      Locals:         3       0       0       0       0
  1681 ;;      Temps:          1       0       0       0       0
  1682 ;;      Totals:         8       0       0       0       0
  1683 ;;Total ram usage:        8 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_sprintf
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           
  1693                           ;psect for function ___lwdiv
  1694  0338                     ___lwdiv:	
  1695                           
  1696                           ;incstack = 0
  1697                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1698  0338  01F5               	clrf	___lwdiv@quotient
  1699  0339  01F6               	clrf	___lwdiv@quotient+1
  1700  033A  0871               	movf	___lwdiv@divisor+1,w
  1701  033B  0470               	iorwf	___lwdiv@divisor,w
  1702  033C  1903               	skipnz
  1703  033D  2B6F               	goto	l1694
  1704  033E  01F7               	clrf	___lwdiv@counter
  1705  033F  0AF7               	incf	___lwdiv@counter,f
  1706  0340                     l1682:	
  1707  0340  1BF1               	btfsc	___lwdiv@divisor+1,7
  1708  0341  2B4E               	goto	l1684
  1709  0342  3001               	movlw	1
  1710  0343                     u745:	
  1711  0343  1003               	clrc
  1712  0344  0DF0               	rlf	___lwdiv@divisor,f
  1713  0345  0DF1               	rlf	___lwdiv@divisor+1,f
  1714  0346  3EFF               	addlw	-1
  1715  0347  1D03               	skipz
  1716  0348  2B43               	goto	u745
  1717  0349  3001               	movlw	1
  1718  034A  00F4               	movwf	??___lwdiv
  1719  034B  0874               	movf	??___lwdiv,w
  1720  034C  07F7               	addwf	___lwdiv@counter,f
  1721  034D  2B40               	goto	l1682
  1722  034E                     l1684:	
  1723  034E  3001               	movlw	1
  1724  034F                     u765:	
  1725  034F  1003               	clrc
  1726  0350  0DF5               	rlf	___lwdiv@quotient,f
  1727  0351  0DF6               	rlf	___lwdiv@quotient+1,f
  1728  0352  3EFF               	addlw	-1
  1729  0353  1D03               	skipz
  1730  0354  2B4F               	goto	u765
  1731  0355  0871               	movf	___lwdiv@divisor+1,w
  1732  0356  0273               	subwf	___lwdiv@dividend+1,w
  1733  0357  1D03               	skipz
  1734  0358  2B5B               	goto	u775
  1735  0359  0870               	movf	___lwdiv@divisor,w
  1736  035A  0272               	subwf	___lwdiv@dividend,w
  1737  035B                     u775:	
  1738  035B  1C03               	skipc
  1739  035C  2B64               	goto	l1690
  1740  035D  0870               	movf	___lwdiv@divisor,w
  1741  035E  02F2               	subwf	___lwdiv@dividend,f
  1742  035F  0871               	movf	___lwdiv@divisor+1,w
  1743  0360  1C03               	skipc
  1744  0361  03F3               	decf	___lwdiv@dividend+1,f
  1745  0362  02F3               	subwf	___lwdiv@dividend+1,f
  1746  0363  1475               	bsf	___lwdiv@quotient,0
  1747  0364                     l1690:	
  1748  0364  3001               	movlw	1
  1749  0365                     u785:	
  1750  0365  1003               	clrc
  1751  0366  0CF1               	rrf	___lwdiv@divisor+1,f
  1752  0367  0CF0               	rrf	___lwdiv@divisor,f
  1753  0368  3EFF               	addlw	-1
  1754  0369  1D03               	skipz
  1755  036A  2B65               	goto	u785
  1756  036B  3001               	movlw	1
  1757  036C  02F7               	subwf	___lwdiv@counter,f
  1758  036D  1D03               	btfss	3,2
  1759  036E  2B4E               	goto	l1684
  1760  036F                     l1694:	
  1761  036F  0876               	movf	___lwdiv@quotient+1,w
  1762  0370  01F1               	clrf	?___lwdiv+1
  1763  0371  07F1               	addwf	?___lwdiv+1,f
  1764  0372  0875               	movf	___lwdiv@quotient,w
  1765  0373  01F0               	clrf	?___lwdiv
  1766  0374  07F0               	addwf	?___lwdiv,f
  1767  0375  0008               	return
  1768  0376                     __end_of___lwdiv:	
  1769                           
  1770                           	psect	text4
  1771  03BD                     __ptext4:	
  1772 ;; *************** function _setDestination *****************
  1773 ;; Defined at:
  1774 ;;		line 145 in file "..\Header Files\..\C Source Code\ZIGBEE_16F_MASTER.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;  destination     1    wreg     PTR const unsigned char 
  1777 ;;		 -> STR_11(17), 
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;  destination     1   18[BANK0 ] PTR const unsigned char 
  1780 ;;		 -> STR_11(17), 
  1781 ;;  iter            1   20[BANK0 ] unsigned char 
  1782 ;;  iter            1   19[BANK0 ] unsigned char 
  1783 ;;  subbuff2        9    9[BANK0 ] unsigned char [9]
  1784 ;;  subbuff         9    0[BANK0 ] unsigned char [9]
  1785 ;; Return value:  Size  Location     Type
  1786 ;;		None               void
  1787 ;; Registers used:
  1788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1794 ;;      Params:         0       0       0       0       0
  1795 ;;      Locals:         0      21       0       0       0
  1796 ;;      Temps:          2       0       0       0       0
  1797 ;;      Totals:         2      21       0       0       0
  1798 ;;Total ram usage:       23 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; Hardware stack levels required when called:    3
  1801 ;; This function calls:
  1802 ;;		_flush_RCREG
  1803 ;;		_get_USART_char
  1804 ;;		_memcpy
  1805 ;;		_send_USART_string
  1806 ;; This function is called by:
  1807 ;;		_main
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           
  1812                           ;psect for function _setDestination
  1813  03BD                     _setDestination:	
  1814                           
  1815                           ;incstack = 0
  1816                           ; Regs used in _setDestination: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1817                           ;setDestination@destination stored from wreg
  1818  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  1819  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  1820  03BF  00B2               	movwf	setDestination@destination
  1821                           
  1822                           ;ZIGBEE_16F_MASTER.c: 152: flush_RCREG();
  1823  03C0  120A  118A  2185   	fcall	_flush_RCREG
      +       120A  118A         
  1824                           
  1825                           ;ZIGBEE_16F_MASTER.c: 153: send_USART_string("ATDH");
  1826  03C5  3034               	movlw	low (STR_5-__stringbase)
  1827  03C6  00F6               	movwf	send_USART_string@string
  1828  03C7  3080               	movlw	128
  1829  03C8  00F7               	movwf	send_USART_string@string+1
  1830  03C9  120A  118A  229F   	fcall	_send_USART_string
      +       120A  118A         
  1831                           
  1832                           ;ZIGBEE_16F_MASTER.c: 156: char subbuff[9];
  1833                           ;ZIGBEE_16F_MASTER.c: 157: memcpy( subbuff, &destination[0], 8 );
  1834  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  1835  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  1836  03D0  0832               	movf	setDestination@destination,w
  1837  03D1  00FB               	movwf	??_setDestination
  1838  03D2  087B               	movf	??_setDestination,w
  1839  03D3  00F0               	movwf	memcpy@s1
  1840  03D4  3008               	movlw	8
  1841  03D5  00F1               	movwf	memcpy@n
  1842  03D6  3000               	movlw	0
  1843  03D7  00F2               	movwf	memcpy@n+1
  1844  03D8  3020               	movlw	setDestination@subbuff& (0+255)
  1845  03D9  120A  118A  2244   	fcall	_memcpy
      +       120A  118A         
  1846                           
  1847                           ;ZIGBEE_16F_MASTER.c: 158: subbuff[8] = '\0';
  1848  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  1849  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  1850  03E0  01A8               	clrf	setDestination@subbuff+8
  1851                           
  1852                           ;ZIGBEE_16F_MASTER.c: 159: send_USART_string(subbuff);
  1853  03E1  3020               	movlw	setDestination@subbuff& (0+255)
  1854  03E2  00F6               	movwf	send_USART_string@string
  1855  03E3  3000               	movlw	0
  1856  03E4  00F7               	movwf	send_USART_string@string+1
  1857  03E5  120A  118A  229F   	fcall	_send_USART_string
      +       120A  118A         
  1858                           
  1859                           ;ZIGBEE_16F_MASTER.c: 161: send_USART_string("\r");
  1860  03EA  3020               	movlw	low ((STR_1+4)-__stringbase)
  1861  03EB  00F6               	movwf	send_USART_string@string
  1862  03EC  3080               	movlw	128
  1863  03ED  00F7               	movwf	send_USART_string@string+1
  1864  03EE  120A  118A  229F   	fcall	_send_USART_string
      +       120A  118A         
  1865                           
  1866                           ;ZIGBEE_16F_MASTER.c: 164: for(char iter = 0; iter < 2; iter++)
  1867  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  1868  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  1869  03F5  01B3               	clrf	setDestination@iter
  1870  03F6  3002               	movlw	2
  1871  03F7  0233               	subwf	setDestination@iter,w
  1872  03F8  1803               	btfsc	3,0
  1873  03F9  2C10               	goto	l1966
  1874  03FA                     l1960:	
  1875                           
  1876                           ;ZIGBEE_16F_MASTER.c: 165: {BYTES_BUFFER[iter] = get_USART_char();}
  1877  03FA  120A  118A  217A   	fcall	_get_USART_char
      +       120A  118A         
  1878  03FF  00FB               	movwf	??_setDestination
  1879  0400  1283               	bcf	3,5	;RP0=0, select bank0
  1880  0401  1303               	bcf	3,6	;RP1=0, select bank0
  1881  0402  0833               	movf	setDestination@iter,w
  1882  0403  3EA0               	addlw	_BYTES_BUFFER& (0+255)
  1883  0404  0084               	movwf	4
  1884  0405  087B               	movf	??_setDestination,w
  1885  0406  1383               	bcf	3,7	;select IRP bank1
  1886  0407  0080               	movwf	0
  1887  0408  3001               	movlw	1
  1888  0409  00FB               	movwf	??_setDestination
  1889  040A  087B               	movf	??_setDestination,w
  1890  040B  07B3               	addwf	setDestination@iter,f
  1891  040C  3002               	movlw	2
  1892  040D  0233               	subwf	setDestination@iter,w
  1893  040E  1C03               	skipc
  1894  040F  2BFA               	goto	l1960
  1895  0410                     l1966:	
  1896                           
  1897                           ;ZIGBEE_16F_MASTER.c: 169: flush_RCREG();
  1898  0410  120A  118A  2185   	fcall	_flush_RCREG
      +       120A  118A         
  1899                           
  1900                           ;ZIGBEE_16F_MASTER.c: 170: send_USART_string("ATDL");
  1901  0415  3039               	movlw	low (STR_7-__stringbase)
  1902  0416  00F6               	movwf	send_USART_string@string
  1903  0417  3080               	movlw	128
  1904  0418  00F7               	movwf	send_USART_string@string+1
  1905  0419  120A  118A  229F   	fcall	_send_USART_string
      +       120A  118A         
  1906                           
  1907                           ;ZIGBEE_16F_MASTER.c: 173: char subbuff2[9];
  1908                           ;ZIGBEE_16F_MASTER.c: 174: memcpy( subbuff2, &destination[8], 8 );
  1909  041E  1283               	bcf	3,5	;RP0=0, select bank0
  1910  041F  1303               	bcf	3,6	;RP1=0, select bank0
  1911  0420  0832               	movf	setDestination@destination,w
  1912  0421  3E08               	addlw	8
  1913  0422  00FB               	movwf	??_setDestination
  1914  0423  087B               	movf	??_setDestination,w
  1915  0424  00F0               	movwf	memcpy@s1
  1916  0425  3008               	movlw	8
  1917  0426  00F1               	movwf	memcpy@n
  1918  0427  3000               	movlw	0
  1919  0428  00F2               	movwf	memcpy@n+1
  1920  0429  3029               	movlw	setDestination@subbuff2& (0+255)
  1921  042A  120A  118A  2244   	fcall	_memcpy
      +       120A  118A         
  1922                           
  1923                           ;ZIGBEE_16F_MASTER.c: 175: subbuff2[8] = '\0';
  1924  042F  1283               	bcf	3,5	;RP0=0, select bank0
  1925  0430  1303               	bcf	3,6	;RP1=0, select bank0
  1926  0431  01B1               	clrf	setDestination@subbuff2+8
  1927                           
  1928                           ;ZIGBEE_16F_MASTER.c: 176: send_USART_string(subbuff2);
  1929  0432  3029               	movlw	setDestination@subbuff2& (0+255)
  1930  0433  00F6               	movwf	send_USART_string@string
  1931  0434  3000               	movlw	0
  1932  0435  00F7               	movwf	send_USART_string@string+1
  1933  0436  120A  118A  229F   	fcall	_send_USART_string
      +       120A  118A         
  1934                           
  1935                           ;ZIGBEE_16F_MASTER.c: 178: send_USART_string("\r");
  1936  043B  3020               	movlw	low ((STR_1+4)-__stringbase)
  1937  043C  00F6               	movwf	send_USART_string@string
  1938  043D  3080               	movlw	128
  1939  043E  00F7               	movwf	send_USART_string@string+1
  1940  043F  120A  118A  229F   	fcall	_send_USART_string
      +       120A  118A         
  1941                           
  1942                           ;ZIGBEE_16F_MASTER.c: 181: for(char iter = 0; iter < 2; iter++)
  1943  0444  1283               	bcf	3,5	;RP0=0, select bank0
  1944  0445  1303               	bcf	3,6	;RP1=0, select bank0
  1945  0446  01B4               	clrf	setDestination@iter_144
  1946  0447  3002               	movlw	2
  1947  0448  0234               	subwf	setDestination@iter_144,w
  1948  0449  1803               	btfsc	3,0
  1949  044A  2C61               	goto	l1990
  1950  044B                     l1984:	
  1951                           
  1952                           ;ZIGBEE_16F_MASTER.c: 182: {BYTES_BUFFER[iter] = get_USART_char();}
  1953  044B  120A  118A  217A   	fcall	_get_USART_char
      +       120A  118A         
  1954  0450  00FB               	movwf	??_setDestination
  1955  0451  1283               	bcf	3,5	;RP0=0, select bank0
  1956  0452  1303               	bcf	3,6	;RP1=0, select bank0
  1957  0453  0834               	movf	setDestination@iter_144,w
  1958  0454  3EA0               	addlw	_BYTES_BUFFER& (0+255)
  1959  0455  0084               	movwf	4
  1960  0456  087B               	movf	??_setDestination,w
  1961  0457  1383               	bcf	3,7	;select IRP bank1
  1962  0458  0080               	movwf	0
  1963  0459  3001               	movlw	1
  1964  045A  00FB               	movwf	??_setDestination
  1965  045B  087B               	movf	??_setDestination,w
  1966  045C  07B4               	addwf	setDestination@iter_144,f
  1967  045D  3002               	movlw	2
  1968  045E  0234               	subwf	setDestination@iter_144,w
  1969  045F  1C03               	skipc
  1970  0460  2C4B               	goto	l1984
  1971  0461                     l1990:	
  1972                           
  1973                           ;ZIGBEE_16F_MASTER.c: 184: _delay((unsigned long)((10)*(4000000/4000.0)));
  1974  0461  300D               	movlw	13
  1975  0462  00FC               	movwf	??_setDestination+1
  1976  0463  30FB               	movlw	251
  1977  0464  00FB               	movwf	??_setDestination
  1978  0465                     u1457:	
  1979  0465  0BFB               	decfsz	??_setDestination,f
  1980  0466  2C65               	goto	u1457
  1981  0467  0BFC               	decfsz	??_setDestination+1,f
  1982  0468  2C65               	goto	u1457
  1983  0469  2C6A               	nop2
  1984  046A  0008               	return
  1985  046B                     __end_of_setDestination:	
  1986                           
  1987                           	psect	text5
  1988  0244                     __ptext5:	
  1989 ;; *************** function _memcpy *****************
  1990 ;; Defined at:
  1991 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  d1              1    wreg     PTR void 
  1994 ;;		 -> setDestination@subbuff2(9), setDestination@subbuff(9), 
  1995 ;;  s1              1    0[COMMON] PTR const void 
  1996 ;;		 -> STR_11(17), 
  1997 ;;  n               2    1[COMMON] unsigned int 
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;  d1              1    6[COMMON] PTR void 
  2000 ;;		 -> setDestination@subbuff2(9), setDestination@subbuff(9), 
  2001 ;;  s               1    5[COMMON] PTR const unsigned char 
  2002 ;;		 -> STR_11(17), 
  2003 ;;  d               1    4[COMMON] PTR unsigned char 
  2004 ;;		 -> setDestination@subbuff2(9), setDestination@subbuff(9), 
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      PTR void 
  2007 ;; Registers used:
  2008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2014 ;;      Params:         3       0       0       0       0
  2015 ;;      Locals:         3       0       0       0       0
  2016 ;;      Temps:          1       0       0       0       0
  2017 ;;      Totals:         7       0       0       0       0
  2018 ;;Total ram usage:        7 bytes
  2019 ;; Hardware stack levels used:    2
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_setDestination
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           
  2028                           ;psect for function _memcpy
  2029  0244                     _memcpy:	
  2030                           
  2031                           ;incstack = 0
  2032                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0+pclath]
  2033                           ;memcpy@d1 stored from wreg
  2034  0244  00F6               	movwf	memcpy@d1
  2035  0245  0870               	movf	memcpy@s1,w
  2036  0246  00F3               	movwf	??_memcpy
  2037  0247  0873               	movf	??_memcpy,w
  2038  0248  00F5               	movwf	memcpy@s
  2039  0249  0876               	movf	memcpy@d1,w
  2040  024A  00F3               	movwf	??_memcpy
  2041  024B  0873               	movf	??_memcpy,w
  2042  024C  00F4               	movwf	memcpy@d
  2043  024D                     l1652:	
  2044  024D  3001               	movlw	1
  2045  024E  02F1               	subwf	memcpy@n,f
  2046  024F  3000               	movlw	0
  2047  0250  1C03               	skipc
  2048  0251  03F2               	decf	memcpy@n+1,f
  2049  0252  02F2               	subwf	memcpy@n+1,f
  2050  0253  30FF               	movlw	255
  2051  0254  0672               	xorwf	memcpy@n+1,w
  2052  0255  1D03               	skipz
  2053  0256  2A59               	goto	u725
  2054  0257  30FF               	movlw	255
  2055  0258  0671               	xorwf	memcpy@n,w
  2056  0259                     u725:	
  2057  0259  1903               	btfsc	3,2
  2058  025A  0008               	return
  2059  025B  0875               	movf	memcpy@s,w
  2060  025C  0084               	movwf	4
  2061  025D  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  2062  0262  00F3               	movwf	??_memcpy
  2063  0263  0874               	movf	memcpy@d,w
  2064  0264  0084               	movwf	4
  2065  0265  0873               	movf	??_memcpy,w
  2066  0266  1383               	bcf	3,7	;select IRP bank0
  2067  0267  0080               	movwf	0
  2068  0268  3001               	movlw	1
  2069  0269  00F3               	movwf	??_memcpy
  2070  026A  0873               	movf	??_memcpy,w
  2071  026B  07F5               	addwf	memcpy@s,f
  2072  026C  3001               	movlw	1
  2073  026D  00F3               	movwf	??_memcpy
  2074  026E  0873               	movf	??_memcpy,w
  2075  026F  07F4               	addwf	memcpy@d,f
  2076  0270  2A4D               	goto	l1652
  2077  0271                     __end_of_memcpy:	
  2078                           ;	Return value of _memcpy is never used
  2079                           
  2080                           
  2081                           	psect	text6
  2082  0544                     __ptext6:	
  2083 ;; *************** function _getIdentification *****************
  2084 ;; Defined at:
  2085 ;;		line 80 in file "..\Header Files\..\C Source Code\ZIGBEE_16F_MASTER.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  result          1    wreg     PTR unsigned char 
  2088 ;;		 -> main@mobile(17), 
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;  result          1   12[BANK0 ] PTR unsigned char 
  2091 ;;		 -> main@mobile(17), 
  2092 ;;  iter            1   16[BANK0 ] unsigned char 
  2093 ;;  iter            1   15[BANK0 ] char 
  2094 ;;  iter            1   11[BANK0 ] unsigned char 
  2095 ;;  iter            1   14[BANK0 ] unsigned char 
  2096 ;;  iter            1   13[BANK0 ] char 
  2097 ;;  iter            1   10[BANK0 ] unsigned char 
  2098 ;;  iter            1    9[BANK0 ] unsigned char 
  2099 ;;  temp            8    0[BANK0 ] unsigned char [8]
  2100 ;;  offset          1    8[BANK0 ] unsigned char 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;		None               void
  2103 ;; Registers used:
  2104 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2110 ;;      Params:         0       0       0       0       0
  2111 ;;      Locals:         0      17       0       0       0
  2112 ;;      Temps:          2       0       0       0       0
  2113 ;;      Totals:         2      17       0       0       0
  2114 ;;Total ram usage:       19 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    3
  2117 ;; This function calls:
  2118 ;;		_flush_RCREG
  2119 ;;		_get_USART_char_timeout
  2120 ;;		_send_USART_string
  2121 ;; This function is called by:
  2122 ;;		_main
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           
  2127                           ;psect for function _getIdentification
  2128  0544                     _getIdentification:	
  2129                           
  2130                           ;incstack = 0
  2131                           ; Regs used in _getIdentification: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2132                           ;getIdentification@result stored from wreg
  2133  0544  1283               	bcf	3,5	;RP0=0, select bank0
  2134  0545  1303               	bcf	3,6	;RP1=0, select bank0
  2135  0546  00AC               	movwf	getIdentification@result
  2136                           
  2137                           ;ZIGBEE_16F_MASTER.c: 87: for(char iter = 0; iter < 16; iter++)
  2138  0547  01A9               	clrf	getIdentification@iter
  2139  0548  3010               	movlw	16
  2140  0549  0229               	subwf	getIdentification@iter,w
  2141  054A  1803               	btfsc	3,0
  2142  054B  2D5E               	goto	l1852
  2143  054C                     l1846:	
  2144                           
  2145                           ;ZIGBEE_16F_MASTER.c: 88: {result[iter] = '0';}
  2146  054C  3030               	movlw	48
  2147  054D  00FB               	movwf	??_getIdentification
  2148  054E  0829               	movf	getIdentification@iter,w
  2149  054F  072C               	addwf	getIdentification@result,w
  2150  0550  00FC               	movwf	??_getIdentification+1
  2151  0551  087C               	movf	??_getIdentification+1,w
  2152  0552  0084               	movwf	4
  2153  0553  087B               	movf	??_getIdentification,w
  2154  0554  1383               	bcf	3,7	;select IRP bank0
  2155  0555  0080               	movwf	0
  2156  0556  3001               	movlw	1
  2157  0557  00FB               	movwf	??_getIdentification
  2158  0558  087B               	movf	??_getIdentification,w
  2159  0559  07A9               	addwf	getIdentification@iter,f
  2160  055A  3010               	movlw	16
  2161  055B  0229               	subwf	getIdentification@iter,w
  2162  055C  1C03               	skipc
  2163  055D  2D4C               	goto	l1846
  2164  055E                     l1852:	
  2165                           
  2166                           ;ZIGBEE_16F_MASTER.c: 91: result[16] = '\0';
  2167  055E  082C               	movf	getIdentification@result,w
  2168  055F  3E10               	addlw	16
  2169  0560  0084               	movwf	4
  2170  0561  1383               	bcf	3,7	;select IRP bank0
  2171  0562  0180               	clrf	0
  2172                           
  2173                           ;ZIGBEE_16F_MASTER.c: 94: flush_RCREG();
  2174  0563  120A  118A  2185   	fcall	_flush_RCREG
      +       120A  118A         
  2175                           
  2176                           ;ZIGBEE_16F_MASTER.c: 95: send_USART_string("ATSH\r");
  2177  0568  3022               	movlw	low (STR_3-__stringbase)
  2178  0569  00F6               	movwf	send_USART_string@string
  2179  056A  3080               	movlw	128
  2180  056B  00F7               	movwf	send_USART_string@string+1
  2181  056C  120A  118A  229F   	fcall	_send_USART_string
      +       120A  118A         
  2182                           
  2183                           ;ZIGBEE_16F_MASTER.c: 97: char temp[8];
  2184                           ;ZIGBEE_16F_MASTER.c: 98: char offset = 0;
  2185  0571  1283               	bcf	3,5	;RP0=0, select bank0
  2186  0572  1303               	bcf	3,6	;RP1=0, select bank0
  2187  0573  01A8               	clrf	getIdentification@offset
  2188                           
  2189                           ;ZIGBEE_16F_MASTER.c: 102: for(char iter = 0; iter < 8; iter++)
  2190  0574  01AA               	clrf	getIdentification@iter_128
  2191  0575  3008               	movlw	8
  2192  0576  022A               	subwf	getIdentification@iter_128,w
  2193  0577  1803               	btfsc	3,0
  2194  0578  2D8F               	goto	l1872
  2195  0579                     l1866:	
  2196                           
  2197                           ;ZIGBEE_16F_MASTER.c: 103: {temp[iter] = get_USART_char_timeout();}
  2198  0579  120A  118A  2271   	fcall	_get_USART_char_timeout
      +       120A  118A         
  2199  057E  00FB               	movwf	??_getIdentification
  2200  057F  1283               	bcf	3,5	;RP0=0, select bank0
  2201  0580  1303               	bcf	3,6	;RP1=0, select bank0
  2202  0581  082A               	movf	getIdentification@iter_128,w
  2203  0582  3E20               	addlw	getIdentification@temp& (0+255)
  2204  0583  0084               	movwf	4
  2205  0584  087B               	movf	??_getIdentification,w
  2206  0585  1383               	bcf	3,7	;select IRP bank0
  2207  0586  0080               	movwf	0
  2208  0587  3001               	movlw	1
  2209  0588  00FB               	movwf	??_getIdentification
  2210  0589  087B               	movf	??_getIdentification,w
  2211  058A  07AA               	addwf	getIdentification@iter_128,f
  2212  058B  3008               	movlw	8
  2213  058C  022A               	subwf	getIdentification@iter_128,w
  2214  058D  1C03               	skipc
  2215  058E  2D79               	goto	l1866
  2216  058F                     l1872:	
  2217                           
  2218                           ;ZIGBEE_16F_MASTER.c: 107: for(signed char iter = 7; iter >= 0; iter--)
  2219  058F  3007               	movlw	7
  2220  0590  00FB               	movwf	??_getIdentification
  2221  0591  087B               	movf	??_getIdentification,w
  2222  0592  00AD               	movwf	getIdentification@iter_129
  2223  0593  1BAD               	btfsc	getIdentification@iter_129,7
  2224  0594  2DAD               	goto	l1886
  2225  0595                     l1878:	
  2226                           
  2227                           ;ZIGBEE_16F_MASTER.c: 108: {
  2228                           ;ZIGBEE_16F_MASTER.c: 109: if(temp[iter] == '\0' || temp[iter] == '\r')
  2229  0595  082D               	movf	getIdentification@iter_129,w
  2230  0596  3E20               	addlw	getIdentification@temp& (0+255)
  2231  0597  0084               	movwf	4
  2232  0598  1383               	bcf	3,7	;select IRP bank0
  2233  0599  0880               	movf	0,f
  2234  059A  1903               	skipnz
  2235  059B  2DA3               	goto	l1882
  2236  059C  082D               	movf	getIdentification@iter_129,w
  2237  059D  3E20               	addlw	getIdentification@temp& (0+255)
  2238  059E  0084               	movwf	4
  2239  059F  0800               	movf	0,w
  2240  05A0  3A0D               	xorlw	13
  2241  05A1  1D03               	skipz
  2242  05A2  2DA7               	goto	l159
  2243  05A3                     l1882:	
  2244                           
  2245                           ;ZIGBEE_16F_MASTER.c: 110: {offset++;}
  2246  05A3  3001               	movlw	1
  2247  05A4  00FB               	movwf	??_getIdentification
  2248  05A5  087B               	movf	??_getIdentification,w
  2249  05A6  07A8               	addwf	getIdentification@offset,f
  2250  05A7                     l159:	
  2251  05A7  30FF               	movlw	-1
  2252  05A8  00FB               	movwf	??_getIdentification
  2253  05A9  087B               	movf	??_getIdentification,w
  2254  05AA  07AD               	addwf	getIdentification@iter_129,f
  2255  05AB  1FAD               	btfss	getIdentification@iter_129,7
  2256  05AC  2D95               	goto	l1878
  2257  05AD                     l1886:	
  2258                           
  2259                           ;ZIGBEE_16F_MASTER.c: 111: }
  2260                           ;ZIGBEE_16F_MASTER.c: 114: for(char iter = 0; iter < 8; iter++)
  2261  05AD  01AE               	clrf	getIdentification@iter_130
  2262  05AE  3008               	movlw	8
  2263  05AF  022E               	subwf	getIdentification@iter_130,w
  2264  05B0  1803               	btfsc	3,0
  2265  05B1  2DC8               	goto	l1898
  2266  05B2                     l1892:	
  2267                           
  2268                           ;ZIGBEE_16F_MASTER.c: 115: {
  2269                           ;ZIGBEE_16F_MASTER.c: 116: result[iter+offset] = temp[iter];
  2270  05B2  082E               	movf	getIdentification@iter_130,w
  2271  05B3  3E20               	addlw	getIdentification@temp& (0+255)
  2272  05B4  0084               	movwf	4
  2273  05B5  1383               	bcf	3,7	;select IRP bank0
  2274  05B6  0800               	movf	0,w
  2275  05B7  00FB               	movwf	??_getIdentification
  2276  05B8  0828               	movf	getIdentification@offset,w
  2277  05B9  072E               	addwf	getIdentification@iter_130,w
  2278  05BA  072C               	addwf	getIdentification@result,w
  2279  05BB  00FC               	movwf	??_getIdentification+1
  2280  05BC  087C               	movf	??_getIdentification+1,w
  2281  05BD  0084               	movwf	4
  2282  05BE  087B               	movf	??_getIdentification,w
  2283  05BF  0080               	movwf	0
  2284  05C0  3001               	movlw	1
  2285  05C1  00FB               	movwf	??_getIdentification
  2286  05C2  087B               	movf	??_getIdentification,w
  2287  05C3  07AE               	addwf	getIdentification@iter_130,f
  2288  05C4  3008               	movlw	8
  2289  05C5  022E               	subwf	getIdentification@iter_130,w
  2290  05C6  1C03               	skipc
  2291  05C7  2DB2               	goto	l1892
  2292  05C8                     l1898:	
  2293                           
  2294                           ;ZIGBEE_16F_MASTER.c: 117: }
  2295                           ;ZIGBEE_16F_MASTER.c: 120: flush_RCREG();
  2296  05C8  120A  118A  2185   	fcall	_flush_RCREG
      +       120A  118A         
  2297                           
  2298                           ;ZIGBEE_16F_MASTER.c: 121: send_USART_string("ATSL\r");
  2299  05CD  3028               	movlw	low (STR_4-__stringbase)
  2300  05CE  00F6               	movwf	send_USART_string@string
  2301  05CF  3080               	movlw	128
  2302  05D0  00F7               	movwf	send_USART_string@string+1
  2303  05D1  120A  118A  229F   	fcall	_send_USART_string
      +       120A  118A         
  2304                           
  2305                           ;ZIGBEE_16F_MASTER.c: 123: offset = 0;
  2306  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  2307  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  2308  05D8  01A8               	clrf	getIdentification@offset
  2309                           
  2310                           ;ZIGBEE_16F_MASTER.c: 127: for(char iter = 0; iter < 8; iter++)
  2311  05D9  01AB               	clrf	getIdentification@iter_132
  2312  05DA  3008               	movlw	8
  2313  05DB  022B               	subwf	getIdentification@iter_132,w
  2314  05DC  1803               	btfsc	3,0
  2315  05DD  2DF4               	goto	l1916
  2316  05DE                     l1910:	
  2317                           
  2318                           ;ZIGBEE_16F_MASTER.c: 128: {temp[iter] = get_USART_char_timeout();}
  2319  05DE  120A  118A  2271   	fcall	_get_USART_char_timeout
      +       120A  118A         
  2320  05E3  00FB               	movwf	??_getIdentification
  2321  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  2322  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  2323  05E6  082B               	movf	getIdentification@iter_132,w
  2324  05E7  3E20               	addlw	getIdentification@temp& (0+255)
  2325  05E8  0084               	movwf	4
  2326  05E9  087B               	movf	??_getIdentification,w
  2327  05EA  1383               	bcf	3,7	;select IRP bank0
  2328  05EB  0080               	movwf	0
  2329  05EC  3001               	movlw	1
  2330  05ED  00FB               	movwf	??_getIdentification
  2331  05EE  087B               	movf	??_getIdentification,w
  2332  05EF  07AB               	addwf	getIdentification@iter_132,f
  2333  05F0  3008               	movlw	8
  2334  05F1  022B               	subwf	getIdentification@iter_132,w
  2335  05F2  1C03               	skipc
  2336  05F3  2DDE               	goto	l1910
  2337  05F4                     l1916:	
  2338                           
  2339                           ;ZIGBEE_16F_MASTER.c: 132: for(signed char iter = 7; iter >= 0; iter--)
  2340  05F4  3007               	movlw	7
  2341  05F5  00FB               	movwf	??_getIdentification
  2342  05F6  087B               	movf	??_getIdentification,w
  2343  05F7  00AF               	movwf	getIdentification@iter_133
  2344  05F8  1BAF               	btfsc	getIdentification@iter_133,7
  2345  05F9  2E12               	goto	l1930
  2346  05FA                     l1922:	
  2347                           
  2348                           ;ZIGBEE_16F_MASTER.c: 133: {
  2349                           ;ZIGBEE_16F_MASTER.c: 134: if(temp[iter] == '\0' || temp[iter] == '\r')
  2350  05FA  082F               	movf	getIdentification@iter_133,w
  2351  05FB  3E20               	addlw	getIdentification@temp& (0+255)
  2352  05FC  0084               	movwf	4
  2353  05FD  1383               	bcf	3,7	;select IRP bank0
  2354  05FE  0880               	movf	0,f
  2355  05FF  1903               	skipnz
  2356  0600  2E08               	goto	l1926
  2357  0601  082F               	movf	getIdentification@iter_133,w
  2358  0602  3E20               	addlw	getIdentification@temp& (0+255)
  2359  0603  0084               	movwf	4
  2360  0604  0800               	movf	0,w
  2361  0605  3A0D               	xorlw	13
  2362  0606  1D03               	skipz
  2363  0607  2E0C               	goto	l168
  2364  0608                     l1926:	
  2365                           
  2366                           ;ZIGBEE_16F_MASTER.c: 135: {offset++;}
  2367  0608  3001               	movlw	1
  2368  0609  00FB               	movwf	??_getIdentification
  2369  060A  087B               	movf	??_getIdentification,w
  2370  060B  07A8               	addwf	getIdentification@offset,f
  2371  060C                     l168:	
  2372  060C  30FF               	movlw	-1
  2373  060D  00FB               	movwf	??_getIdentification
  2374  060E  087B               	movf	??_getIdentification,w
  2375  060F  07AF               	addwf	getIdentification@iter_133,f
  2376  0610  1FAF               	btfss	getIdentification@iter_133,7
  2377  0611  2DFA               	goto	l1922
  2378  0612                     l1930:	
  2379                           
  2380                           ;ZIGBEE_16F_MASTER.c: 136: }
  2381                           ;ZIGBEE_16F_MASTER.c: 139: for(char iter = 0; iter < 8; iter++)
  2382  0612  01B0               	clrf	getIdentification@iter_134
  2383  0613                     L3:	
  2384  0613  3008               	movlw	8
  2385  0614  0230               	subwf	getIdentification@iter_134,w
  2386  0615  1803               	btfsc	3,0
  2387  0616  0008               	return
  2388                           
  2389                           ;ZIGBEE_16F_MASTER.c: 140: {
  2390                           ;ZIGBEE_16F_MASTER.c: 141: result[iter+8+offset] = temp[iter];
  2391  0617  0830               	movf	getIdentification@iter_134,w
  2392  0618  3E20               	addlw	getIdentification@temp& (0+255)
  2393  0619  0084               	movwf	4
  2394  061A  1383               	bcf	3,7	;select IRP bank0
  2395  061B  0800               	movf	0,w
  2396  061C  00FB               	movwf	??_getIdentification
  2397  061D  0828               	movf	getIdentification@offset,w
  2398  061E  0730               	addwf	getIdentification@iter_134,w
  2399  061F  3E08               	addlw	8
  2400  0620  072C               	addwf	getIdentification@result,w
  2401  0621  00FC               	movwf	??_getIdentification+1
  2402  0622  087C               	movf	??_getIdentification+1,w
  2403  0623  0084               	movwf	4
  2404  0624  087B               	movf	??_getIdentification,w
  2405  0625  0080               	movwf	0
  2406  0626  3001               	movlw	1
  2407  0627  00FB               	movwf	??_getIdentification
  2408  0628  087B               	movf	??_getIdentification,w
  2409  0629  07B0               	addwf	getIdentification@iter_134,f
  2410  062A  2E13               	goto	L3
  2411  062B                     __end_of_getIdentification:	
  2412                           
  2413                           	psect	text7
  2414  0271                     __ptext7:	
  2415 ;; *************** function _get_USART_char_timeout *****************
  2416 ;; Defined at:
  2417 ;;		line 124 in file "..\Header Files\..\C Source Code\USART_16F_MASTER.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  timeout_int     2    1[COMMON] int 
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      unsigned char 
  2424 ;; Registers used:
  2425 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2431 ;;      Params:         0       0       0       0       0
  2432 ;;      Locals:         2       0       0       0       0
  2433 ;;      Temps:          0       0       0       0       0
  2434 ;;      Totals:         2       0       0       0       0
  2435 ;;Total ram usage:        2 bytes
  2436 ;; Hardware stack levels used:    1
  2437 ;; Hardware stack levels required when called:    1
  2438 ;; This function calls:
  2439 ;;		_clear_usart_errors
  2440 ;; This function is called by:
  2441 ;;		_getIdentification
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           
  2446                           ;psect for function _get_USART_char_timeout
  2447  0271                     _get_USART_char_timeout:	
  2448                           
  2449                           ;USART_16F_MASTER.c: 127: for( int timeout_int = 1000000; timeout_int > 0; timeout_int--)
  2450                           
  2451                           ;incstack = 0
  2452                           ; Regs used in _get_USART_char_timeout: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2453  0271  3040               	movlw	64
  2454  0272  00F1               	movwf	get_USART_char_timeout@timeout_int
  2455  0273  3042               	movlw	66
  2456  0274  00F2               	movwf	get_USART_char_timeout@timeout_int+1
  2457  0275  0872               	movf	get_USART_char_timeout@timeout_int+1,w
  2458  0276  3A80               	xorlw	128
  2459  0277  00FF               	movwf	127
  2460  0278  3080               	movlw	128
  2461  0279  027F               	subwf	127,w
  2462  027A  1D03               	skipz
  2463  027B  2A7E               	goto	u815
  2464  027C  3001               	movlw	1
  2465  027D  0271               	subwf	get_USART_char_timeout@timeout_int,w
  2466  027E                     u815:	
  2467  027E  1C03               	btfss	3,0
  2468  027F  2A9D               	goto	l1742
  2469  0280                     l109:	
  2470                           
  2471                           ;USART_16F_MASTER.c: 128: {
  2472                           ;USART_16F_MASTER.c: 129: if (RCIF == 1)
  2473  0280  1283               	bcf	3,5	;RP0=0, select bank0
  2474  0281  1303               	bcf	3,6	;RP1=0, select bank0
  2475  0282  1E8C               	btfss	12,5	;volatile
  2476  0283  2A86               	goto	l1734
  2477                           
  2478                           ;USART_16F_MASTER.c: 130: {return RCREG;}
  2479  0284  081A               	movf	26,w	;volatile
  2480  0285  0008               	return
  2481  0286                     l1734:	
  2482                           
  2483                           ;USART_16F_MASTER.c: 131: clear_usart_errors();
  2484  0286  120A  118A  21A8   	fcall	_clear_usart_errors
      +       120A  118A         
  2485                           
  2486                           ;USART_16F_MASTER.c: 132: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2487  028B  0000               	nop
  2488  028C  30FF               	movlw	255
  2489  028D  07F1               	addwf	get_USART_char_timeout@timeout_int,f
  2490  028E  1803               	skipnc
  2491  028F  0AF2               	incf	get_USART_char_timeout@timeout_int+1,f
  2492  0290  30FF               	movlw	255
  2493  0291  07F2               	addwf	get_USART_char_timeout@timeout_int+1,f
  2494  0292  0872               	movf	get_USART_char_timeout@timeout_int+1,w
  2495  0293  3A80               	xorlw	128
  2496  0294  00FF               	movwf	127
  2497  0295  3080               	movlw	128
  2498  0296  027F               	subwf	127,w
  2499  0297  1D03               	skipz
  2500  0298  2A9B               	goto	u835
  2501  0299  3001               	movlw	1
  2502  029A  0271               	subwf	get_USART_char_timeout@timeout_int,w
  2503  029B                     u835:	
  2504  029B  1803               	skipnc
  2505  029C  2A80               	goto	l109
  2506  029D                     l1742:	
  2507                           
  2508                           ;USART_16F_MASTER.c: 133: }
  2509                           ;USART_16F_MASTER.c: 135: return '\0';
  2510  029D  3000               	movlw	0
  2511  029E  0008               	return
  2512  029F                     __end_of_get_USART_char_timeout:	
  2513                           
  2514                           	psect	text8
  2515  01F7                     __ptext8:	
  2516 ;; *************** function _exitCommandMode *****************
  2517 ;; Defined at:
  2518 ;;		line 223 in file "..\Header Files\..\C Source Code\ZIGBEE_16F_MASTER.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;		None
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  iter            1   12[COMMON] unsigned char 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;		None               void
  2525 ;; Registers used:
  2526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2532 ;;      Params:         0       0       0       0       0
  2533 ;;      Locals:         1       0       0       0       0
  2534 ;;      Temps:          1       0       0       0       0
  2535 ;;      Totals:         2       0       0       0       0
  2536 ;;Total ram usage:        2 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    3
  2539 ;; This function calls:
  2540 ;;		_flush_RCREG
  2541 ;;		_get_USART_char
  2542 ;;		_send_USART_string
  2543 ;; This function is called by:
  2544 ;;		_main
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           
  2549                           ;psect for function _exitCommandMode
  2550  01F7                     _exitCommandMode:	
  2551                           
  2552                           ;ZIGBEE_16F_MASTER.c: 225: flush_RCREG();
  2553                           
  2554                           ;incstack = 0
  2555                           ; Regs used in _exitCommandMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2556  01F7  120A  118A  2185   	fcall	_flush_RCREG
      +       120A  118A         
  2557                           
  2558                           ;ZIGBEE_16F_MASTER.c: 226: send_USART_string("ATCN\r");
  2559  01FC  302E               	movlw	low (STR_10-__stringbase)
  2560  01FD  00F6               	movwf	send_USART_string@string
  2561  01FE  3080               	movlw	128
  2562  01FF  00F7               	movwf	send_USART_string@string+1
  2563  0200  120A  118A  229F   	fcall	_send_USART_string
      +       120A  118A         
  2564                           
  2565                           ;ZIGBEE_16F_MASTER.c: 229: for(char iter = 0; iter < 2; iter++)
  2566  0205  01FC               	clrf	exitCommandMode@iter
  2567  0206                     L4:	
  2568  0206  3002               	movlw	2
  2569  0207  027C               	subwf	exitCommandMode@iter,w
  2570  0208  1803               	btfsc	3,0
  2571  0209  0008               	return
  2572                           
  2573                           ;ZIGBEE_16F_MASTER.c: 230: {BYTES_BUFFER[iter] = get_USART_char();}
  2574  020A  120A  118A  217A   	fcall	_get_USART_char
      +       120A  118A         
  2575  020F  00FB               	movwf	??_exitCommandMode
  2576  0210  087C               	movf	exitCommandMode@iter,w
  2577  0211  3EA0               	addlw	_BYTES_BUFFER& (0+255)
  2578  0212  0084               	movwf	4
  2579  0213  087B               	movf	??_exitCommandMode,w
  2580  0214  1383               	bcf	3,7	;select IRP bank1
  2581  0215  0080               	movwf	0
  2582  0216  3001               	movlw	1
  2583  0217  00FB               	movwf	??_exitCommandMode
  2584  0218  087B               	movf	??_exitCommandMode,w
  2585  0219  07FC               	addwf	exitCommandMode@iter,f
  2586  021A  2A06               	goto	L4
  2587  021B                     __end_of_exitCommandMode:	
  2588                           
  2589                           	psect	text9
  2590  0302                     __ptext9:	
  2591 ;; *************** function _enterCommandMode *****************
  2592 ;; Defined at:
  2593 ;;		line 188 in file "..\Header Files\..\C Source Code\ZIGBEE_16F_MASTER.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;  iter            1   13[COMMON] unsigned char 
  2598 ;; Return value:  Size  Location     Type
  2599 ;;		None               void
  2600 ;; Registers used:
  2601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2607 ;;      Params:         0       0       0       0       0
  2608 ;;      Locals:         1       0       0       0       0
  2609 ;;      Temps:          2       0       0       0       0
  2610 ;;      Totals:         3       0       0       0       0
  2611 ;;Total ram usage:        3 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    3
  2614 ;; This function calls:
  2615 ;;		_flush_RCREG
  2616 ;;		_get_USART_char
  2617 ;;		_send_USART_string
  2618 ;; This function is called by:
  2619 ;;		_main
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           
  2624                           ;psect for function _enterCommandMode
  2625  0302                     _enterCommandMode:	
  2626                           
  2627                           ;ZIGBEE_16F_MASTER.c: 207: flush_RCREG();
  2628                           
  2629                           ;incstack = 0
  2630                           ; Regs used in _enterCommandMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2631  0302  120A  118A  2185   	fcall	_flush_RCREG
      +       120A  118A         
  2632                           
  2633                           ;ZIGBEE_16F_MASTER.c: 210: _delay((unsigned long)((15)*(4000000/4000.0)));
  2634  0307  3014               	movlw	20
  2635  0308  00FC               	movwf	??_enterCommandMode+1
  2636  0309  3079               	movlw	121
  2637  030A  00FB               	movwf	??_enterCommandMode
  2638  030B                     u1467:	
  2639  030B  0BFB               	decfsz	??_enterCommandMode,f
  2640  030C  2B0B               	goto	u1467
  2641  030D  0BFC               	decfsz	??_enterCommandMode+1,f
  2642  030E  2B0B               	goto	u1467
  2643  030F  2B10               	nop2
  2644                           
  2645                           ;ZIGBEE_16F_MASTER.c: 213: send_USART_string("+++");
  2646  0310  303E               	movlw	low (STR_9-__stringbase)
  2647  0311  00F6               	movwf	send_USART_string@string
  2648  0312  3080               	movlw	128
  2649  0313  00F7               	movwf	send_USART_string@string+1
  2650  0314  120A  118A  229F   	fcall	_send_USART_string
      +       120A  118A         
  2651                           
  2652                           ;ZIGBEE_16F_MASTER.c: 216: _delay((unsigned long)((15)*(4000000/4000.0)));
  2653  0319  3014               	movlw	20
  2654  031A  00FC               	movwf	??_enterCommandMode+1
  2655  031B  3079               	movlw	121
  2656  031C  00FB               	movwf	??_enterCommandMode
  2657  031D                     u1477:	
  2658  031D  0BFB               	decfsz	??_enterCommandMode,f
  2659  031E  2B1D               	goto	u1477
  2660  031F  0BFC               	decfsz	??_enterCommandMode+1,f
  2661  0320  2B1D               	goto	u1477
  2662  0321  2B22               	nop2
  2663                           
  2664                           ;ZIGBEE_16F_MASTER.c: 219: for(char iter = 0; iter < 2; iter++)
  2665  0322  01FD               	clrf	enterCommandMode@iter
  2666  0323                     L5:	
  2667  0323  3002               	movlw	2
  2668  0324  027D               	subwf	enterCommandMode@iter,w
  2669  0325  1803               	btfsc	3,0
  2670  0326  0008               	return
  2671                           
  2672                           ;ZIGBEE_16F_MASTER.c: 220: {BYTES_BUFFER[iter] = get_USART_char();}
  2673  0327  120A  118A  217A   	fcall	_get_USART_char
      +       120A  118A         
  2674  032C  00FB               	movwf	??_enterCommandMode
  2675  032D  087D               	movf	enterCommandMode@iter,w
  2676  032E  3EA0               	addlw	_BYTES_BUFFER& (0+255)
  2677  032F  0084               	movwf	4
  2678  0330  087B               	movf	??_enterCommandMode,w
  2679  0331  1383               	bcf	3,7	;select IRP bank1
  2680  0332  0080               	movwf	0
  2681  0333  3001               	movlw	1
  2682  0334  00FB               	movwf	??_enterCommandMode
  2683  0335  087B               	movf	??_enterCommandMode,w
  2684  0336  07FD               	addwf	enterCommandMode@iter,f
  2685  0337  2B23               	goto	L5
  2686  0338                     __end_of_enterCommandMode:	
  2687                           
  2688                           	psect	text10
  2689  029F                     __ptext10:	
  2690 ;; *************** function _send_USART_string *****************
  2691 ;; Defined at:
  2692 ;;		line 150 in file "..\Header Files\..\C Source Code\USART_16F_MASTER.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  string          2    6[COMMON] PTR const unsigned char 
  2695 ;;		 -> main@broadcastNumberBuf(10), main@lightingValueBuf(10), main@mobile(17), STR_10(6), 
  2696 ;;		 -> STR_9(4), STR_8(2), setDestination@subbuff2(9), STR_7(5), 
  2697 ;;		 -> STR_6(2), setDestination@subbuff(9), STR_5(5), STR_4(6), 
  2698 ;;		 -> STR_3(6), STR_1(6), 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;  iter            1   10[COMMON] unsigned char 
  2701 ;; Return value:  Size  Location     Type
  2702 ;;		None               void
  2703 ;; Registers used:
  2704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2710 ;;      Params:         2       0       0       0       0
  2711 ;;      Locals:         1       0       0       0       0
  2712 ;;      Temps:          2       0       0       0       0
  2713 ;;      Totals:         5       0       0       0       0
  2714 ;;Total ram usage:        5 bytes
  2715 ;; Hardware stack levels used:    1
  2716 ;; Hardware stack levels required when called:    2
  2717 ;; This function calls:
  2718 ;;		_send_USART_char
  2719 ;;		_strlen
  2720 ;; This function is called by:
  2721 ;;		_getIdentification
  2722 ;;		_setDestination
  2723 ;;		_enterCommandMode
  2724 ;;		_exitCommandMode
  2725 ;;		_main
  2726 ;;		_getRSSI
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           
  2731                           ;psect for function _send_USART_string
  2732  029F                     _send_USART_string:	
  2733                           
  2734                           ;USART_16F_MASTER.c: 152: for(unsigned char iter = 0 ; iter < strlen(string) ; iter++)
  2735                           
  2736                           ;incstack = 0
  2737                           ; Regs used in _send_USART_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2738  029F  01FA               	clrf	send_USART_string@iter
  2739  02A0                     l1780:	
  2740  02A0  0877               	movf	send_USART_string@string+1,w
  2741  02A1  01F1               	clrf	strlen@s+1
  2742  02A2  07F1               	addwf	strlen@s+1,f
  2743  02A3  0876               	movf	send_USART_string@string,w
  2744  02A4  01F0               	clrf	strlen@s
  2745  02A5  07F0               	addwf	strlen@s,f
  2746  02A6  120A  118A  221B   	fcall	_strlen
      +       120A  118A         
  2747  02AB  087A               	movf	send_USART_string@iter,w
  2748  02AC  00F8               	movwf	??_send_USART_string
  2749  02AD  01F9               	clrf	??_send_USART_string+1
  2750  02AE  0871               	movf	?_strlen+1,w
  2751  02AF  0279               	subwf	??_send_USART_string+1,w
  2752  02B0  1D03               	skipz
  2753  02B1  2AB4               	goto	u915
  2754  02B2  0870               	movf	?_strlen,w
  2755  02B3  0278               	subwf	??_send_USART_string,w
  2756  02B4                     u915:	
  2757  02B4  1803               	btfsc	3,0
  2758  02B5  0008               	return
  2759                           
  2760                           ;USART_16F_MASTER.c: 153: {send_USART_char(string[iter]);}
  2761  02B6  087A               	movf	send_USART_string@iter,w
  2762  02B7  0776               	addwf	send_USART_string@string,w
  2763  02B8  0084               	movwf	4
  2764  02B9  0877               	movf	send_USART_string@string+1,w
  2765  02BA  1803               	skipnc
  2766  02BB  0A77               	incf	send_USART_string@string+1,w
  2767  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2768  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  2769  02BE  00FF               	movwf	127
  2770  02BF  120A  118A  2003   	fcall	stringtab
      +       120A  118A         
  2771  02C4  120A  118A  2194   	fcall	_send_USART_char
      +       120A  118A         
  2772  02C9  3001               	movlw	1
  2773  02CA  00F8               	movwf	??_send_USART_string
  2774  02CB  0878               	movf	??_send_USART_string,w
  2775  02CC  07FA               	addwf	send_USART_string@iter,f
  2776  02CD  2AA0               	goto	l1780
  2777  02CE                     __end_of_send_USART_string:	
  2778                           
  2779                           	psect	text11
  2780  021B                     __ptext11:	
  2781 ;; *************** function _strlen *****************
  2782 ;; Defined at:
  2783 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\strlen.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;  s               2    0[COMMON] PTR const unsigned char 
  2786 ;;		 -> main@broadcastNumberBuf(10), main@lightingValueBuf(10), main@mobile(17), STR_10(6), 
  2787 ;;		 -> STR_9(4), STR_8(2), setDestination@subbuff2(9), STR_7(5), 
  2788 ;;		 -> STR_6(2), setDestination@subbuff(9), STR_5(5), STR_4(6), 
  2789 ;;		 -> STR_3(6), STR_1(6), 
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  cp              2    4[COMMON] PTR const unsigned char 
  2792 ;;		 -> main@broadcastNumberBuf(10), main@lightingValueBuf(10), main@mobile(17), STR_10(6), 
  2793 ;;		 -> STR_9(4), STR_8(2), setDestination@subbuff2(9), STR_7(5), 
  2794 ;;		 -> STR_6(2), setDestination@subbuff(9), STR_5(5), STR_4(6), 
  2795 ;;		 -> STR_3(6), STR_1(6), 
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  2    0[COMMON] unsigned int 
  2798 ;; Registers used:
  2799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2805 ;;      Params:         2       0       0       0       0
  2806 ;;      Locals:         2       0       0       0       0
  2807 ;;      Temps:          2       0       0       0       0
  2808 ;;      Totals:         6       0       0       0       0
  2809 ;;Total ram usage:        6 bytes
  2810 ;; Hardware stack levels used:    2
  2811 ;; This function calls:
  2812 ;;		Nothing
  2813 ;; This function is called by:
  2814 ;;		_send_USART_string
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           
  2819                           ;psect for function _strlen
  2820  021B                     _strlen:	
  2821                           
  2822                           ;incstack = 0
  2823                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2824  021B  0871               	movf	strlen@s+1,w
  2825  021C  01F5               	clrf	strlen@cp+1
  2826  021D  07F5               	addwf	strlen@cp+1,f
  2827  021E  0870               	movf	strlen@s,w
  2828  021F  01F4               	clrf	strlen@cp
  2829  0220  07F4               	addwf	strlen@cp,f
  2830  0221                     l1572:	
  2831  0221  0875               	movf	strlen@cp+1,w
  2832  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2833  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2834  0224  00FF               	movwf	127
  2835  0225  0874               	movf	strlen@cp,w
  2836  0226  0084               	movwf	4
  2837  0227  120A  118A  2003   	fcall	stringtab
      +       120A  118A         
  2838  022C  3800               	iorlw	0
  2839  022D  1903               	btfsc	3,2
  2840  022E  2A34               	goto	l1574
  2841  022F  3001               	movlw	1
  2842  0230  07F4               	addwf	strlen@cp,f
  2843  0231  1803               	skipnc
  2844  0232  0AF5               	incf	strlen@cp+1,f
  2845  0233  2A21               	goto	l1572
  2846  0234                     l1574:	
  2847  0234  0970               	comf	strlen@s,w
  2848  0235  00F2               	movwf	??_strlen
  2849  0236  0971               	comf	strlen@s+1,w
  2850  0237  00F3               	movwf	??_strlen+1
  2851  0238  0AF2               	incf	??_strlen,f
  2852  0239  1903               	skipnz
  2853  023A  0AF3               	incf	??_strlen+1,f
  2854  023B  0874               	movf	strlen@cp,w
  2855  023C  0772               	addwf	??_strlen,w
  2856  023D  00F0               	movwf	?_strlen
  2857  023E  0875               	movf	strlen@cp+1,w
  2858  023F  1803               	skipnc
  2859  0240  0A75               	incf	strlen@cp+1,w
  2860  0241  0773               	addwf	??_strlen+1,w
  2861  0242  00F1               	movwf	?_strlen+1
  2862  0243  0008               	return
  2863  0244                     __end_of_strlen:	
  2864                           
  2865                           	psect	text12
  2866  0194                     __ptext12:	
  2867 ;; *************** function _send_USART_char *****************
  2868 ;; Defined at:
  2869 ;;		line 140 in file "..\Header Files\..\C Source Code\USART_16F_MASTER.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  character       1    wreg     unsigned char 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  character       1    2[COMMON] unsigned char 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;		None               void
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0, pclath, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2883 ;;      Params:         0       0       0       0       0
  2884 ;;      Locals:         1       0       0       0       0
  2885 ;;      Temps:          1       0       0       0       0
  2886 ;;      Totals:         2       0       0       0       0
  2887 ;;Total ram usage:        2 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    1
  2890 ;; This function calls:
  2891 ;;		_clear_usart_errors
  2892 ;; This function is called by:
  2893 ;;		_send_USART_string
  2894 ;;		_main
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           
  2899                           ;psect for function _send_USART_char
  2900  0194                     _send_USART_char:	
  2901                           
  2902                           ;incstack = 0
  2903                           ; Regs used in _send_USART_char: [wreg+status,2+status,0+pclath+cstack]
  2904                           ;send_USART_char@character stored from wreg
  2905  0194  00F2               	movwf	send_USART_char@character
  2906  0195                     l115:	
  2907                           ;USART_16F_MASTER.c: 142: do
  2908                           
  2909                           
  2910                           ;USART_16F_MASTER.c: 143: {clear_usart_errors();}
  2911  0195  120A  118A  21A8   	fcall	_clear_usart_errors
      +       120A  118A         
  2912                           
  2913                           ;USART_16F_MASTER.c: 144: while(TXIF == 0);
  2914  019A  1283               	bcf	3,5	;RP0=0, select bank0
  2915  019B  1303               	bcf	3,6	;RP1=0, select bank0
  2916  019C  1E0C               	btfss	12,4	;volatile
  2917  019D  2995               	goto	l115
  2918                           
  2919                           ;USART_16F_MASTER.c: 146: TXREG = character;
  2920  019E  0872               	movf	send_USART_char@character,w
  2921  019F  0099               	movwf	25	;volatile
  2922                           
  2923                           ;USART_16F_MASTER.c: 147: _delay((unsigned long)((1)*(4000000/4000.0)));
  2924  01A0  30F9               	movlw	249
  2925  01A1  00F1               	movwf	??_send_USART_char
  2926  01A2                     u1487:	
  2927  01A2  0000               	nop
  2928  01A3  0BF1               	decfsz	??_send_USART_char,f
  2929  01A4  29A2               	goto	u1487
  2930  01A5  29A6               	nop2	;nop
  2931  01A6  0000               	nop
  2932  01A7  0008               	return
  2933  01A8                     __end_of_send_USART_char:	
  2934                           
  2935                           	psect	text13
  2936  017A                     __ptext13:	
  2937 ;; *************** function _get_USART_char *****************
  2938 ;; Defined at:
  2939 ;;		line 114 in file "..\Header Files\..\C Source Code\USART_16F_MASTER.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;		None
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;		None
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  1    wreg      unsigned char 
  2946 ;; Registers used:
  2947 ;;		wreg, status,2, status,0, pclath, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2953 ;;      Params:         0       0       0       0       0
  2954 ;;      Locals:         0       0       0       0       0
  2955 ;;      Temps:          0       0       0       0       0
  2956 ;;      Totals:         0       0       0       0       0
  2957 ;;Total ram usage:        0 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; Hardware stack levels required when called:    1
  2960 ;; This function calls:
  2961 ;;		_clear_usart_errors
  2962 ;; This function is called by:
  2963 ;;		_setDestination
  2964 ;;		_enterCommandMode
  2965 ;;		_exitCommandMode
  2966 ;;		_getRSSI
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           
  2971                           ;psect for function _get_USART_char
  2972  017A                     _get_USART_char:	
  2973  017A                     l104:	
  2974                           ;incstack = 0
  2975                           ; Regs used in _get_USART_char: [wreg+status,2+status,0+pclath+cstack]
  2976                           ;USART_16F_MASTER.c: 116: do
  2977                           
  2978                           
  2979                           ;USART_16F_MASTER.c: 117: {clear_usart_errors();}
  2980  017A  120A  118A  21A8   	fcall	_clear_usart_errors
      +       120A  118A         
  2981                           
  2982                           ;USART_16F_MASTER.c: 118: while(RCIF == 0);
  2983  017F  1283               	bcf	3,5	;RP0=0, select bank0
  2984  0180  1303               	bcf	3,6	;RP1=0, select bank0
  2985  0181  1E8C               	btfss	12,5	;volatile
  2986  0182  297A               	goto	l104
  2987                           
  2988                           ;USART_16F_MASTER.c: 120: return RCREG;
  2989  0183  081A               	movf	26,w	;volatile
  2990  0184  0008               	return
  2991  0185                     __end_of_get_USART_char:	
  2992                           
  2993                           	psect	text14
  2994  01A8                     __ptext14:	
  2995 ;; *************** function _clear_usart_errors *****************
  2996 ;; Defined at:
  2997 ;;		line 160 in file "..\Header Files\..\C Source Code\USART_16F_MASTER.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;		None
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;		None
  3002 ;; Return value:  Size  Location     Type
  3003 ;;		None               void
  3004 ;; Registers used:
  3005 ;;		wreg
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3011 ;;      Params:         0       0       0       0       0
  3012 ;;      Locals:         0       0       0       0       0
  3013 ;;      Temps:          1       0       0       0       0
  3014 ;;      Totals:         1       0       0       0       0
  3015 ;;Total ram usage:        1 bytes
  3016 ;; Hardware stack levels used:    1
  3017 ;; This function calls:
  3018 ;;		Nothing
  3019 ;; This function is called by:
  3020 ;;		_get_USART_char
  3021 ;;		_get_USART_char_timeout
  3022 ;;		_send_USART_char
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           
  3027                           ;psect for function _clear_usart_errors
  3028  01A8                     _clear_usart_errors:	
  3029                           
  3030                           ;USART_16F_MASTER.c: 163: if (OERR == 1)
  3031                           
  3032                           ;incstack = 0
  3033                           ; Regs used in _clear_usart_errors: [wreg]
  3034  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  3035  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  3036  01AA  1C98               	btfss	24,1	;volatile
  3037  01AB  29B4               	goto	l126
  3038                           
  3039                           ;USART_16F_MASTER.c: 164: {
  3040                           ;USART_16F_MASTER.c: 166: TXEN=0;
  3041  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  3042  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  3043  01AE  1298               	bcf	24,5	;volatile
  3044                           
  3045                           ;USART_16F_MASTER.c: 167: TXEN=1;
  3046  01AF  1698               	bsf	24,5	;volatile
  3047                           
  3048                           ;USART_16F_MASTER.c: 168: CREN=0;
  3049  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  3050  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  3051  01B2  1218               	bcf	24,4	;volatile
  3052                           
  3053                           ;USART_16F_MASTER.c: 169: CREN=1;
  3054  01B3  1618               	bsf	24,4	;volatile
  3055  01B4                     l126:	
  3056                           
  3057                           ;USART_16F_MASTER.c: 170: }
  3058                           ;USART_16F_MASTER.c: 172: if (FERR == 1)
  3059  01B4  1D18               	btfss	24,2	;volatile
  3060  01B5  0008               	return
  3061                           
  3062                           ;USART_16F_MASTER.c: 173: {
  3063                           ;USART_16F_MASTER.c: 174: dummy=RCREG;
  3064  01B6  081A               	movf	26,w	;volatile
  3065  01B7  00F0               	movwf	??_clear_usart_errors
  3066  01B8  0870               	movf	??_clear_usart_errors,w
  3067  01B9  00E1               	movwf	_dummy
  3068                           
  3069                           ;USART_16F_MASTER.c: 175: TXEN=0;
  3070  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  3071  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  3072  01BC  1298               	bcf	24,5	;volatile
  3073                           
  3074                           ;USART_16F_MASTER.c: 176: TXEN=1;
  3075  01BD  1698               	bsf	24,5	;volatile
  3076  01BE  0008               	return
  3077  01BF                     __end_of_clear_usart_errors:	
  3078                           
  3079                           	psect	text15
  3080  0185                     __ptext15:	
  3081 ;; *************** function _flush_RCREG *****************
  3082 ;; Defined at:
  3083 ;;		line 180 in file "..\Header Files\..\C Source Code\USART_16F_MASTER.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;		None
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;		None
  3088 ;; Return value:  Size  Location     Type
  3089 ;;		None               void
  3090 ;; Registers used:
  3091 ;;		wreg
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3097 ;;      Params:         0       0       0       0       0
  3098 ;;      Locals:         0       0       0       0       0
  3099 ;;      Temps:          1       0       0       0       0
  3100 ;;      Totals:         1       0       0       0       0
  3101 ;;Total ram usage:        1 bytes
  3102 ;; Hardware stack levels used:    1
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_getIdentification
  3107 ;;		_setDestination
  3108 ;;		_enterCommandMode
  3109 ;;		_exitCommandMode
  3110 ;;		_getRSSI
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           
  3115                           ;psect for function _flush_RCREG
  3116  0185                     _flush_RCREG:	
  3117                           
  3118                           ;USART_16F_MASTER.c: 183: dummy=RCREG;
  3119                           
  3120                           ;incstack = 0
  3121                           ; Regs used in _flush_RCREG: [wreg]
  3122  0185  1283               	bcf	3,5	;RP0=0, select bank0
  3123  0186  1303               	bcf	3,6	;RP1=0, select bank0
  3124  0187  081A               	movf	26,w	;volatile
  3125  0188  00F0               	movwf	??_flush_RCREG
  3126  0189  0870               	movf	??_flush_RCREG,w
  3127  018A  00E1               	movwf	_dummy
  3128                           
  3129                           ;USART_16F_MASTER.c: 184: dummy=RCREG;
  3130  018B  081A               	movf	26,w	;volatile
  3131  018C  00F0               	movwf	??_flush_RCREG
  3132  018D  0870               	movf	??_flush_RCREG,w
  3133  018E  00E1               	movwf	_dummy
  3134                           
  3135                           ;USART_16F_MASTER.c: 185: dummy=RCREG;
  3136  018F  081A               	movf	26,w	;volatile
  3137  0190  00F0               	movwf	??_flush_RCREG
  3138  0191  0870               	movf	??_flush_RCREG,w
  3139  0192  00E1               	movwf	_dummy
  3140  0193  0008               	return
  3141  0194                     __end_of_flush_RCREG:	
  3142                           
  3143                           	psect	text16
  3144  01D9                     __ptext16:	
  3145 ;; *************** function _USART_Init *****************
  3146 ;; Defined at:
  3147 ;;		line 17 in file "..\Header Files\..\C Source Code\USART_16F_MASTER.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;		None
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;		None
  3152 ;; Return value:  Size  Location     Type
  3153 ;;		None               void
  3154 ;; Registers used:
  3155 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3161 ;;      Params:         0       0       0       0       0
  3162 ;;      Locals:         0       0       0       0       0
  3163 ;;      Temps:          0       0       0       0       0
  3164 ;;      Totals:         0       0       0       0       0
  3165 ;;Total ram usage:        0 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; Hardware stack levels required when called:    1
  3168 ;; This function calls:
  3169 ;;		_Setup_Baud_Gen
  3170 ;; This function is called by:
  3171 ;;		_main
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           
  3176                           ;psect for function _USART_Init
  3177  01D9                     _USART_Init:	
  3178                           
  3179                           ;USART_16F_MASTER.c: 58: Setup_Baud_Gen(9600);
  3180                           
  3181                           ;incstack = 0
  3182                           ; Regs used in _USART_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3183  01D9  3080               	movlw	128
  3184  01DA  00F0               	movwf	Setup_Baud_Gen@BAUD
  3185  01DB  3025               	movlw	37
  3186  01DC  00F1               	movwf	Setup_Baud_Gen@BAUD+1
  3187  01DD  120A  118A  2376   	fcall	_Setup_Baud_Gen
  3188                           
  3189                           ;USART_16F_MASTER.c: 62: SYNC = 0;
  3190  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  3191  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  3192  01E2  1218               	bcf	24,4	;volatile
  3193                           
  3194                           ;USART_16F_MASTER.c: 64: SPEN = 1;
  3195  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  3196  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  3197  01E5  1798               	bsf	24,7	;volatile
  3198                           
  3199                           ;USART_16F_MASTER.c: 67: TXIE = 0;
  3200  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  3201  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  3202  01E8  120C               	bcf	12,4	;volatile
  3203                           
  3204                           ;USART_16F_MASTER.c: 68: RCIE = 0;
  3205  01E9  128C               	bcf	12,5	;volatile
  3206                           
  3207                           ;USART_16F_MASTER.c: 72: RX9=0;
  3208  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  3209  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  3210  01EC  1318               	bcf	24,6	;volatile
  3211                           
  3212                           ;USART_16F_MASTER.c: 74: TX9=0;
  3213  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  3214  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  3215  01EF  1318               	bcf	24,6	;volatile
  3216                           
  3217                           ;USART_16F_MASTER.c: 78: CREN = 1;
  3218  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  3219  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  3220  01F2  1618               	bsf	24,4	;volatile
  3221                           
  3222                           ;USART_16F_MASTER.c: 80: TXEN = 1;
  3223  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  3224  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  3225  01F5  1698               	bsf	24,5	;volatile
  3226  01F6  0008               	return
  3227  01F7                     __end_of_USART_Init:	
  3228                           
  3229                           	psect	text17
  3230  0376                     __ptext17:	
  3231 ;; *************** function _Setup_Baud_Gen *****************
  3232 ;; Defined at:
  3233 ;;		line 84 in file "..\Header Files\..\C Source Code\USART_16F_MASTER.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;  BAUD            2    0[COMMON] int 
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;		None
  3238 ;; Return value:  Size  Location     Type
  3239 ;;		None               void
  3240 ;; Registers used:
  3241 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3247 ;;      Params:         2       0       0       0       0
  3248 ;;      Locals:         0       0       0       0       0
  3249 ;;      Temps:          0       0       0       0       0
  3250 ;;      Totals:         2       0       0       0       0
  3251 ;;Total ram usage:        2 bytes
  3252 ;; Hardware stack levels used:    1
  3253 ;; This function calls:
  3254 ;;		Nothing
  3255 ;; This function is called by:
  3256 ;;		_USART_Init
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           
  3261                           ;psect for function _Setup_Baud_Gen
  3262  0376                     _Setup_Baud_Gen:	
  3263                           
  3264                           ;USART_16F_MASTER.c: 87: {
  3265                           ;USART_16F_MASTER.c: 89: BRGH = 1;
  3266                           
  3267                           ;incstack = 0
  3268                           ; Regs used in _Setup_Baud_Gen: [wreg-fsr0h+status,2+status,0]
  3269  0376  1683               	bsf	3,5	;RP0=1, select bank1
  3270  0377  1303               	bcf	3,6	;RP1=0, select bank1
  3271  0378  1518               	bsf	24,2	;volatile
  3272                           
  3273                           ;USART_16F_MASTER.c: 90: BRG16 = 0;
  3274  0379  1683               	bsf	3,5	;RP0=1, select bank3
  3275  037A  1703               	bsf	3,6	;RP1=1, select bank3
  3276  037B  1187               	bcf	7,3	;volatile
  3277                           
  3278                           ;USART_16F_MASTER.c: 91: SPBRGH = 0;
  3279  037C  1683               	bsf	3,5	;RP0=1, select bank1
  3280  037D  1303               	bcf	3,6	;RP1=0, select bank1
  3281  037E  019A               	clrf	26	;volatile
  3282                           
  3283                           ;USART_16F_MASTER.c: 93: switch(BAUD)
  3284  037F  2B92               	goto	l1538
  3285  0380                     l1524:	
  3286                           ;USART_16F_MASTER.c: 94: {
  3287                           ;USART_16F_MASTER.c: 95: case 1200: SPBRG = 207; break;
  3288                           
  3289  0380  30CF               	movlw	207
  3290  0381  0099               	movwf	25	;volatile
  3291  0382  0008               	return
  3292  0383                     l1526:	
  3293                           ;USART_16F_MASTER.c: 96: case 2400: SPBRG = 103; break;
  3294                           
  3295  0383  3067               	movlw	103
  3296  0384  0099               	movwf	25	;volatile
  3297  0385  0008               	return
  3298  0386                     l1528:	
  3299                           ;USART_16F_MASTER.c: 97: case 9600: SPBRG = 25; break;
  3300                           
  3301  0386  3019               	movlw	25
  3302  0387  0099               	movwf	25	;volatile
  3303  0388  0008               	return
  3304  0389                     l1530:	
  3305                           ;USART_16F_MASTER.c: 98: case 10417: SPBRG = 23; break;
  3306                           
  3307  0389  3017               	movlw	23
  3308  038A  0099               	movwf	25	;volatile
  3309  038B  0008               	return
  3310  038C                     l1532:	
  3311                           ;USART_16F_MASTER.c: 99: case 19200: SPBRG = 12; break;
  3312                           
  3313  038C  300C               	movlw	12
  3314  038D  0099               	movwf	25	;volatile
  3315  038E  0008               	return
  3316  038F                     l1534:	
  3317                           ;USART_16F_MASTER.c: 102: default: SPBRG = 25; break;
  3318                           
  3319  038F  3019               	movlw	25
  3320  0390  0099               	movwf	25	;volatile
  3321                           
  3322                           ;USART_16F_MASTER.c: 103: }
  3323  0391  0008               	return
  3324  0392                     l1538:	
  3325                           
  3326                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
  3327                           ; Switch size 1, requested type "space"
  3328                           ; Number of cases is 5, Range of values is 4 to 75
  3329                           ; switch strategies available:
  3330                           ; Name         Instructions Cycles
  3331                           ; simple_byte           16     9 (average)
  3332                           ; direct_byte          227    11 (fixed)
  3333                           ; jumptable            263     9 (fixed)
  3334                           ;	Chosen strategy is simple_byte
  3335  0392  0871               	movf	Setup_Baud_Gen@BAUD+1,w
  3336  0393  3A04               	xorlw	4	; case 4
  3337  0394  1903               	skipnz
  3338  0395  2BA3               	goto	l2208
  3339  0396  3A0D               	xorlw	13	; case 9
  3340  0397  1903               	skipnz
  3341  0398  2BA8               	goto	l2210
  3342  0399  3A2C               	xorlw	44	; case 37
  3343  039A  1903               	skipnz
  3344  039B  2BAD               	goto	l2212
  3345  039C  3A0D               	xorlw	13	; case 40
  3346  039D  1903               	skipnz
  3347  039E  2BB2               	goto	l2214
  3348  039F  3A63               	xorlw	99	; case 75
  3349  03A0  1903               	skipnz
  3350  03A1  2BB7               	goto	l2216
  3351  03A2  2B8F               	goto	l1534
  3352  03A3                     l2208:	
  3353                           
  3354                           ; Switch size 1, requested type "space"
  3355                           ; Number of cases is 1, Range of values is 176 to 176
  3356                           ; switch strategies available:
  3357                           ; Name         Instructions Cycles
  3358                           ; simple_byte            4     3 (average)
  3359                           ; direct_byte           14    11 (fixed)
  3360                           ; jumptable            263     9 (fixed)
  3361                           ;	Chosen strategy is simple_byte
  3362  03A3  0870               	movf	Setup_Baud_Gen@BAUD,w
  3363  03A4  3AB0               	xorlw	176	; case 176
  3364  03A5  1903               	skipnz
  3365  03A6  2B80               	goto	l1524
  3366  03A7  2B8F               	goto	l1534
  3367  03A8                     l2210:	
  3368                           
  3369                           ; Switch size 1, requested type "space"
  3370                           ; Number of cases is 1, Range of values is 96 to 96
  3371                           ; switch strategies available:
  3372                           ; Name         Instructions Cycles
  3373                           ; simple_byte            4     3 (average)
  3374                           ; direct_byte           14    11 (fixed)
  3375                           ; jumptable            263     9 (fixed)
  3376                           ;	Chosen strategy is simple_byte
  3377  03A8  0870               	movf	Setup_Baud_Gen@BAUD,w
  3378  03A9  3A60               	xorlw	96	; case 96
  3379  03AA  1903               	skipnz
  3380  03AB  2B83               	goto	l1526
  3381  03AC  2B8F               	goto	l1534
  3382  03AD                     l2212:	
  3383                           
  3384                           ; Switch size 1, requested type "space"
  3385                           ; Number of cases is 1, Range of values is 128 to 128
  3386                           ; switch strategies available:
  3387                           ; Name         Instructions Cycles
  3388                           ; simple_byte            4     3 (average)
  3389                           ; direct_byte           14    11 (fixed)
  3390                           ; jumptable            263     9 (fixed)
  3391                           ;	Chosen strategy is simple_byte
  3392  03AD  0870               	movf	Setup_Baud_Gen@BAUD,w
  3393  03AE  3A80               	xorlw	128	; case 128
  3394  03AF  1903               	skipnz
  3395  03B0  2B86               	goto	l1528
  3396  03B1  2B8F               	goto	l1534
  3397  03B2                     l2214:	
  3398                           
  3399                           ; Switch size 1, requested type "space"
  3400                           ; Number of cases is 1, Range of values is 177 to 177
  3401                           ; switch strategies available:
  3402                           ; Name         Instructions Cycles
  3403                           ; simple_byte            4     3 (average)
  3404                           ; direct_byte           14    11 (fixed)
  3405                           ; jumptable            263     9 (fixed)
  3406                           ;	Chosen strategy is simple_byte
  3407  03B2  0870               	movf	Setup_Baud_Gen@BAUD,w
  3408  03B3  3AB1               	xorlw	177	; case 177
  3409  03B4  1903               	skipnz
  3410  03B5  2B89               	goto	l1530
  3411  03B6  2B8F               	goto	l1534
  3412  03B7                     l2216:	
  3413                           
  3414                           ; Switch size 1, requested type "space"
  3415                           ; Number of cases is 1, Range of values is 0 to 0
  3416                           ; switch strategies available:
  3417                           ; Name         Instructions Cycles
  3418                           ; simple_byte            4     3 (average)
  3419                           ; direct_byte           11     8 (fixed)
  3420                           ; jumptable            260     6 (fixed)
  3421                           ;	Chosen strategy is simple_byte
  3422  03B7  0870               	movf	Setup_Baud_Gen@BAUD,w
  3423  03B8  3A00               	xorlw	0	; case 0
  3424  03B9  1903               	skipnz
  3425  03BA  2B8C               	goto	l1532
  3426  03BB  2B8F               	goto	l1534
  3427  03BC  0008               	return
  3428  03BD                     __end_of_Setup_Baud_Gen:	
  3429                           
  3430                           	psect	text18
  3431  01BF                     __ptext18:	
  3432 ;; *************** function _PIC_Initialization *****************
  3433 ;; Defined at:
  3434 ;;		line 142 in file "XBMobileNode.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;		None
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;		None
  3439 ;; Return value:  Size  Location     Type
  3440 ;;		None               void
  3441 ;; Registers used:
  3442 ;;		wreg, status,2
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3448 ;;      Params:         0       0       0       0       0
  3449 ;;      Locals:         0       0       0       0       0
  3450 ;;      Temps:          0       0       0       0       0
  3451 ;;      Totals:         0       0       0       0       0
  3452 ;;Total ram usage:        0 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; This function calls:
  3455 ;;		Nothing
  3456 ;; This function is called by:
  3457 ;;		_main
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461                           
  3462                           ;psect for function _PIC_Initialization
  3463  01BF                     _PIC_Initialization:	
  3464                           
  3465                           ;XBMobileNode.c: 144: GIE = 0;
  3466                           
  3467                           ;incstack = 0
  3468                           ; Regs used in _PIC_Initialization: [wreg+status,2]
  3469  01BF  138B               	bcf	11,7	;volatile
  3470                           
  3471                           ;XBMobileNode.c: 146: WDTCON = 0;
  3472  01C0  1283               	bcf	3,5	;RP0=0, select bank2
  3473  01C1  1703               	bsf	3,6	;RP1=1, select bank2
  3474  01C2  0185               	clrf	5	;volatile
  3475                           
  3476                           ;XBMobileNode.c: 147: OPTION_REG = 0b01011000;
  3477  01C3  3058               	movlw	88
  3478  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  3479  01C5  1303               	bcf	3,6	;RP1=0, select bank1
  3480  01C6  0081               	movwf	1	;volatile
  3481                           
  3482                           ;XBMobileNode.c: 149: ANSEL = 0;
  3483  01C7  1683               	bsf	3,5	;RP0=1, select bank3
  3484  01C8  1703               	bsf	3,6	;RP1=1, select bank3
  3485  01C9  0188               	clrf	8	;volatile
  3486                           
  3487                           ;XBMobileNode.c: 150: ANSELH = 0;
  3488  01CA  0189               	clrf	9	;volatile
  3489                           
  3490                           ;XBMobileNode.c: 151: PSTRCON = 0;
  3491  01CB  1683               	bsf	3,5	;RP0=1, select bank1
  3492  01CC  1303               	bcf	3,6	;RP1=0, select bank1
  3493  01CD  019D               	clrf	29	;volatile
  3494                           
  3495                           ;XBMobileNode.c: 152: TRISA = 0b00000000;
  3496  01CE  0185               	clrf	5	;volatile
  3497                           
  3498                           ;XBMobileNode.c: 153: TRISB = 0b11111111;
  3499  01CF  30FF               	movlw	255
  3500  01D0  0086               	movwf	6	;volatile
  3501                           
  3502                           ;XBMobileNode.c: 154: TRISC = 0b00000000;
  3503  01D1  0187               	clrf	7	;volatile
  3504                           
  3505                           ;XBMobileNode.c: 155: PORTA = 0;
  3506  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  3507  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  3508  01D4  0185               	clrf	5	;volatile
  3509                           
  3510                           ;XBMobileNode.c: 156: PORTB = 0;
  3511  01D5  0186               	clrf	6	;volatile
  3512                           
  3513                           ;XBMobileNode.c: 157: PORTC = 0;
  3514  01D6  0187               	clrf	7	;volatile
  3515                           
  3516                           ;XBMobileNode.c: 158: GIE = 1;
  3517  01D7  178B               	bsf	11,7	;volatile
  3518  01D8  0008               	return
  3519  01D9                     __end_of_PIC_Initialization:	
  3520  007E                     btemp	set	126	;btemp
  3521  007E                     wtemp	set	126
  3522  007E                     wtemp0	set	126
  3523  0080                     wtemp1	set	128
  3524  0082                     wtemp2	set	130
  3525  0084                     wtemp3	set	132
  3526  0086                     wtemp4	set	134
  3527  0088                     wtemp5	set	136
  3528  007F                     wtemp6	set	127
  3529  007E                     ttemp	set	126
  3530  007E                     ttemp0	set	126
  3531  0081                     ttemp1	set	129
  3532  0084                     ttemp2	set	132
  3533  0087                     ttemp3	set	135
  3534  007F                     ttemp4	set	127
  3535  007E                     ltemp	set	126
  3536  007E                     ltemp0	set	126
  3537  0082                     ltemp1	set	130
  3538  0086                     ltemp2	set	134
  3539  0080                     ltemp3	set	128


Data Sizes:
    Strings     58
    Constant    10
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     65      66
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 17
		 -> main@broadcastNumberBuf(BANK0[10]), main@lightingValueBuf(BANK0[10]), main@mobile(BANK0[17]), STR_10(CODE[6]), 
		 -> STR_9(CODE[4]), STR_8(CODE[2]), setDestination@subbuff2(BANK0[9]), STR_7(CODE[5]), 
		 -> STR_6(CODE[2]), setDestination@subbuff(BANK0[9]), STR_5(CODE[5]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_1(CODE[6]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 17
		 -> main@broadcastNumberBuf(BANK0[10]), main@lightingValueBuf(BANK0[10]), main@mobile(BANK0[17]), STR_10(CODE[6]), 
		 -> STR_9(CODE[4]), STR_8(CODE[2]), setDestination@subbuff2(BANK0[9]), STR_7(CODE[5]), 
		 -> STR_6(CODE[2]), setDestination@subbuff(BANK0[9]), STR_5(CODE[5]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_1(CODE[6]), 

    memcpy@d1	PTR void  size(1) Largest target is 9
		 -> setDestination@subbuff2(BANK0[9]), setDestination@subbuff(BANK0[9]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 9
		 -> setDestination@subbuff2(BANK0[9]), setDestination@subbuff(BANK0[9]), 

    memcpy@s1	PTR const void  size(1) Largest target is 17
		 -> STR_11(CODE[17]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_11(CODE[17]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[3]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> main@broadcastNumberBuf(BANK0[10]), main@lightingValueBuf(BANK0[10]), getRSSI@dBmbuf(COMMON[2]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S182$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    sp__memcpy	PTR void  size(1) Largest target is 9
		 -> setDestination@subbuff2(BANK0[9]), setDestination@subbuff(BANK0[9]), 

    setDestination@destination	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_11(CODE[17]), 

    getIdentification@result	PTR unsigned char  size(1) Largest target is 17
		 -> main@mobile(BANK0[17]), 

    send_USART_string@string	PTR const unsigned char  size(2) Largest target is 17
		 -> main@broadcastNumberBuf(BANK0[10]), main@lightingValueBuf(BANK0[10]), main@mobile(BANK0[17]), STR_10(CODE[6]), 
		 -> STR_9(CODE[4]), STR_8(CODE[2]), setDestination@subbuff2(BANK0[9]), STR_7(CODE[5]), 
		 -> STR_6(CODE[2]), setDestination@subbuff(BANK0[9]), STR_5(CODE[5]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_enterCommandMode
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setDestination->_send_USART_string
    _getIdentification->_send_USART_string
    _get_USART_char_timeout->_clear_usart_errors
    _exitCommandMode->_send_USART_string
    _enterCommandMode->_send_USART_string
    _send_USART_string->_strlen
    _send_USART_char->_clear_usart_errors
    _get_USART_char->_clear_usart_errors
    _USART_Init->_Setup_Baud_Gen

Critical Paths under _main in BANK0

    _main->_setDestination

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                44    44      0   10180
                                             21 BANK0     44    44      0
                 _PIC_Initialization
                         _USART_Init
                   _enterCommandMode
                    _exitCommandMode
                  _getIdentification
                    _send_USART_char
                  _send_USART_string
                     _setDestination
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             15    12      3    1570
                                              0 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setDestination                                      23    23      0    1946
                                             11 COMMON     2     2      0
                                              0 BANK0     21    21      0
                        _flush_RCREG
                     _get_USART_char
                             _memcpy
                  _send_USART_string
 ---------------------------------------------------------------------------------
 (3) _memcpy                                               7     4      3     386
                                              0 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (1) _getIdentification                                   19    19      0    2168
                                             11 COMMON     2     2      0
                                              0 BANK0     17    17      0
                        _flush_RCREG
             _get_USART_char_timeout
                  _send_USART_string
 ---------------------------------------------------------------------------------
 (2) _get_USART_char_timeout                               2     2      0      46
                                              1 COMMON     2     2      0
                 _clear_usart_errors
 ---------------------------------------------------------------------------------
 (1) _exitCommandMode                                      2     2      0    1277
                                             11 COMMON     2     2      0
                        _flush_RCREG
                     _get_USART_char
                  _send_USART_string
 ---------------------------------------------------------------------------------
 (1) _enterCommandMode                                     3     3      0    1277
                                             11 COMMON     3     3      0
                        _flush_RCREG
                     _get_USART_char
                  _send_USART_string
 ---------------------------------------------------------------------------------
 (2) _send_USART_string                                    5     3      2    1209
                                              6 COMMON     5     3      2
                    _send_USART_char
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               6     4      2     143
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _send_USART_char                                      2     2      0      22
                                              1 COMMON     2     2      0
                 _clear_usart_errors
 ---------------------------------------------------------------------------------
 (2) _get_USART_char                                       0     0      0       0
                 _clear_usart_errors
 ---------------------------------------------------------------------------------
 (4) _clear_usart_errors                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _flush_RCREG                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0      75
                     _Setup_Baud_Gen
 ---------------------------------------------------------------------------------
 (2) _Setup_Baud_Gen                                       2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PIC_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PIC_Initialization
   _USART_Init
     _Setup_Baud_Gen
   _enterCommandMode
     _flush_RCREG
     _get_USART_char
       _clear_usart_errors
     _send_USART_string
       _send_USART_char
         _clear_usart_errors
       _strlen
   _exitCommandMode
     _flush_RCREG
     _get_USART_char
       _clear_usart_errors
     _send_USART_string
       _send_USART_char
         _clear_usart_errors
       _strlen
   _getIdentification
     _flush_RCREG
     _get_USART_char_timeout
       _clear_usart_errors
     _send_USART_string
       _send_USART_char
         _clear_usart_errors
       _strlen
   _send_USART_char
     _clear_usart_errors
   _send_USART_string
     _send_USART_char
       _clear_usart_errors
     _strlen
   _setDestination
     _flush_RCREG
     _get_USART_char
       _clear_usart_errors
     _memcpy
     _send_USART_string
       _send_USART_char
         _clear_usart_errors
       _strlen
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      60       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     41      42       5       82.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      10       7       20.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      60      12        0.0%


Microchip Technology PIC Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sat Feb 01 23:38:23 2014

                                pc 0002                                 fsr 0004  
                main@lightingValue 005D                                l104 017A  
                              l115 0195                                l109 0280  
                              l126 01B4                                l159 05A7  
                              l168 060C                                _GIE 005F  
                              _RB0 0030                                _RB1 0031  
                              _RA7 002F                                u725 0259  
                              u815 027E                                u745 0343  
                              u915 02B4                                u835 029B  
                              u765 034F                                u775 035B  
                              u785 0365                                u865 02D7  
                              _RX9 00C6                                u955 04DC  
                              u885 02E8                                u895 02F1  
                              _TX9 04C6                                fsr0 0004  
                              indf 0000                     _setDestination 03BD  
                     __CFG_LVP$OFF 0000           __end_of_enterCommandMode 0338  
                             l2100 073F                               l2210 03A8  
                             l2212 03AD                               l2060 0690  
                             l2214 03B2                               l2046 065F  
                             l2216 03B7                               l2208 03A3  
                             l2072 06D9                               l1530 0389  
                             l1532 038C                               l1524 0380  
                             l2092 0720                               l2084 06FF  
                             l2068 06AF                               l1534 038F  
                             l1526 0383                               l1528 0386  
                             l1538 0392                               l1810 04C5  
                             l1572 0221                               l1652 024D  
                             l1574 0234                               l1734 0286  
                             l1742 029D                               l1910 05DE  
                             l1806 04BF                               l1760 02D4  
                             l1832 04F9                               l1824 04F5  
                             l1930 0612                               l1922 05FA  
                             l1690 0364                               l1682 0340  
                             l1762 02E2                               l1770 02FB  
                             l1818 04E6                               l1834 0472  
                             l1780 02A0                               l1916 05F4  
                             l1852 055E                               l1684 034E  
                             l1836 053F                               l1926 0608  
                             l1846 054C                               l1694 036F  
                             l1766 02F0                               l1790 0492  
                             l1872 058F                               l1960 03FA  
                             l1882 05A3                               l1866 0579  
                             l1892 05B2                               l1796 04A8  
                             l1886 05AD                               l1878 0595  
                             l1990 0461                               l1966 0410  
                             l1984 044B                               l1898 05C8  
                             STR_1 002E                               STR_2 0054  
                             STR_3 0034                               STR_4 003A  
                             STR_5 0046                               STR_6 0032  
                             STR_7 004B                               STR_8 0032  
                             STR_9 0050                               _BRGH 04C2  
                             _CREN 00C4                               _FERR 00C2  
                             u1305 06F9                               u1315 0708  
                             u1325 072B                               u1407 07AF  
                             u1417 07BE                               u1337 063E  
                             u1427 07CD                               u1347 06D2  
                             u1275 0678                               u1437 07DC  
                             u1357 06E4                               u1285 069B  
                             u1447 07EC                               u1367 0773  
                             u1457 0465                               u1377 0782  
                             u1467 030B                               u1387 0791  
                             u1477 031D                               u1397 07A0  
                             u1487 01A2                               _RCIE 0465  
                             _RCIF 0065                               _OERR 00C1  
                             _SPEN 00C7                               _TXIE 0464  
                             _TXEN 04C5                               _TXIF 0064  
                             _SYNC 04C4                               _main 062B  
                             btemp 007E                               ltemp 007E  
                             start 0000                               ttemp 007E  
                             wtemp 007E                      __CFG_IESO$OFF 0000  
                     ?_flush_RCREG 0070                    _exitCommandMode 01F7  
                            ?_main 0070                              STR_10 0040  
                            STR_11 001D                              STR_12 0054  
                            STR_13 0054                              STR_14 0054  
                            STR_15 0054                              STR_16 0054  
                            _BRG16 0C3B                              STR_17 0054  
                    __CFG_WDTE$OFF 0000                              _ANSEL 0188  
                  __end_of___lwdiv 0376             __end_of_setDestination 046B  
                  __end_of___lwmod 0302                              _RCREG 001A  
                            _SPBRG 0099                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISC 0087        __size_of_clear_usart_errors 0017  
                            _TXREG 0019                 Setup_Baud_Gen@BAUD 0070  
                   __CFG_FCMEN$OFF 0000                    __end_of_dpowers 001D  
                            _dummy 0061                     __CFG_BOREN$OFF 0000  
                            pclath 000A                              ltemp0 007E  
                            ltemp1 0082                              ltemp2 0086  
                            ltemp3 0080                    _send_USART_char 0194  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F        __size_of_PIC_Initialization 001A  
                            status 0003                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                              wtemp6 007F  
                  __end_of_sprintf 0544                        ?_USART_Init 0070  
                   __CFG_MCLRE$OFF 0000                    __initialization 07F4  
                     __end_of_main 07F4                             ??_main 0035  
                  ?_setDestination 0070               main@lightingValueBuf 0053  
                           _ANSELH 0189                             _SPBRGH 009A  
            setDestination@subbuff 0020                             _WDTCON 0105  
          __end_of_exitCommandMode 021B                          ??___lwdiv 0074  
                        ??___lwmod 007C                             _memcpy 0244  
                           _strlen 021B            __size_of_Setup_Baud_Gen 0047  
          send_USART_string@string 0076            __end_of_send_USART_char 01A8  
              __size_of_USART_Init 001E                          ??_sprintf 0023  
          __size_of_get_USART_char 000B            __end_of__initialization 07FC  
                   __pcstackCOMMON 0070          setDestination@destination 0032  
             __size_of_flush_RCREG 000F                  ?_enterCommandMode 0070  
                       __pbssBANK0 0061                         __pbssBANK1 00A0  
               ??_enterCommandMode 007B           ??_get_USART_char_timeout 0071  
                 ?_exitCommandMode 0070                         __pmaintext 062B  
           setDestination@iter_144 0034                            ?_memcpy 0070  
                _getIdentification 0544                            ?_strlen 0070  
             enterCommandMode@iter 007D                 ?_getIdentification 0070  
                 ?_send_USART_char 0070             setDestination@subbuff2 0029  
                          _PSTRCON 009D                ??_getIdentification 007B  
                       __stringtab 0003                       ??_USART_Init 0072  
            getIdentification@iter 0029              getIdentification@temp 0020  
                 ??_setDestination 007B                            ___lwdiv 0338  
                          ___lwmod 02CE          __end_of_getIdentification 062B  
                  __size_of_memcpy 002D         __end_of_clear_usart_errors 01BF  
                          __ptext1 046B                            __ptext2 02CE  
                          __ptext3 0338                            __ptext4 03BD  
                          __ptext5 0244                            __ptext6 0544  
                          __ptext7 0271                            __ptext8 01F7  
                          __ptext9 0302                     _Setup_Baud_Gen 0376  
                  __size_of_strlen 0029                            _dpowers 0013  
               __end_of_USART_Init 01F7                            _sprintf 046B  
                          clrloop0 0173         __end_of_PIC_Initialization 01D9  
                   _get_USART_char 017A               end_of_initialization 07FC  
                          memcpy@d 0074                            memcpy@n 0071  
                          memcpy@s 0075    __size_of_get_USART_char_timeout 002E  
           __end_of_Setup_Baud_Gen 03BD                            strlen@s 0070  
                _send_USART_string 029F                 ?_send_USART_string 0076  
           __end_of_get_USART_char 0185                ??_send_USART_string 0078  
                       main@mobile 0038                       _BYTES_BUFFER 00A0  
        __end_of_send_USART_string 02CE         __size_of_getIdentification 00E7  
                  ?_Setup_Baud_Gen 0070                     __end_of_memcpy 0271  
            send_USART_string@iter 007A             _get_USART_char_timeout 0271  
                   __end_of_strlen 0244                start_initialization 07F4  
                  ?_get_USART_char 0070                main@broadcastNumber 005F  
           main@broadcastNumberBuf 0049           __CFG_FOSC$INTRC_NOCLKOUT 0000  
                    ??_flush_RCREG 0070  get_USART_char_timeout@timeout_int 0071  
          getIdentification@offset 0028          __size_of_enterCommandMode 0036  
          getIdentification@result 002C                           ??_memcpy 0073  
                         ??_strlen 0072                          ___latbits 0002  
                    __pcstackBANK0 0020                __end_of__stringdata 0057  
               setDestination@iter 0033                        sprintf@_val 0029  
                      sprintf@flag 0027                        sprintf@prec 0028  
                 ___lwdiv@dividend 0072         __size_of_send_USART_string 002F  
                         ?___lwdiv 0070                           ?___lwmod 0078  
              __end_of_flush_RCREG 0194           __size_of_exitCommandMode 0024  
                        __pstrings 0003                   ___lwdiv@quotient 0075  
                         ?_sprintf 0020                 _clear_usart_errors 01A8  
         send_USART_char@character 0072           __size_of_send_USART_char 0014  
                        clear_ram0 0172                ?_clear_usart_errors 0070  
               _PIC_Initialization 01BF                ?_PIC_Initialization 0070  
                      __stringbase 0012                        __stringdata 001D  
             ??_clear_usart_errors 0070               ??_PIC_Initialization 0070  
                      _flush_RCREG 0185                   ??_Setup_Baud_Gen 0072  
                 _enterCommandMode 0302                exitCommandMode@iter 007C  
                 __size_of___lwdiv 003E            ?_get_USART_char_timeout 0070  
                 __size_of___lwmod 0034                 __end_of__stringtab 0013  
                 ??_get_USART_char 0071                    ___lwdiv@divisor 0070  
          __size_of_setDestination 00AE                  ??_exitCommandMode 007B  
                  ___lwdiv@counter 0077                           __ptext10 029F  
                         __ptext11 021B                           __ptext12 0194  
                         __ptext13 017A                           __ptext14 01A8  
                         __ptext15 0185                           __ptext16 01D9  
                         __ptext17 0376                           __ptext18 01BF  
                 __size_of_sprintf 00D9                      __size_of_main 01C9  
                ??_send_USART_char 0071     __end_of_get_USART_char_timeout 029F  
                         memcpy@d1 0076                           memcpy@s1 0070  
                        sprintf@ap 0026                          sprintf@sp 002D  
                 ___lwmod@dividend 007A                          stringcode 000D  
                       _OPTION_REG 0081                           sprintf@c 002E  
                         sprintf@f 0020                    ___lwmod@divisor 0078  
                         strlen@cp 0074                    ___lwmod@counter 007D  
                         stringdir 000D                           stringtab 0003  
                       _USART_Init 01D9          getIdentification@iter_130 002E  
        getIdentification@iter_132 002B          getIdentification@iter_133 002F  
        getIdentification@iter_134 0030          getIdentification@iter_128 002A  
        getIdentification@iter_129 002D  
