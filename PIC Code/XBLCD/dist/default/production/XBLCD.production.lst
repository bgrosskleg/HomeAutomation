

Microchip Technology PIC LITE Macro Assembler V1.21 build 54009 
                                                                                               Sat Feb 01 23:33:19 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0009                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000D                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0013                     	;# 
    65  0014                     	;# 
    66  0015                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  001D                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  0081                     	;# 
    80  0085                     	;# 
    81  0086                     	;# 
    82  0087                     	;# 
    83  0089                     	;# 
    84  008C                     	;# 
    85  008D                     	;# 
    86  008E                     	;# 
    87  008F                     	;# 
    88  0090                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0093                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  0105                     	;# 
   107  0107                     	;# 
   108  0108                     	;# 
   109  0109                     	;# 
   110  010C                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  0185                     	;# 
   116  0187                     	;# 
   117  0188                     	;# 
   118  0189                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121                           
   122                           	psect	strings
   123  0003                     __pstrings:	
   124  0003                     stringtab:	
   125  0003                     __stringtab:	
   126                           
   127                           ;	String table - string pointers are 1 byte each
   128  0003  1BFF               	btfsc	btemp+1,7
   129  0004  280D               	ljmp	stringcode
   130  0005  1383               	bcf	3,7
   131  0006  187F               	btfsc	btemp+1,0
   132  0007  1783               	bsf	3,7
   133  0008  0800               	movf	0,w
   134  0009  0A84               	incf	4,f
   135  000A  1903               	skipnz
   136  000B  0AFF               	incf	btemp+1,f
   137  000C  0008               	return
   138  000D                     stringcode:	
   139  000D                     stringdir:	
   140  000D  3000               	movlw	high stringdir
   141  000E  008A               	movwf	10
   142  000F  0804               	movf	4,w
   143  0010  0A84               	incf	4,f
   144  0011  0782               	addwf	2,f
   145  0012                     __stringbase:	
   146  0012  3400               	retlw	0
   147  0013                     __end_of__stringtab:	
   148  0013                     _dpowers:	
   149  0013  3401               	retlw	1
   150  0014  3400               	retlw	0
   151  0015  340A               	retlw	10
   152  0016  3400               	retlw	0
   153  0017  3464               	retlw	100
   154  0018  3400               	retlw	0
   155  0019  34E8               	retlw	232
   156  001A  3403               	retlw	3
   157  001B  3410               	retlw	16
   158  001C  3427               	retlw	39
   159  001D                     __end_of_dpowers:	
   160  0005                     _PORTA	set	5
   161  0006                     _PORTB	set	6
   162  0007                     _PORTC	set	7
   163  001A                     _RCREG	set	26
   164  0019                     _TXREG	set	25
   165  00C4                     _CREN	set	196
   166  00C2                     _FERR	set	194
   167  005F                     _GIE	set	95
   168  00C1                     _OERR	set	193
   169  0029                     _RA1	set	41
   170  002A                     _RA2	set	42
   171  002B                     _RA3	set	43
   172  002C                     _RA4	set	44
   173  003D                     _RC5	set	61
   174  0065                     _RCIF	set	101
   175  00C6                     _RX9	set	198
   176  00C7                     _SPEN	set	199
   177  0064                     _TXIF	set	100
   178  0081                     _OPTION_REG	set	129
   179  009D                     _PSTRCON	set	157
   180  0099                     _SPBRG	set	153
   181  009A                     _SPBRGH	set	154
   182  0085                     _TRISA	set	133
   183  0086                     _TRISB	set	134
   184  0087                     _TRISC	set	135
   185  04C2                     _BRGH	set	1218
   186  0465                     _RCIE	set	1125
   187  04C4                     _SYNC	set	1220
   188  04C6                     _TX9	set	1222
   189  04C5                     _TXEN	set	1221
   190  0464                     _TXIE	set	1124
   191  0105                     _WDTCON	set	261
   192  0188                     _ANSEL	set	392
   193  0189                     _ANSELH	set	393
   194  0C3B                     _BRG16	set	3131
   195  001D                     __stringdata:	
   196  001D                     STR_12:	
   197  001D  3430               	retlw	48	;'0'
   198  001E  3430               	retlw	48	;'0'
   199  001F  3430               	retlw	48	;'0'
   200  0020  3430               	retlw	48	;'0'
   201  0021  3430               	retlw	48	;'0'
   202  0022  3430               	retlw	48	;'0'
   203  0023  3430               	retlw	48	;'0'
   204  0024  3430               	retlw	48	;'0'
   205  0025  3430               	retlw	48	;'0'
   206  0026  3430               	retlw	48	;'0'
   207  0027  3430               	retlw	48	;'0'
   208  0028  3430               	retlw	48	;'0'
   209  0029  3430               	retlw	48	;'0'
   210  002A  3430               	retlw	48	;'0'
   211  002B  3430               	retlw	48	;'0'
   212  002C  3430               	retlw	48	;'0'
   213  002D  3400               	retlw	0
   214  002E                     STR_18:	
   215  002E  344C               	retlw	76	;'L'
   216  002F  3469               	retlw	105	;'i'
   217  0030  3467               	retlw	103	;'g'
   218  0031  3468               	retlw	104	;'h'
   219  0032  3474               	retlw	116	;'t'
   220  0033  3469               	retlw	105	;'i'
   221  0034  346E               	retlw	110	;'n'
   222  0035  3467               	retlw	103	;'g'
   223  0036  3420               	retlw	32	;' '
   224  0037  3456               	retlw	86	;'V'
   225  0038  3461               	retlw	97	;'a'
   226  0039  346C               	retlw	108	;'l'
   227  003A  3475               	retlw	117	;'u'
   228  003B  3465               	retlw	101	;'e'
   229  003C  343A               	retlw	58	;':'
   230  003D  3400               	retlw	0
   231  003E                     STR_13:	
   232  003E  340D               	retlw	13
   233  003F  3442               	retlw	66	;'B'
   234  0040  3472               	retlw	114	;'r'
   235  0041  346F               	retlw	111	;'o'
   236  0042  3461               	retlw	97	;'a'
   237  0043  3464               	retlw	100	;'d'
   238  0044  3463               	retlw	99	;'c'
   239  0045  3461               	retlw	97	;'a'
   240  0046  3473               	retlw	115	;'s'
   241  0047  3474               	retlw	116	;'t'
   242  0048  3420               	retlw	32	;' '
   243  0049  3423               	retlw	35	;'#'
   244  004A  343A               	retlw	58	;':'
   245  004B  3420               	retlw	32	;' '
   246  004C  3400               	retlw	0
   247  004D                     STR_11:	
   248  004D  3449               	retlw	73	;'I'
   249  004E  346E               	retlw	110	;'n'
   250  004F  3469               	retlw	105	;'i'
   251  0050  3474               	retlw	116	;'t'
   252  0051  3469               	retlw	105	;'i'
   253  0052  3461               	retlw	97	;'a'
   254  0053  346C               	retlw	108	;'l'
   255  0054  3469               	retlw	105	;'i'
   256  0055  347A               	retlw	122	;'z'
   257  0056  3465               	retlw	101	;'e'
   258  0057  3464               	retlw	100	;'d'
   259  0058  342E               	retlw	46	;'.'
   260  0059  342E               	retlw	46	;'.'
   261  005A  342E               	retlw	46	;'.'
   262  005B  3400               	retlw	0
   263  005C                     STR_14:	
   264  005C  340D               	retlw	13
   265  005D  344D               	retlw	77	;'M'
   266  005E  346F               	retlw	111	;'o'
   267  005F  3462               	retlw	98	;'b'
   268  0060  3469               	retlw	105	;'i'
   269  0061  346C               	retlw	108	;'l'
   270  0062  3465               	retlw	101	;'e'
   271  0063  343A               	retlw	58	;':'
   272  0064  3420               	retlw	32	;' '
   273  0065  3400               	retlw	0
   274  0066                     STR_15:	
   275  0066  340D               	retlw	13
   276  0067  3453               	retlw	83	;'S'
   277  0068  3465               	retlw	101	;'e'
   278  0069  346E               	retlw	110	;'n'
   279  006A  3473               	retlw	115	;'s'
   280  006B  346F               	retlw	111	;'o'
   281  006C  3472               	retlw	114	;'r'
   282  006D  343A               	retlw	58	;':'
   283  006E  3420               	retlw	32	;' '
   284  006F  3400               	retlw	0
   285  0070                     STR_16:	
   286  0070  340D               	retlw	13
   287  0071  3452               	retlw	82	;'R'
   288  0072  3453               	retlw	83	;'S'
   289  0073  3453               	retlw	83	;'S'
   290  0074  3449               	retlw	73	;'I'
   291  0075  343A               	retlw	58	;':'
   292  0076  3420               	retlw	32	;' '
   293  0077  3400               	retlw	0
   294  0078                     STR_1:	
   295  0078  3441               	retlw	65	;'A'
   296  0079  3454               	retlw	84	;'T'
   297  007A  3444               	retlw	68	;'D'
   298  007B  3442               	retlw	66	;'B'
   299  007C  340D               	retlw	13
   300  007D  3400               	retlw	0
   301  007E                     STR_3:	
   302  007E  3441               	retlw	65	;'A'
   303  007F  3454               	retlw	84	;'T'
   304  0080  3453               	retlw	83	;'S'
   305  0081  3448               	retlw	72	;'H'
   306  0082  340D               	retlw	13
   307  0083  3400               	retlw	0
   308  0084                     STR_4:	
   309  0084  3441               	retlw	65	;'A'
   310  0085  3454               	retlw	84	;'T'
   311  0086  3453               	retlw	83	;'S'
   312  0087  344C               	retlw	76	;'L'
   313  0088  340D               	retlw	13
   314  0089  3400               	retlw	0
   315  008A                     STR_10:	
   316  008A  3441               	retlw	65	;'A'
   317  008B  3454               	retlw	84	;'T'
   318  008C  3443               	retlw	67	;'C'
   319  008D  344E               	retlw	78	;'N'
   320  008E  340D               	retlw	13
   321  008F  3400               	retlw	0
   322  0090                     STR_17:	
   323  0090  3452               	retlw	82	;'R'
   324  0091  3453               	retlw	83	;'S'
   325  0092  3453               	retlw	83	;'S'
   326  0093  3449               	retlw	73	;'I'
   327  0094  343A               	retlw	58	;':'
   328  0095  3400               	retlw	0
   329  0096                     STR_5:	
   330  0096  3441               	retlw	65	;'A'
   331  0097  3454               	retlw	84	;'T'
   332  0098  3444               	retlw	68	;'D'
   333  0099  3448               	retlw	72	;'H'
   334  009A  3400               	retlw	0
   335  009B                     STR_7:	
   336  009B  3441               	retlw	65	;'A'
   337  009C  3454               	retlw	84	;'T'
   338  009D  3444               	retlw	68	;'D'
   339  009E  344C               	retlw	76	;'L'
   340  009F  3400               	retlw	0
   341  00A0                     STR_9:	
   342  00A0  342B               	retlw	43	;'+'
   343  00A1  342B               	retlw	43	;'+'
   344  00A2  342B               	retlw	43	;'+'
   345  00A3  3400               	retlw	0
   346  00A4                     STR_2:	
   347  00A4  3425               	retlw	37	;'%'
   348  00A5  3464               	retlw	100	;'d'
   349  00A6  3400               	retlw	0
   350  00A7                     __end_of__stringdata:	
   351                           
   352                           ; #config settings
   353  0000                     
   354                           	psect	cinit
   355  07F5                     start_initialization:	
   356  07F5                     __initialization:	
   357                           
   358                           ; Clear objects allocated to BANK0
   359  07F5  1383               	bcf	3,7	;select IRP bank0
   360  07F6  303F               	movlw	low __pbssBANK0
   361  07F7  0084               	movwf	4
   362  07F8  3050               	movlw	low (__pbssBANK0+17)
   363  07F9  120A  158A  246D   	fcall	clear_ram0
   364  07FC                     end_of_initialization:	
   365                           ;End of C runtime variable initialization code
   366                           
   367  07FC                     __end_of__initialization:	
   368  07FC  0183               	clrf	3
   369  07FD  120A  118A  2C2F   	ljmp	_main	;jump to C main() function
   370                           
   371                           	psect	bssBANK0
   372  003F                     __pbssBANK0:	
   373  003F                     _BYTES_BUFFER:	
   374  003F                     	ds	16
   375  004F                     _dummy:	
   376  004F                     	ds	1
   377                           
   378                           	psect	clrtext
   379  0C6D                     clear_ram0:	
   380                           ;	Called with FSR containing the base address, and
   381                           ;	W with the last address+1
   382                           
   383  0C6D  0064               	clrwdt	;clear the watchdog before getting into this loop
   384  0C6E                     clrloop0:	
   385  0C6E  0180               	clrf	0	;clear RAM location pointed to by FSR
   386  0C6F  0A84               	incf	4,f	;increment pointer
   387  0C70  0604               	xorwf	4,w	;XOR with final address
   388  0C71  1903               	btfsc	3,2	;have we reached the end yet?
   389  0C72  3400               	retlw	0	;all done for this memory range, return
   390  0C73  0604               	xorwf	4,w	;XOR again to restore value
   391  0C74  2C6E               	goto	clrloop0	;do the next byte
   392                           
   393                           	psect	cstackBANK1
   394  00A0                     __pcstackBANK1:	
   395  00A0                     main@sensor:	
   396                           
   397                           ; 18 bytes @ 0x0
   398  00A0                     	ds	18
   399  00B2                     main@mobile:	
   400                           
   401                           ; 17 bytes @ 0x12
   402  00B2                     	ds	17
   403  00C3                     main@dBm:	
   404                           
   405                           ; 7 bytes @ 0x23
   406  00C3                     	ds	7
   407  00CA                     main@broadcastNumber:	
   408                           
   409                           ; 4 bytes @ 0x2A
   410  00CA                     	ds	4
   411  00CE                     main@lightingValue:	
   412                           
   413                           ; 4 bytes @ 0x2E
   414  00CE                     	ds	4
   415  00D2                     main@RSSI:	
   416                           
   417                           ; 5 bytes @ 0x32
   418  00D2                     	ds	5
   419  00D7                     main@command:	
   420                           
   421                           ; 1 bytes @ 0x37
   422  00D7                     	ds	1
   423  00D8                     main@iter:	
   424                           
   425                           ; 1 bytes @ 0x38
   426  00D8                     	ds	1
   427  00D9                     main@iter_187:	
   428                           
   429                           ; 1 bytes @ 0x39
   430  00D9                     	ds	1
   431  00DA                     main@percentage:	
   432                           
   433                           ; 7 bytes @ 0x3A
   434  00DA                     	ds	7
   435  00E1                     main@iter_197:	
   436                           
   437                           ; 1 bytes @ 0x41
   438  00E1                     	ds	1
   439                           
   440                           	psect	cstackCOMMON
   441  0070                     __pcstackCOMMON:	
   442  0070                     ?_LCD_Write:	
   443  0070                     ??_LCD_Write:	
   444                           ; 0 bytes @ 0x0
   445                           
   446  0070                     ?_LCD_Command:	
   447                           ; 0 bytes @ 0x0
   448                           
   449  0070                     ?_Setup_Baud_Gen:	
   450                           ; 0 bytes @ 0x0
   451                           
   452  0070                     ?_clear_usart_errors:	
   453                           ; 0 bytes @ 0x0
   454                           
   455  0070                     ??_clear_usart_errors:	
   456                           ; 0 bytes @ 0x0
   457                           
   458  0070                     ?_PIC_Initialization:	
   459                           ; 0 bytes @ 0x0
   460                           
   461  0070                     ??_PIC_Initialization:	
   462                           ; 0 bytes @ 0x0
   463                           
   464  0070                     ?_isspace:	
   465                           ; 0 bytes @ 0x0
   466                           
   467  0070                     ??_isspace:	
   468                           ; 1 bit 
   469                           
   470  0070                     ?_isalpha:	
   471                           ; 0 bytes @ 0x0
   472                           
   473  0070                     ??_toupper:	
   474                           ; 1 bit 
   475                           
   476  0070                     ?_isdigit:	
   477                           ; 0 bytes @ 0x0
   478                           
   479  0070                     ??_isdigit:	
   480                           ; 1 bit 
   481                           
   482  0070                     ?_isupper:	
   483                           ; 0 bytes @ 0x0
   484                           
   485  0070                     ??_isupper:	
   486                           ; 1 bit 
   487                           
   488  0070                     ?_LCD_Init:	
   489                           ; 0 bytes @ 0x0
   490                           
   491  0070                     ?_LCD_Clear_Display:	
   492                           ; 0 bytes @ 0x0
   493                           
   494  0070                     ?_Goto_Second_Line:	
   495                           ; 0 bytes @ 0x0
   496                           
   497  0070                     ?_USART_Init:	
   498                           ; 0 bytes @ 0x0
   499                           
   500  0070                     ?_send_USART_char:	
   501                           ; 0 bytes @ 0x0
   502                           
   503  0070                     ?_flush_RCREG:	
   504                           ; 0 bytes @ 0x0
   505                           
   506  0070                     ??_flush_RCREG:	
   507                           ; 0 bytes @ 0x0
   508                           
   509  0070                     ?_getIdentification:	
   510                           ; 0 bytes @ 0x0
   511                           
   512  0070                     ?_setDestination:	
   513                           ; 0 bytes @ 0x0
   514                           
   515  0070                     ?_enterCommandMode:	
   516                           ; 0 bytes @ 0x0
   517                           
   518  0070                     ?_exitCommandMode:	
   519                           ; 0 bytes @ 0x0
   520                           
   521  0070                     ?_main:	
   522                           ; 0 bytes @ 0x0
   523                           
   524  0070                     ?_memcpy:	
   525                           ; 0 bytes @ 0x0
   526                           
   527  0070                     ?_toupper:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_get_USART_char:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_get_USART_char_timeout:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_strlen:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?___lwdiv:	
   540                           ; 2 bytes @ 0x0
   541                           
   542  0070                     ?___lmul:	
   543                           ; 2 bytes @ 0x0
   544                           
   545  0070                     memcpy@s1:	
   546                           ; 4 bytes @ 0x0
   547                           
   548  0070                     _isdigit$506:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     _isspace$509:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     _isupper$512:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     LCD_Command@command:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     Setup_Baud_Gen@BAUD:	
   561                           ; 2 bytes @ 0x0
   562                           
   563  0070                     ___lwdiv@divisor:	
   564                           ; 2 bytes @ 0x0
   565                           
   566  0070                     strlen@s:	
   567                           ; 2 bytes @ 0x0
   568                           
   569  0070                     ___lmul@multiplier:	
   570                           ; 2 bytes @ 0x0
   571                           
   572                           
   573                           ; 4 bytes @ 0x0
   574  0070                     	ds	1
   575  0071                     ??_get_USART_char:	
   576  0071                     ??_get_USART_char_timeout:	
   577                           ; 0 bytes @ 0x1
   578                           
   579  0071                     ??_send_USART_char:	
   580                           ; 0 bytes @ 0x1
   581                           
   582  0071                     LCD_Write@data:	
   583                           ; 0 bytes @ 0x1
   584                           
   585  0071                     toupper@c:	
   586                           ; 1 bytes @ 0x1
   587                           
   588  0071                     isdigit@c:	
   589                           ; 1 bytes @ 0x1
   590                           
   591  0071                     isspace@c:	
   592                           ; 1 bytes @ 0x1
   593                           
   594  0071                     isupper@c:	
   595                           ; 1 bytes @ 0x1
   596                           
   597  0071                     get_USART_char_timeout@timeout_int:	
   598                           ; 1 bytes @ 0x1
   599                           
   600  0071                     memcpy@n:	
   601                           ; 2 bytes @ 0x1
   602                           
   603                           
   604                           ; 2 bytes @ 0x1
   605  0071                     	ds	1
   606  0072                     ??_strlen:	
   607  0072                     ??_LCD_Command:	
   608                           ; 0 bytes @ 0x2
   609                           
   610  0072                     ??_Setup_Baud_Gen:	
   611                           ; 0 bytes @ 0x2
   612                           
   613  0072                     ??_isalpha:	
   614                           ; 0 bytes @ 0x2
   615                           
   616  0072                     ??_USART_Init:	
   617                           ; 0 bytes @ 0x2
   618                           
   619  0072                     send_USART_char@character:	
   620                           ; 0 bytes @ 0x2
   621                           
   622  0072                     _isalpha$503:	
   623                           ; 1 bytes @ 0x2
   624                           
   625  0072                     ___lwdiv@dividend:	
   626                           ; 1 bytes @ 0x2
   627                           
   628                           
   629                           ; 2 bytes @ 0x2
   630  0072                     	ds	1
   631  0073                     ??_memcpy:	
   632  0073                     isalpha@c:	
   633                           ; 0 bytes @ 0x3
   634                           
   635                           
   636                           ; 1 bytes @ 0x3
   637  0073                     	ds	1
   638  0074                     ??_LCD_Init:	
   639  0074                     ??_LCD_Clear_Display:	
   640                           ; 0 bytes @ 0x4
   641                           
   642  0074                     ??_Goto_Second_Line:	
   643                           ; 0 bytes @ 0x4
   644                           
   645  0074                     ??___lwdiv:	
   646                           ; 0 bytes @ 0x4
   647                           
   648  0074                     memcpy@d1:	
   649                           ; 0 bytes @ 0x4
   650                           
   651  0074                     strlen@cp:	
   652                           ; 1 bytes @ 0x4
   653                           
   654  0074                     ___lmul@multiplicand:	
   655                           ; 2 bytes @ 0x4
   656                           
   657                           
   658                           ; 4 bytes @ 0x4
   659  0074                     	ds	1
   660  0075                     memcpy@d:	
   661  0075                     ___lwdiv@quotient:	
   662                           ; 1 bytes @ 0x5
   663                           
   664                           
   665                           ; 2 bytes @ 0x5
   666  0075                     	ds	1
   667  0076                     ?_print_to_screen:	
   668  0076                     ?_send_USART_string:	
   669                           ; 0 bytes @ 0x6
   670                           
   671  0076                     memcpy@s:	
   672                           ; 0 bytes @ 0x6
   673                           
   674  0076                     print_to_screen@word:	
   675                           ; 1 bytes @ 0x6
   676                           
   677  0076                     send_USART_string@string:	
   678                           ; 2 bytes @ 0x6
   679                           
   680                           
   681                           ; 2 bytes @ 0x6
   682  0076                     	ds	1
   683  0077                     ___lwdiv@counter:	
   684                           
   685                           ; 1 bytes @ 0x7
   686  0077                     	ds	1
   687  0078                     ??_print_to_screen:	
   688  0078                     ??_send_USART_string:	
   689                           ; 0 bytes @ 0x8
   690                           
   691  0078                     ??___lmul:	
   692                           ; 0 bytes @ 0x8
   693                           
   694  0078                     ?___lwmod:	
   695                           ; 0 bytes @ 0x8
   696                           
   697  0078                     ___lwmod@divisor:	
   698                           ; 2 bytes @ 0x8
   699                           
   700                           
   701                           ; 2 bytes @ 0x8
   702  0078                     	ds	1
   703  0079                     ___lmul@product:	
   704                           
   705                           ; 4 bytes @ 0x9
   706  0079                     	ds	1
   707  007A                     print_to_screen@iter:	
   708  007A                     send_USART_string@iter:	
   709                           ; 1 bytes @ 0xA
   710                           
   711  007A                     ___lwmod@dividend:	
   712                           ; 1 bytes @ 0xA
   713                           
   714                           
   715                           ; 2 bytes @ 0xA
   716  007A                     	ds	1
   717  007B                     ??_getIdentification:	
   718  007B                     ??_setDestination:	
   719                           ; 0 bytes @ 0xB
   720                           
   721  007B                     ??_enterCommandMode:	
   722                           ; 0 bytes @ 0xB
   723                           
   724  007B                     ??_exitCommandMode:	
   725                           ; 0 bytes @ 0xB
   726                           
   727                           
   728                           ; 0 bytes @ 0xB
   729  007B                     	ds	1
   730  007C                     ??___lwmod:	
   731  007C                     exitCommandMode@iter:	
   732                           ; 0 bytes @ 0xC
   733                           
   734                           
   735                           ; 1 bytes @ 0xC
   736  007C                     	ds	1
   737  007D                     enterCommandMode@iter:	
   738  007D                     ___lwmod@counter:	
   739                           ; 1 bytes @ 0xD
   740                           
   741                           
   742                           ; 1 bytes @ 0xD
   743  007D                     	ds	1
   744                           
   745                           	psect	cstackBANK0
   746  0020                     __pcstackBANK0:	
   747  0020                     ?_sprintf:	
   748  0020                     ?_strtol:	
   749                           ; 2 bytes @ 0x0
   750                           
   751  0020                     sprintf@f:	
   752                           ; 4 bytes @ 0x0
   753                           
   754  0020                     strtol@endptr:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0020                     getIdentification@temp:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0020                     setDestination@subbuff:	
   761                           ; 8 bytes @ 0x0
   762                           
   763                           
   764                           ; 9 bytes @ 0x0
   765  0020                     	ds	1
   766  0021                     strtol@base:	
   767                           
   768                           ; 2 bytes @ 0x1
   769  0021                     	ds	2
   770  0023                     ??_sprintf:	
   771                           
   772                           ; 0 bytes @ 0x3
   773  0023                     	ds	1
   774  0024                     ??_strtol:	
   775                           
   776                           ; 0 bytes @ 0x4
   777  0024                     	ds	2
   778  0026                     sprintf@ap:	
   779                           
   780                           ; 1 bytes @ 0x6
   781  0026                     	ds	1
   782  0027                     sprintf@flag:	
   783                           
   784                           ; 1 bytes @ 0x7
   785  0027                     	ds	1
   786  0028                     getIdentification@offset:	
   787  0028                     sprintf@prec:	
   788                           ; 1 bytes @ 0x8
   789                           
   790  0028                     strtol@sign:	
   791                           ; 1 bytes @ 0x8
   792                           
   793                           
   794                           ; 1 bytes @ 0x8
   795  0028                     	ds	1
   796  0029                     getIdentification@iter:	
   797  0029                     sprintf@_val:	
   798                           ; 1 bytes @ 0x9
   799                           
   800  0029                     strtol@a:	
   801                           ; 4 bytes @ 0x9
   802                           
   803  0029                     setDestination@subbuff2:	
   804                           ; 4 bytes @ 0x9
   805                           
   806                           
   807                           ; 9 bytes @ 0x9
   808  0029                     	ds	1
   809  002A                     getIdentification@iter_156:	
   810                           
   811                           ; 1 bytes @ 0xA
   812  002A                     	ds	1
   813  002B                     getIdentification@iter_160:	
   814                           
   815                           ; 1 bytes @ 0xB
   816  002B                     	ds	1
   817  002C                     getIdentification@result:	
   818                           
   819                           ; 1 bytes @ 0xC
   820  002C                     	ds	1
   821  002D                     getIdentification@iter_157:	
   822  002D                     sprintf@sp:	
   823                           ; 1 bytes @ 0xD
   824                           
   825  002D                     strtol@s:	
   826                           ; 1 bytes @ 0xD
   827                           
   828                           
   829                           ; 1 bytes @ 0xD
   830  002D                     	ds	1
   831  002E                     getIdentification@iter_158:	
   832  002E                     sprintf@c:	
   833                           ; 1 bytes @ 0xE
   834                           
   835  002E                     strtol@c:	
   836                           ; 1 bytes @ 0xE
   837                           
   838                           
   839                           ; 1 bytes @ 0xE
   840  002E                     	ds	1
   841  002F                     ?_getRSSI:	
   842  002F                     getRSSI@dBm:	
   843                           ; 0 bytes @ 0xF
   844                           
   845  002F                     getIdentification@iter_161:	
   846                           ; 1 bytes @ 0xF
   847                           
   848                           
   849                           ; 1 bytes @ 0xF
   850  002F                     	ds	1
   851  0030                     getRSSI@percentage:	
   852  0030                     getIdentification@iter_162:	
   853                           ; 1 bytes @ 0x10
   854                           
   855                           
   856                           ; 1 bytes @ 0x10
   857  0030                     	ds	1
   858  0031                     ??_getRSSI:	
   859                           
   860                           ; 0 bytes @ 0x11
   861  0031                     	ds	1
   862  0032                     setDestination@destination:	
   863                           
   864                           ; 1 bytes @ 0x12
   865  0032                     	ds	1
   866  0033                     setDestination@iter:	
   867  0033                     getRSSI@RSSInum:	
   868                           ; 1 bytes @ 0x13
   869                           
   870                           
   871                           ; 3 bytes @ 0x13
   872  0033                     	ds	1
   873  0034                     setDestination@iter_172:	
   874                           
   875                           ; 1 bytes @ 0x14
   876  0034                     	ds	2
   877  0036                     getRSSI@dBmbuf:	
   878                           
   879                           ; 2 bytes @ 0x16
   880  0036                     	ds	2
   881  0038                     getRSSI@iter:	
   882                           
   883                           ; 1 bytes @ 0x18
   884  0038                     	ds	1
   885  0039                     getRSSI@RSSI:	
   886                           
   887                           ; 1 bytes @ 0x19
   888  0039                     	ds	1
   889  003A                     getRSSI@dBmNum:	
   890                           
   891                           ; 2 bytes @ 0x1A
   892  003A                     	ds	2
   893  003C                     ??_main:	
   894                           
   895                           ; 0 bytes @ 0x1C
   896  003C                     	ds	3
   897                           
   898                           	psect	maintext
   899  042F                     __pmaintext:	
   900 ;;
   901 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   902 ;;
   903 ;; *************** function _main *****************
   904 ;; Defined at:
   905 ;;		line 57 in file "XBLCD.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;  iter            1   65[BANK1 ] unsigned char 
   910 ;;  iter            1   57[BANK1 ] unsigned char 
   911 ;;  iter            1   56[BANK1 ] unsigned char 
   912 ;;  lightingValu    4   46[BANK1 ] unsigned char [4]
   913 ;;  mobile         17   18[BANK1 ] unsigned char [17]
   914 ;;  percentage      7   58[BANK1 ] unsigned char [7]
   915 ;;  dBm             7   35[BANK1 ] unsigned char [7]
   916 ;;  RSSI            5   50[BANK1 ] unsigned char [5]
   917 ;;  broadcastNum    4   42[BANK1 ] unsigned char [4]
   918 ;;  command         1   55[BANK1 ] unsigned char 
   919 ;;  sensor         18    0[BANK1 ] unsigned char [18]
   920 ;; Return value:  Size  Location     Type
   921 ;;		None               void
   922 ;; Registers used:
   923 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   924 ;; Tracked objects:
   925 ;;		On entry : 17F/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   929 ;;      Params:         0       0       0       0       0
   930 ;;      Locals:         0       0      66       0       0
   931 ;;      Temps:          0       3       0       0       0
   932 ;;      Totals:         0       3      66       0       0
   933 ;;Total ram usage:       69 bytes
   934 ;; Hardware stack levels required when called:    4
   935 ;; This function calls:
   936 ;;		_print_to_screen
   937 ;;		_LCD_Init
   938 ;;		_LCD_Clear_Display
   939 ;;		_Goto_Second_Line
   940 ;;		_USART_Init
   941 ;;		_get_USART_char
   942 ;;		_send_USART_char
   943 ;;		_send_USART_string
   944 ;;		_flush_RCREG
   945 ;;		_getRSSI
   946 ;;		_getIdentification
   947 ;;		_setDestination
   948 ;;		_enterCommandMode
   949 ;;		_exitCommandMode
   950 ;;		_PIC_Initialization
   951 ;; This function is called by:
   952 ;;		Startup code after reset
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           
   957                           ;psect for function _main
   958  042F                     _main:	
   959                           
   960                           ;XBLCD.c: 58: PIC_Initialization();
   961                           
   962                           ;incstack = 0
   963                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   964  042F  120A  158A  2533   	fcall	_PIC_Initialization
      +       120A  118A         
   965                           
   966                           ;XBLCD.c: 60: RC5 = 0;
   967  0434  1283               	bcf	3,5	;RP0=0, select bank0
   968  0435  1303               	bcf	3,6	;RP1=0, select bank0
   969  0436  1287               	bcf	7,5	;volatile
   970                           
   971                           ;XBLCD.c: 62: LCD_Init();
   972  0437  120A  158A  26FE   	fcall	_LCD_Init
      +       120A  118A         
   973                           
   974                           ;XBLCD.c: 64: print_to_screen("Initialized...");
   975  043C  303B               	movlw	low (STR_11-__stringbase)
   976  043D  00F6               	movwf	?_print_to_screen
   977  043E  3080               	movlw	128
   978  043F  00F7               	movwf	?_print_to_screen+1
   979  0440  120A  158A  2660   	fcall	_print_to_screen
      +       120A  118A         
   980                           
   981                           ;XBLCD.c: 66: USART_Init();
   982  0445  120A  158A  256B   	fcall	_USART_Init
      +       120A  118A         
   983                           
   984                           ;XBLCD.c: 68: _delay((unsigned long)((250)*(4000000/4000.0)));
   985  044A  3002               	movlw	2
   986  044B  1283               	bcf	3,5	;RP0=0, select bank0
   987  044C  1303               	bcf	3,6	;RP1=0, select bank0
   988  044D  00BE               	movwf	??_main+2
   989  044E  3045               	movlw	69
   990  044F  00BD               	movwf	??_main+1
   991  0450  30A9               	movlw	169
   992  0451  00BC               	movwf	??_main
   993  0452                     u2357:	
   994  0452  0BBC               	decfsz	??_main,f
   995  0453  2C52               	goto	u2357
   996  0454  0BBD               	decfsz	??_main+1,f
   997  0455  2C52               	goto	u2357
   998  0456  0BBE               	decfsz	??_main+2,f
   999  0457  2C52               	goto	u2357
  1000  0458  2C59               	nop2
  1001                           
  1002                           ;XBLCD.c: 70: enterCommandMode();
  1003  0459  120A  158A  26C8   	fcall	_enterCommandMode
      +       120A  118A         
  1004                           
  1005                           ;XBLCD.c: 73: char sensor[16+2];
  1006                           ;XBLCD.c: 74: getIdentification(sensor);
  1007  045E  30A0               	movlw	main@sensor& (0+255)
  1008  045F  120A  118A  2232   	fcall	_getIdentification
      +       120A  118A         
  1009                           
  1010                           ;XBLCD.c: 76: setDestination("0000000000000000");
  1011  0464  300B               	movlw	(STR_12-__stringbase)& (0+255)
  1012  0465  120A  118A  20AB   	fcall	_setDestination
      +       120A  118A         
  1013                           
  1014                           ;XBLCD.c: 78: exitCommandMode();
  1015  046A  120A  158A  2589   	fcall	_exitCommandMode
      +       120A  118A         
  1016                           
  1017                           ;XBLCD.c: 80: _delay((unsigned long)((250)*(4000000/4000.0)));
  1018  046F  3002               	movlw	2
  1019  0470  1283               	bcf	3,5	;RP0=0, select bank0
  1020  0471  1303               	bcf	3,6	;RP1=0, select bank0
  1021  0472  00BE               	movwf	??_main+2
  1022  0473  3045               	movlw	69
  1023  0474  00BD               	movwf	??_main+1
  1024  0475  30A9               	movlw	169
  1025  0476  00BC               	movwf	??_main
  1026  0477                     u2367:	
  1027  0477  0BBC               	decfsz	??_main,f
  1028  0478  2C77               	goto	u2367
  1029  0479  0BBD               	decfsz	??_main+1,f
  1030  047A  2C77               	goto	u2367
  1031  047B  0BBE               	decfsz	??_main+2,f
  1032  047C  2C77               	goto	u2367
  1033  047D  2C7E               	nop2
  1034  047E  2D71               	goto	l2684
  1035  047F                     l2690:	
  1036                           
  1037                           ;XBLCD.c: 88: {
  1038                           ;XBLCD.c: 90: char broadcastNumber[3+1];
  1039                           ;XBLCD.c: 91: for(char iter = 0; iter < 3; iter++)
  1040  047F  01D8               	clrf	main@iter^(0+128)
  1041  0480  3003               	movlw	3
  1042  0481  0258               	subwf	main@iter^(0+128),w
  1043  0482  1803               	btfsc	3,0
  1044  0483  2CA0               	goto	l2702
  1045  0484                     l2696:	
  1046                           
  1047                           ;XBLCD.c: 92: {broadcastNumber[iter] = get_USART_char();}
  1048  0484  120A  158A  2475   	fcall	_get_USART_char
      +       120A  118A         
  1049  0489  1283               	bcf	3,5	;RP0=0, select bank0
  1050  048A  1303               	bcf	3,6	;RP1=0, select bank0
  1051  048B  00BC               	movwf	??_main
  1052  048C  1683               	bsf	3,5	;RP0=1, select bank1
  1053  048D  1303               	bcf	3,6	;RP1=0, select bank1
  1054  048E  0858               	movf	main@iter^(0+128),w
  1055  048F  3ECA               	addlw	main@broadcastNumber& (0+255)
  1056  0490  0084               	movwf	4
  1057  0491  1283               	bcf	3,5	;RP0=0, select bank0
  1058  0492  1303               	bcf	3,6	;RP1=0, select bank0
  1059  0493  083C               	movf	??_main,w
  1060  0494  1383               	bcf	3,7	;select IRP bank1
  1061  0495  0080               	movwf	0
  1062  0496  3001               	movlw	1
  1063  0497  00BC               	movwf	??_main
  1064  0498  083C               	movf	??_main,w
  1065  0499  1683               	bsf	3,5	;RP0=1, select bank1
  1066  049A  1303               	bcf	3,6	;RP1=0, select bank1
  1067  049B  07D8               	addwf	main@iter^(0+128),f
  1068  049C  3003               	movlw	3
  1069  049D  0258               	subwf	main@iter^(0+128),w
  1070  049E  1C03               	skipc
  1071  049F  2C84               	goto	l2696
  1072  04A0                     l2702:	
  1073                           
  1074                           ;XBLCD.c: 93: broadcastNumber[3] = '\0';
  1075  04A0  01CD               	clrf	(main@broadcastNumber^(0+128)+3)
  1076                           
  1077                           ;XBLCD.c: 96: char mobile[16+1];
  1078                           ;XBLCD.c: 97: for(char iter = 0; iter < 16; iter++)
  1079  04A1  01D9               	clrf	main@iter_187^(0+128)
  1080  04A2  3010               	movlw	16
  1081  04A3  0259               	subwf	main@iter_187^(0+128),w
  1082  04A4  1803               	btfsc	3,0
  1083  04A5  2CC2               	goto	l2714
  1084  04A6                     l2708:	
  1085                           
  1086                           ;XBLCD.c: 98: {mobile[iter] = get_USART_char();}
  1087  04A6  120A  158A  2475   	fcall	_get_USART_char
      +       120A  118A         
  1088  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  1089  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  1090  04AD  00BC               	movwf	??_main
  1091  04AE  1683               	bsf	3,5	;RP0=1, select bank1
  1092  04AF  1303               	bcf	3,6	;RP1=0, select bank1
  1093  04B0  0859               	movf	main@iter_187^(0+128),w
  1094  04B1  3EB2               	addlw	main@mobile& (0+255)
  1095  04B2  0084               	movwf	4
  1096  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  1097  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  1098  04B5  083C               	movf	??_main,w
  1099  04B6  1383               	bcf	3,7	;select IRP bank1
  1100  04B7  0080               	movwf	0
  1101  04B8  3001               	movlw	1
  1102  04B9  00BC               	movwf	??_main
  1103  04BA  083C               	movf	??_main,w
  1104  04BB  1683               	bsf	3,5	;RP0=1, select bank1
  1105  04BC  1303               	bcf	3,6	;RP1=0, select bank1
  1106  04BD  07D9               	addwf	main@iter_187^(0+128),f
  1107  04BE  3010               	movlw	16
  1108  04BF  0259               	subwf	main@iter_187^(0+128),w
  1109  04C0  1C03               	skipc
  1110  04C1  2CA6               	goto	l2708
  1111  04C2                     l2714:	
  1112                           
  1113                           ;XBLCD.c: 99: mobile[16] = '\0';
  1114  04C2  01C2               	clrf	(main@mobile^(0+128)+16)
  1115                           
  1116                           ;XBLCD.c: 101: enterCommandMode();
  1117  04C3  120A  158A  26C8   	fcall	_enterCommandMode
      +       120A  118A         
  1118                           
  1119                           ;XBLCD.c: 104: char RSSI[4+1];
  1120                           ;XBLCD.c: 105: char dBm[6+1];
  1121                           ;XBLCD.c: 106: char percentage[6+1];
  1122                           ;XBLCD.c: 107: getRSSI(RSSI, dBm, percentage);
  1123  04C8  30C3               	movlw	main@dBm& (0+255)
  1124  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  1125  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  1126  04CB  00BC               	movwf	??_main
  1127  04CC  083C               	movf	??_main,w
  1128  04CD  00AF               	movwf	?_getRSSI
  1129  04CE  30DA               	movlw	main@percentage& (0+255)
  1130  04CF  00BD               	movwf	??_main+1
  1131  04D0  083D               	movf	??_main+1,w
  1132  04D1  00B0               	movwf	?_getRSSI+1
  1133  04D2  30D2               	movlw	main@RSSI& (0+255)
  1134  04D3  120A  118A  25C3   	fcall	_getRSSI
      +       120A  118A         
  1135                           
  1136                           ;XBLCD.c: 109: exitCommandMode();
  1137  04D8  120A  158A  2589   	fcall	_exitCommandMode
      +       120A  118A         
  1138                           
  1139                           ;XBLCD.c: 112: send_USART_string("\rBroadcast #: ");
  1140  04DD  302C               	movlw	low (STR_13-__stringbase)
  1141  04DE  00F6               	movwf	?_send_USART_string
  1142  04DF  3080               	movlw	128
  1143  04E0  00F7               	movwf	?_send_USART_string+1
  1144  04E1  120A  158A  2631   	fcall	_send_USART_string
      +       120A  118A         
  1145                           
  1146                           ;XBLCD.c: 113: send_USART_string(broadcastNumber);
  1147  04E6  30CA               	movlw	main@broadcastNumber& (0+255)
  1148  04E7  00F6               	movwf	?_send_USART_string
  1149  04E8  3000               	movlw	0
  1150  04E9  00F7               	movwf	?_send_USART_string+1
  1151  04EA  120A  158A  2631   	fcall	_send_USART_string
      +       120A  118A         
  1152                           
  1153                           ;XBLCD.c: 115: send_USART_string("\rMobile: ");
  1154  04EF  304A               	movlw	low (STR_14-__stringbase)
  1155  04F0  00F6               	movwf	?_send_USART_string
  1156  04F1  3080               	movlw	128
  1157  04F2  00F7               	movwf	?_send_USART_string+1
  1158  04F3  120A  158A  2631   	fcall	_send_USART_string
      +       120A  118A         
  1159                           
  1160                           ;XBLCD.c: 116: send_USART_string(mobile);
  1161  04F8  30B2               	movlw	main@mobile& (0+255)
  1162  04F9  00F6               	movwf	?_send_USART_string
  1163  04FA  3000               	movlw	0
  1164  04FB  00F7               	movwf	?_send_USART_string+1
  1165  04FC  120A  158A  2631   	fcall	_send_USART_string
      +       120A  118A         
  1166                           
  1167                           ;XBLCD.c: 118: send_USART_string("\rSensor: ");
  1168  0501  3054               	movlw	low (STR_15-__stringbase)
  1169  0502  00F6               	movwf	?_send_USART_string
  1170  0503  3080               	movlw	128
  1171  0504  00F7               	movwf	?_send_USART_string+1
  1172  0505  120A  158A  2631   	fcall	_send_USART_string
      +       120A  118A         
  1173                           
  1174                           ;XBLCD.c: 119: send_USART_string(sensor);
  1175  050A  30A0               	movlw	main@sensor& (0+255)
  1176  050B  00F6               	movwf	?_send_USART_string
  1177  050C  3000               	movlw	0
  1178  050D  00F7               	movwf	?_send_USART_string+1
  1179  050E  120A  158A  2631   	fcall	_send_USART_string
      +       120A  118A         
  1180                           
  1181                           ;XBLCD.c: 121: send_USART_string("\rRSSI: ");
  1182  0513  305E               	movlw	low (STR_16-__stringbase)
  1183  0514  00F6               	movwf	?_send_USART_string
  1184  0515  3080               	movlw	128
  1185  0516  00F7               	movwf	?_send_USART_string+1
  1186  0517  120A  158A  2631   	fcall	_send_USART_string
      +       120A  118A         
  1187                           
  1188                           ;XBLCD.c: 122: send_USART_string(RSSI);
  1189  051C  30D2               	movlw	main@RSSI& (0+255)
  1190  051D  00F6               	movwf	?_send_USART_string
  1191  051E  3000               	movlw	0
  1192  051F  00F7               	movwf	?_send_USART_string+1
  1193  0520  120A  158A  2631   	fcall	_send_USART_string
      +       120A  118A         
  1194                           
  1195                           ;XBLCD.c: 123: send_USART_char(' ');
  1196  0525  3020               	movlw	32
  1197  0526  120A  158A  24EE   	fcall	_send_USART_char
      +       120A  118A         
  1198                           
  1199                           ;XBLCD.c: 124: send_USART_string(dBm);
  1200  052B  30C3               	movlw	main@dBm& (0+255)
  1201  052C  00F6               	movwf	?_send_USART_string
  1202  052D  3000               	movlw	0
  1203  052E  00F7               	movwf	?_send_USART_string+1
  1204  052F  120A  158A  2631   	fcall	_send_USART_string
      +       120A  118A         
  1205                           
  1206                           ;XBLCD.c: 125: send_USART_char(' ');
  1207  0534  3020               	movlw	32
  1208  0535  120A  158A  24EE   	fcall	_send_USART_char
      +       120A  118A         
  1209                           
  1210                           ;XBLCD.c: 126: send_USART_string(percentage);
  1211  053A  30DA               	movlw	main@percentage& (0+255)
  1212  053B  00F6               	movwf	?_send_USART_string
  1213  053C  3000               	movlw	0
  1214  053D  00F7               	movwf	?_send_USART_string+1
  1215  053E  120A  158A  2631   	fcall	_send_USART_string
      +       120A  118A         
  1216                           
  1217                           ;XBLCD.c: 130: LCD_Clear_Display();
  1218  0543  120A  158A  2465   	fcall	_LCD_Clear_Display
      +       120A  118A         
  1219                           
  1220                           ;XBLCD.c: 131: print_to_screen("RSSI:");
  1221  0548  307E               	movlw	low (STR_17-__stringbase)
  1222  0549  00F6               	movwf	?_print_to_screen
  1223  054A  3080               	movlw	128
  1224  054B  00F7               	movwf	?_print_to_screen+1
  1225  054C  120A  158A  2660   	fcall	_print_to_screen
      +       120A  118A         
  1226                           
  1227                           ;XBLCD.c: 132: print_to_screen(RSSI);
  1228  0551  30D2               	movlw	main@RSSI& (0+255)
  1229  0552  00F6               	movwf	?_print_to_screen
  1230  0553  3000               	movlw	0
  1231  0554  00F7               	movwf	?_print_to_screen+1
  1232  0555  120A  158A  2660   	fcall	_print_to_screen
      +       120A  118A         
  1233                           
  1234                           ;XBLCD.c: 134: Goto_Second_Line();
  1235  055A  120A  158A  249C   	fcall	_Goto_Second_Line
      +       120A  118A         
  1236                           
  1237                           ;XBLCD.c: 135: print_to_screen(dBm);
  1238  055F  30C3               	movlw	main@dBm& (0+255)
  1239  0560  00F6               	movwf	?_print_to_screen
  1240  0561  3000               	movlw	0
  1241  0562  00F7               	movwf	?_print_to_screen+1
  1242  0563  120A  158A  2660   	fcall	_print_to_screen
      +       120A  118A         
  1243                           
  1244                           ;XBLCD.c: 136: print_to_screen(percentage);
  1245  0568  30DA               	movlw	main@percentage& (0+255)
  1246  0569                     L1:	
  1247  0569  00F6               	movwf	?_print_to_screen
  1248  056A  3000               	movlw	0
  1249  056B  00F7               	movwf	?_print_to_screen+1
  1250  056C  120A  158A  2660   	fcall	_print_to_screen
      +       120A  118A         
  1251  0571                     l2684:	
  1252                           ;XBLCD.c: 82: for(;;)
  1253                           
  1254                           ;XBLCD.c: 137: }
  1255                           
  1256                           
  1257                           ;XBLCD.c: 83: {
  1258                           ;XBLCD.c: 84: flush_RCREG();
  1259  0571  120A  158A  24AB   	fcall	_flush_RCREG
      +       120A  118A         
  1260                           
  1261                           ;XBLCD.c: 85: char command = get_USART_char();
  1262  0576  120A  158A  2475   	fcall	_get_USART_char
      +       120A  118A         
  1263  057B  1283               	bcf	3,5	;RP0=0, select bank0
  1264  057C  1303               	bcf	3,6	;RP1=0, select bank0
  1265  057D  00BC               	movwf	??_main
  1266  057E  083C               	movf	??_main,w
  1267  057F  1683               	bsf	3,5	;RP0=1, select bank1
  1268  0580  1303               	bcf	3,6	;RP1=0, select bank1
  1269  0581  00D7               	movwf	main@command^(0+128)
  1270                           
  1271                           ;XBLCD.c: 87: if(command == '*')
  1272  0582  0857               	movf	main@command^(0+128),w
  1273  0583  3A2A               	xorlw	42
  1274  0584  1903               	btfsc	3,2
  1275  0585  2C7F               	goto	l2690
  1276                           
  1277                           ;XBLCD.c: 138: else if(command == '!')
  1278  0586  1683               	bsf	3,5	;RP0=1, select bank1
  1279  0587  1303               	bcf	3,6	;RP1=0, select bank1
  1280  0588  0857               	movf	main@command^(0+128),w
  1281  0589  3A21               	xorlw	33
  1282  058A  1D03               	skipz
  1283  058B  2D71               	goto	l2684
  1284                           
  1285                           ;XBLCD.c: 139: {
  1286                           ;XBLCD.c: 141: char lightingValue[3+1];
  1287                           ;XBLCD.c: 142: for(char iter = 0; iter < 3; iter++)
  1288  058C  01E1               	clrf	main@iter_197^(0+128)
  1289  058D  3003               	movlw	3
  1290  058E  0261               	subwf	main@iter_197^(0+128),w
  1291  058F  1803               	btfsc	3,0
  1292  0590  2DAD               	goto	l2772
  1293  0591                     l2766:	
  1294                           
  1295                           ;XBLCD.c: 143: {lightingValue[iter] = get_USART_char();}
  1296  0591  120A  158A  2475   	fcall	_get_USART_char
      +       120A  118A         
  1297  0596  1283               	bcf	3,5	;RP0=0, select bank0
  1298  0597  1303               	bcf	3,6	;RP1=0, select bank0
  1299  0598  00BC               	movwf	??_main
  1300  0599  1683               	bsf	3,5	;RP0=1, select bank1
  1301  059A  1303               	bcf	3,6	;RP1=0, select bank1
  1302  059B  0861               	movf	main@iter_197^(0+128),w
  1303  059C  3ECE               	addlw	main@lightingValue& (0+255)
  1304  059D  0084               	movwf	4
  1305  059E  1283               	bcf	3,5	;RP0=0, select bank0
  1306  059F  1303               	bcf	3,6	;RP1=0, select bank0
  1307  05A0  083C               	movf	??_main,w
  1308  05A1  1383               	bcf	3,7	;select IRP bank1
  1309  05A2  0080               	movwf	0
  1310  05A3  3001               	movlw	1
  1311  05A4  00BC               	movwf	??_main
  1312  05A5  083C               	movf	??_main,w
  1313  05A6  1683               	bsf	3,5	;RP0=1, select bank1
  1314  05A7  1303               	bcf	3,6	;RP1=0, select bank1
  1315  05A8  07E1               	addwf	main@iter_197^(0+128),f
  1316  05A9  3003               	movlw	3
  1317  05AA  0261               	subwf	main@iter_197^(0+128),w
  1318  05AB  1C03               	skipc
  1319  05AC  2D91               	goto	l2766
  1320  05AD                     l2772:	
  1321                           
  1322                           ;XBLCD.c: 144: lightingValue[3] = '\0';
  1323  05AD  01D1               	clrf	(main@lightingValue^(0+128)+3)
  1324                           
  1325                           ;XBLCD.c: 147: LCD_Clear_Display();
  1326  05AE  120A  158A  2465   	fcall	_LCD_Clear_Display
      +       120A  118A         
  1327                           
  1328                           ;XBLCD.c: 148: print_to_screen("Lighting Value:");
  1329  05B3  301C               	movlw	low (STR_18-__stringbase)
  1330  05B4  00F6               	movwf	?_print_to_screen
  1331  05B5  3080               	movlw	128
  1332  05B6  00F7               	movwf	?_print_to_screen+1
  1333  05B7  120A  158A  2660   	fcall	_print_to_screen
      +       120A  118A         
  1334                           
  1335                           ;XBLCD.c: 149: Goto_Second_Line();
  1336  05BC  120A  158A  249C   	fcall	_Goto_Second_Line
      +       120A  118A         
  1337                           
  1338                           ;XBLCD.c: 150: print_to_screen(lightingValue);
  1339  05C1  30CE               	movlw	main@lightingValue& (0+255)
  1340  05C2  2D69               	goto	L1
  1341  05C3                     __end_of_main:	
  1342                           ;XBLCD.c: 151: }
  1343                           ;XBLCD.c: 152: }
  1344                           
  1345                           
  1346                           	psect	text1
  1347  0D33                     __ptext1:	
  1348 ;; *************** function _PIC_Initialization *****************
  1349 ;; Defined at:
  1350 ;;		line 160 in file "XBLCD.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;		None
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;		None
  1355 ;; Return value:  Size  Location     Type
  1356 ;;		None               void
  1357 ;; Registers used:
  1358 ;;		wreg, status,2
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1364 ;;      Params:         0       0       0       0       0
  1365 ;;      Locals:         0       0       0       0       0
  1366 ;;      Temps:          0       0       0       0       0
  1367 ;;      Totals:         0       0       0       0       0
  1368 ;;Total ram usage:        0 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; This function calls:
  1371 ;;		Nothing
  1372 ;; This function is called by:
  1373 ;;		_main
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           
  1378                           ;psect for function _PIC_Initialization
  1379  0D33                     _PIC_Initialization:	
  1380                           
  1381                           ;XBLCD.c: 161: GIE = 0;
  1382                           
  1383                           ;incstack = 0
  1384                           ; Regs used in _PIC_Initialization: [wreg+status,2]
  1385  0D33  138B               	bcf	11,7	;volatile
  1386                           
  1387                           ;XBLCD.c: 164: WDTCON = 0;
  1388  0D34  1283               	bcf	3,5	;RP0=0, select bank2
  1389  0D35  1703               	bsf	3,6	;RP1=1, select bank2
  1390  0D36  0185               	clrf	5	;volatile
  1391                           
  1392                           ;XBLCD.c: 166: OPTION_REG = 0b01011000;
  1393  0D37  3058               	movlw	88
  1394  0D38  1683               	bsf	3,5	;RP0=1, select bank1
  1395  0D39  1303               	bcf	3,6	;RP1=0, select bank1
  1396  0D3A  0081               	movwf	1	;volatile
  1397                           
  1398                           ;XBLCD.c: 169: ANSEL = 0;
  1399  0D3B  1683               	bsf	3,5	;RP0=1, select bank3
  1400  0D3C  1703               	bsf	3,6	;RP1=1, select bank3
  1401  0D3D  0188               	clrf	8	;volatile
  1402                           
  1403                           ;XBLCD.c: 170: ANSELH = 0;
  1404  0D3E  0189               	clrf	9	;volatile
  1405                           
  1406                           ;XBLCD.c: 172: PSTRCON = 0;
  1407  0D3F  1683               	bsf	3,5	;RP0=1, select bank1
  1408  0D40  1303               	bcf	3,6	;RP1=0, select bank1
  1409  0D41  019D               	clrf	29	;volatile
  1410                           
  1411                           ;XBLCD.c: 174: TRISA = 0b00010001;
  1412  0D42  3011               	movlw	17
  1413  0D43  0085               	movwf	5	;volatile
  1414                           
  1415                           ;XBLCD.c: 175: TRISB = 0;
  1416  0D44  0186               	clrf	6	;volatile
  1417                           
  1418                           ;XBLCD.c: 176: TRISC = 0b10000000;
  1419  0D45  3080               	movlw	128
  1420  0D46  0087               	movwf	7	;volatile
  1421                           
  1422                           ;XBLCD.c: 178: PORTA = 0;
  1423  0D47  1283               	bcf	3,5	;RP0=0, select bank0
  1424  0D48  1303               	bcf	3,6	;RP1=0, select bank0
  1425  0D49  0185               	clrf	5	;volatile
  1426                           
  1427                           ;XBLCD.c: 179: PORTB = 0;
  1428  0D4A  0186               	clrf	6	;volatile
  1429                           
  1430                           ;XBLCD.c: 180: PORTC = 0;
  1431  0D4B  0187               	clrf	7	;volatile
  1432                           
  1433                           ;XBLCD.c: 182: GIE = 1;
  1434  0D4C  178B               	bsf	11,7	;volatile
  1435  0D4D  0008               	return
  1436  0D4E                     __end_of_PIC_Initialization:	
  1437                           ;XBLCD.c: 184: return;
  1438                           
  1439                           
  1440                           	psect	text2
  1441  0D89                     __ptext2:	
  1442 ;; *************** function _exitCommandMode *****************
  1443 ;; Defined at:
  1444 ;;		line 224 in file "..\Header Files\..\C Source Code\ZIGBEE_16F_MASTER.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;  iter            1   12[COMMON] unsigned char 
  1449 ;; Return value:  Size  Location     Type
  1450 ;;		None               void
  1451 ;; Registers used:
  1452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1458 ;;      Params:         0       0       0       0       0
  1459 ;;      Locals:         1       0       0       0       0
  1460 ;;      Temps:          1       0       0       0       0
  1461 ;;      Totals:         2       0       0       0       0
  1462 ;;Total ram usage:        2 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; Hardware stack levels required when called:    3
  1465 ;; This function calls:
  1466 ;;		_get_USART_char
  1467 ;;		_send_USART_string
  1468 ;;		_flush_RCREG
  1469 ;; This function is called by:
  1470 ;;		_main
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           
  1475                           ;psect for function _exitCommandMode
  1476  0D89                     _exitCommandMode:	
  1477                           
  1478                           ;ZIGBEE_16F_MASTER.c: 225: flush_RCREG();
  1479                           
  1480                           ;incstack = 0
  1481                           ; Regs used in _exitCommandMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1482  0D89  120A  158A  24AB   	fcall	_flush_RCREG
      +       120A  158A         
  1483                           
  1484                           ;ZIGBEE_16F_MASTER.c: 226: send_USART_string("ATCN\r");
  1485  0D8E  3078               	movlw	low (STR_10-__stringbase)
  1486  0D8F  00F6               	movwf	?_send_USART_string
  1487  0D90  3080               	movlw	128
  1488  0D91  00F7               	movwf	?_send_USART_string+1
  1489  0D92  120A  158A  2631   	fcall	_send_USART_string
      +       120A  158A         
  1490                           
  1491                           ;ZIGBEE_16F_MASTER.c: 229: for(char iter = 0; iter < 2; iter++)
  1492  0D97  01FC               	clrf	exitCommandMode@iter
  1493  0D98                     L2:	
  1494  0D98  3002               	movlw	2
  1495  0D99  027C               	subwf	exitCommandMode@iter,w
  1496  0D9A  1803               	btfsc	3,0
  1497  0D9B  0008               	return
  1498                           
  1499                           ;ZIGBEE_16F_MASTER.c: 230: {BYTES_BUFFER[iter] = get_USART_char();}
  1500  0D9C  120A  158A  2475   	fcall	_get_USART_char
      +       120A  158A         
  1501  0DA1  00FB               	movwf	??_exitCommandMode
  1502  0DA2  087C               	movf	exitCommandMode@iter,w
  1503  0DA3  3E3F               	addlw	_BYTES_BUFFER& (0+255)
  1504  0DA4  0084               	movwf	4
  1505  0DA5  087B               	movf	??_exitCommandMode,w
  1506  0DA6  1383               	bcf	3,7	;select IRP bank0
  1507  0DA7  0080               	movwf	0
  1508  0DA8  3001               	movlw	1
  1509  0DA9  00FB               	movwf	??_exitCommandMode
  1510  0DAA  087B               	movf	??_exitCommandMode,w
  1511  0DAB  07FC               	addwf	exitCommandMode@iter,f
  1512  0DAC  2D98               	goto	L2
  1513  0DAD                     __end_of_exitCommandMode:	
  1514                           
  1515                           	psect	text3
  1516  0EC8                     __ptext3:	
  1517 ;; *************** function _enterCommandMode *****************
  1518 ;; Defined at:
  1519 ;;		line 189 in file "..\Header Files\..\C Source Code\ZIGBEE_16F_MASTER.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;		None
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  iter            1   13[COMMON] unsigned char 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;		None               void
  1526 ;; Registers used:
  1527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1533 ;;      Params:         0       0       0       0       0
  1534 ;;      Locals:         1       0       0       0       0
  1535 ;;      Temps:          2       0       0       0       0
  1536 ;;      Totals:         3       0       0       0       0
  1537 ;;Total ram usage:        3 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    3
  1540 ;; This function calls:
  1541 ;;		_get_USART_char
  1542 ;;		_send_USART_string
  1543 ;;		_flush_RCREG
  1544 ;; This function is called by:
  1545 ;;		_main
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           
  1550                           ;psect for function _enterCommandMode
  1551  0EC8                     _enterCommandMode:	
  1552                           
  1553                           ;ZIGBEE_16F_MASTER.c: 207: flush_RCREG();
  1554                           
  1555                           ;incstack = 0
  1556                           ; Regs used in _enterCommandMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1557  0EC8  120A  158A  24AB   	fcall	_flush_RCREG
      +       120A  158A         
  1558                           
  1559                           ;ZIGBEE_16F_MASTER.c: 210: _delay((unsigned long)((15)*(4000000/4000.0)));
  1560  0ECD  3014               	movlw	20
  1561  0ECE  00FC               	movwf	??_enterCommandMode+1
  1562  0ECF  3079               	movlw	121
  1563  0ED0  00FB               	movwf	??_enterCommandMode
  1564  0ED1                     u2377:	
  1565  0ED1  0BFB               	decfsz	??_enterCommandMode,f
  1566  0ED2  2ED1               	goto	u2377
  1567  0ED3  0BFC               	decfsz	??_enterCommandMode+1,f
  1568  0ED4  2ED1               	goto	u2377
  1569  0ED5  2ED6               	nop2
  1570                           
  1571                           ;ZIGBEE_16F_MASTER.c: 213: send_USART_string("+++");
  1572  0ED6  308E               	movlw	low (STR_9-__stringbase)
  1573  0ED7  00F6               	movwf	?_send_USART_string
  1574  0ED8  3080               	movlw	128
  1575  0ED9  00F7               	movwf	?_send_USART_string+1
  1576  0EDA  120A  158A  2631   	fcall	_send_USART_string
      +       120A  158A         
  1577                           
  1578                           ;ZIGBEE_16F_MASTER.c: 216: _delay((unsigned long)((15)*(4000000/4000.0)));
  1579  0EDF  3014               	movlw	20
  1580  0EE0  00FC               	movwf	??_enterCommandMode+1
  1581  0EE1  3079               	movlw	121
  1582  0EE2  00FB               	movwf	??_enterCommandMode
  1583  0EE3                     u2387:	
  1584  0EE3  0BFB               	decfsz	??_enterCommandMode,f
  1585  0EE4  2EE3               	goto	u2387
  1586  0EE5  0BFC               	decfsz	??_enterCommandMode+1,f
  1587  0EE6  2EE3               	goto	u2387
  1588  0EE7  2EE8               	nop2
  1589                           
  1590                           ;ZIGBEE_16F_MASTER.c: 219: for(char iter = 0; iter < 2; iter++)
  1591  0EE8  01FD               	clrf	enterCommandMode@iter
  1592  0EE9                     L3:	
  1593  0EE9  3002               	movlw	2
  1594  0EEA  027D               	subwf	enterCommandMode@iter,w
  1595  0EEB  1803               	btfsc	3,0
  1596  0EEC  0008               	return
  1597                           
  1598                           ;ZIGBEE_16F_MASTER.c: 220: {BYTES_BUFFER[iter] = get_USART_char();}
  1599  0EED  120A  158A  2475   	fcall	_get_USART_char
      +       120A  158A         
  1600  0EF2  00FB               	movwf	??_enterCommandMode
  1601  0EF3  087D               	movf	enterCommandMode@iter,w
  1602  0EF4  3E3F               	addlw	_BYTES_BUFFER& (0+255)
  1603  0EF5  0084               	movwf	4
  1604  0EF6  087B               	movf	??_enterCommandMode,w
  1605  0EF7  1383               	bcf	3,7	;select IRP bank0
  1606  0EF8  0080               	movwf	0
  1607  0EF9  3001               	movlw	1
  1608  0EFA  00FB               	movwf	??_enterCommandMode
  1609  0EFB  087B               	movf	??_enterCommandMode,w
  1610  0EFC  07FD               	addwf	enterCommandMode@iter,f
  1611  0EFD  2EE9               	goto	L3
  1612  0EFE                     __end_of_enterCommandMode:	
  1613                           
  1614                           	psect	text4
  1615  00AB                     __ptext4:	
  1616 ;; *************** function _setDestination *****************
  1617 ;; Defined at:
  1618 ;;		line 146 in file "..\Header Files\..\C Source Code\ZIGBEE_16F_MASTER.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  destination     1    wreg     PTR const unsigned char 
  1621 ;;		 -> STR_12(17), 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  destination     1   18[BANK0 ] PTR const unsigned char 
  1624 ;;		 -> STR_12(17), 
  1625 ;;  iter            1   20[BANK0 ] unsigned char 
  1626 ;;  iter            1   19[BANK0 ] unsigned char 
  1627 ;;  subbuff2        9    9[BANK0 ] unsigned char [9]
  1628 ;;  subbuff         9    0[BANK0 ] unsigned char [9]
  1629 ;; Return value:  Size  Location     Type
  1630 ;;		None               void
  1631 ;; Registers used:
  1632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1638 ;;      Params:         0       0       0       0       0
  1639 ;;      Locals:         0      21       0       0       0
  1640 ;;      Temps:          2       0       0       0       0
  1641 ;;      Totals:         2      21       0       0       0
  1642 ;;Total ram usage:       23 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    3
  1645 ;; This function calls:
  1646 ;;		_get_USART_char
  1647 ;;		_send_USART_string
  1648 ;;		_flush_RCREG
  1649 ;;		_memcpy
  1650 ;; This function is called by:
  1651 ;;		_main
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           
  1656                           ;psect for function _setDestination
  1657  00AB                     _setDestination:	
  1658                           
  1659                           ;incstack = 0
  1660                           ; Regs used in _setDestination: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1661                           ;setDestination@destination stored from wreg
  1662  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1663  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1664  00AD  00B2               	movwf	setDestination@destination
  1665                           
  1666                           ;ZIGBEE_16F_MASTER.c: 152: flush_RCREG();
  1667  00AE  120A  158A  24AB   	fcall	_flush_RCREG
      +       120A  118A         
  1668                           
  1669                           ;ZIGBEE_16F_MASTER.c: 153: send_USART_string("ATDH");
  1670  00B3  3084               	movlw	low (STR_5-__stringbase)
  1671  00B4  00F6               	movwf	?_send_USART_string
  1672  00B5  3080               	movlw	128
  1673  00B6  00F7               	movwf	?_send_USART_string+1
  1674  00B7  120A  158A  2631   	fcall	_send_USART_string
      +       120A  118A         
  1675                           
  1676                           ;ZIGBEE_16F_MASTER.c: 156: char subbuff[9];
  1677                           ;ZIGBEE_16F_MASTER.c: 157: memcpy( subbuff, &destination[0], 8 );
  1678  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1679  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1680  00BE  0832               	movf	setDestination@destination,w
  1681  00BF  00FB               	movwf	??_setDestination
  1682  00C0  087B               	movf	??_setDestination,w
  1683  00C1  00F0               	movwf	?_memcpy
  1684  00C2  3008               	movlw	8
  1685  00C3  00F1               	movwf	?_memcpy+1
  1686  00C4  3000               	movlw	0
  1687  00C5  00F2               	movwf	?_memcpy+2
  1688  00C6  3020               	movlw	setDestination@subbuff& (0+255)
  1689  00C7  120A  158A  25D6   	fcall	_memcpy
      +       120A  118A         
  1690                           
  1691                           ;ZIGBEE_16F_MASTER.c: 158: subbuff[8] = '\0';
  1692  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1693  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1694  00CE  01A8               	clrf	setDestination@subbuff+8
  1695                           
  1696                           ;ZIGBEE_16F_MASTER.c: 159: send_USART_string(subbuff);
  1697  00CF  3020               	movlw	setDestination@subbuff& (0+255)
  1698  00D0  00F6               	movwf	?_send_USART_string
  1699  00D1  3000               	movlw	0
  1700  00D2  00F7               	movwf	?_send_USART_string+1
  1701  00D3  120A  158A  2631   	fcall	_send_USART_string
      +       120A  118A         
  1702                           
  1703                           ;ZIGBEE_16F_MASTER.c: 161: send_USART_string("\r");
  1704  00D8  306A               	movlw	low ((STR_1+4)-__stringbase)
  1705  00D9  00F6               	movwf	?_send_USART_string
  1706  00DA  3080               	movlw	128
  1707  00DB  00F7               	movwf	?_send_USART_string+1
  1708  00DC  120A  158A  2631   	fcall	_send_USART_string
      +       120A  118A         
  1709                           
  1710                           ;ZIGBEE_16F_MASTER.c: 164: for(char iter = 0; iter < 2; iter++)
  1711  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1712  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1713  00E3  01B3               	clrf	setDestination@iter
  1714  00E4  3002               	movlw	2
  1715  00E5  0233               	subwf	setDestination@iter,w
  1716  00E6  1803               	btfsc	3,0
  1717  00E7  28FE               	goto	l2602
  1718  00E8                     l2596:	
  1719                           
  1720                           ;ZIGBEE_16F_MASTER.c: 165: {BYTES_BUFFER[iter] = get_USART_char();}
  1721  00E8  120A  158A  2475   	fcall	_get_USART_char
      +       120A  118A         
  1722  00ED  00FB               	movwf	??_setDestination
  1723  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1724  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1725  00F0  0833               	movf	setDestination@iter,w
  1726  00F1  3E3F               	addlw	_BYTES_BUFFER& (0+255)
  1727  00F2  0084               	movwf	4
  1728  00F3  087B               	movf	??_setDestination,w
  1729  00F4  1383               	bcf	3,7	;select IRP bank0
  1730  00F5  0080               	movwf	0
  1731  00F6  3001               	movlw	1
  1732  00F7  00FB               	movwf	??_setDestination
  1733  00F8  087B               	movf	??_setDestination,w
  1734  00F9  07B3               	addwf	setDestination@iter,f
  1735  00FA  3002               	movlw	2
  1736  00FB  0233               	subwf	setDestination@iter,w
  1737  00FC  1C03               	skipc
  1738  00FD  28E8               	goto	l2596
  1739  00FE                     l2602:	
  1740                           
  1741                           ;ZIGBEE_16F_MASTER.c: 169: flush_RCREG();
  1742  00FE  120A  158A  24AB   	fcall	_flush_RCREG
      +       120A  118A         
  1743                           
  1744                           ;ZIGBEE_16F_MASTER.c: 170: send_USART_string("ATDL");
  1745  0103  3089               	movlw	low (STR_7-__stringbase)
  1746  0104  00F6               	movwf	?_send_USART_string
  1747  0105  3080               	movlw	128
  1748  0106  00F7               	movwf	?_send_USART_string+1
  1749  0107  120A  158A  2631   	fcall	_send_USART_string
      +       120A  118A         
  1750                           
  1751                           ;ZIGBEE_16F_MASTER.c: 173: char subbuff2[9];
  1752                           ;ZIGBEE_16F_MASTER.c: 174: memcpy( subbuff2, &destination[8], 8 );
  1753  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1754  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1755  010E  0832               	movf	setDestination@destination,w
  1756  010F  3E08               	addlw	8
  1757  0110  00FB               	movwf	??_setDestination
  1758  0111  087B               	movf	??_setDestination,w
  1759  0112  00F0               	movwf	?_memcpy
  1760  0113  3008               	movlw	8
  1761  0114  00F1               	movwf	?_memcpy+1
  1762  0115  3000               	movlw	0
  1763  0116  00F2               	movwf	?_memcpy+2
  1764  0117  3029               	movlw	setDestination@subbuff2& (0+255)
  1765  0118  120A  158A  25D6   	fcall	_memcpy
      +       120A  118A         
  1766                           
  1767                           ;ZIGBEE_16F_MASTER.c: 175: subbuff2[8] = '\0';
  1768  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1769  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1770  011F  01B1               	clrf	setDestination@subbuff2+8
  1771                           
  1772                           ;ZIGBEE_16F_MASTER.c: 176: send_USART_string(subbuff2);
  1773  0120  3029               	movlw	setDestination@subbuff2& (0+255)
  1774  0121  00F6               	movwf	?_send_USART_string
  1775  0122  3000               	movlw	0
  1776  0123  00F7               	movwf	?_send_USART_string+1
  1777  0124  120A  158A  2631   	fcall	_send_USART_string
      +       120A  118A         
  1778                           
  1779                           ;ZIGBEE_16F_MASTER.c: 178: send_USART_string("\r");
  1780  0129  306A               	movlw	low ((STR_1+4)-__stringbase)
  1781  012A  00F6               	movwf	?_send_USART_string
  1782  012B  3080               	movlw	128
  1783  012C  00F7               	movwf	?_send_USART_string+1
  1784  012D  120A  158A  2631   	fcall	_send_USART_string
      +       120A  118A         
  1785                           
  1786                           ;ZIGBEE_16F_MASTER.c: 181: for(char iter = 0; iter < 2; iter++)
  1787  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1788  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1789  0134  01B4               	clrf	setDestination@iter_172
  1790  0135  3002               	movlw	2
  1791  0136  0234               	subwf	setDestination@iter_172,w
  1792  0137  1803               	btfsc	3,0
  1793  0138  294F               	goto	l2626
  1794  0139                     l2620:	
  1795                           
  1796                           ;ZIGBEE_16F_MASTER.c: 182: {BYTES_BUFFER[iter] = get_USART_char();}
  1797  0139  120A  158A  2475   	fcall	_get_USART_char
      +       120A  118A         
  1798  013E  00FB               	movwf	??_setDestination
  1799  013F  1283               	bcf	3,5	;RP0=0, select bank0
  1800  0140  1303               	bcf	3,6	;RP1=0, select bank0
  1801  0141  0834               	movf	setDestination@iter_172,w
  1802  0142  3E3F               	addlw	_BYTES_BUFFER& (0+255)
  1803  0143  0084               	movwf	4
  1804  0144  087B               	movf	??_setDestination,w
  1805  0145  1383               	bcf	3,7	;select IRP bank0
  1806  0146  0080               	movwf	0
  1807  0147  3001               	movlw	1
  1808  0148  00FB               	movwf	??_setDestination
  1809  0149  087B               	movf	??_setDestination,w
  1810  014A  07B4               	addwf	setDestination@iter_172,f
  1811  014B  3002               	movlw	2
  1812  014C  0234               	subwf	setDestination@iter_172,w
  1813  014D  1C03               	skipc
  1814  014E  2939               	goto	l2620
  1815  014F                     l2626:	
  1816                           
  1817                           ;ZIGBEE_16F_MASTER.c: 184: _delay((unsigned long)((10)*(4000000/4000.0)));
  1818  014F  300D               	movlw	13
  1819  0150  00FC               	movwf	??_setDestination+1
  1820  0151  30FB               	movlw	251
  1821  0152  00FB               	movwf	??_setDestination
  1822  0153                     u2397:	
  1823  0153  0BFB               	decfsz	??_setDestination,f
  1824  0154  2953               	goto	u2397
  1825  0155  0BFC               	decfsz	??_setDestination+1,f
  1826  0156  2953               	goto	u2397
  1827  0157  2958               	nop2
  1828  0158  0008               	return
  1829  0159                     __end_of_setDestination:	
  1830                           
  1831                           	psect	text5
  1832  0DD6                     __ptext5:	
  1833 ;; *************** function _memcpy *****************
  1834 ;; Defined at:
  1835 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\memcpy.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  d1              1    wreg     PTR void 
  1838 ;;		 -> setDestination@subbuff2(9), setDestination@subbuff(9), 
  1839 ;;  s1              1    0[COMMON] PTR const void 
  1840 ;;		 -> STR_12(17), 
  1841 ;;  n               2    1[COMMON] unsigned int 
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;  d1              1    4[COMMON] PTR void 
  1844 ;;		 -> setDestination@subbuff2(9), setDestination@subbuff(9), 
  1845 ;;  s               1    6[COMMON] PTR const unsigned char 
  1846 ;;		 -> STR_12(17), 
  1847 ;;  d               1    5[COMMON] PTR unsigned char 
  1848 ;;		 -> setDestination@subbuff2(9), setDestination@subbuff(9), 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      PTR void 
  1851 ;; Registers used:
  1852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1858 ;;      Params:         3       0       0       0       0
  1859 ;;      Locals:         3       0       0       0       0
  1860 ;;      Temps:          1       0       0       0       0
  1861 ;;      Totals:         7       0       0       0       0
  1862 ;;Total ram usage:        7 bytes
  1863 ;; Hardware stack levels used:    2
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_setDestination
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           
  1872                           ;psect for function _memcpy
  1873  0DD6                     _memcpy:	
  1874                           
  1875                           ;incstack = 0
  1876                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0+pclath]
  1877                           ;memcpy@d1 stored from wreg
  1878  0DD6  00F4               	movwf	memcpy@d1
  1879  0DD7  0870               	movf	memcpy@s1,w
  1880  0DD8  00F3               	movwf	??_memcpy
  1881  0DD9  0873               	movf	??_memcpy,w
  1882  0DDA  00F6               	movwf	memcpy@s
  1883  0DDB  0874               	movf	memcpy@d1,w
  1884  0DDC  00F3               	movwf	??_memcpy
  1885  0DDD  0873               	movf	??_memcpy,w
  1886  0DDE  00F5               	movwf	memcpy@d
  1887  0DDF                     l1960:	
  1888  0DDF  3001               	movlw	1
  1889  0DE0  02F1               	subwf	memcpy@n,f
  1890  0DE1  3000               	movlw	0
  1891  0DE2  1C03               	skipc
  1892  0DE3  03F2               	decf	memcpy@n+1,f
  1893  0DE4  02F2               	subwf	memcpy@n+1,f
  1894  0DE5  30FF               	movlw	255
  1895  0DE6  0672               	xorwf	memcpy@n+1,w
  1896  0DE7  1D03               	skipz
  1897  0DE8  2DEB               	goto	u1235
  1898  0DE9  30FF               	movlw	255
  1899  0DEA  0671               	xorwf	memcpy@n,w
  1900  0DEB                     u1235:	
  1901  0DEB  1903               	btfsc	3,2
  1902  0DEC  0008               	return
  1903  0DED  0876               	movf	memcpy@s,w
  1904  0DEE  0084               	movwf	4
  1905  0DEF  120A  118A  200D   	fcall	stringdir
      +       120A  158A         
  1906  0DF4  00F3               	movwf	??_memcpy
  1907  0DF5  0875               	movf	memcpy@d,w
  1908  0DF6  0084               	movwf	4
  1909  0DF7  0873               	movf	??_memcpy,w
  1910  0DF8  1383               	bcf	3,7	;select IRP bank0
  1911  0DF9  0080               	movwf	0
  1912  0DFA  3001               	movlw	1
  1913  0DFB  00F3               	movwf	??_memcpy
  1914  0DFC  0873               	movf	??_memcpy,w
  1915  0DFD  07F6               	addwf	memcpy@s,f
  1916  0DFE  3001               	movlw	1
  1917  0DFF  00F3               	movwf	??_memcpy
  1918  0E00  0873               	movf	??_memcpy,w
  1919  0E01  07F5               	addwf	memcpy@d,f
  1920  0E02  2DDF               	goto	l1960
  1921  0E03                     __end_of_memcpy:	
  1922                           ;	Return value of _memcpy is never used
  1923                           
  1924                           
  1925                           	psect	text6
  1926  0232                     __ptext6:	
  1927 ;; *************** function _getIdentification *****************
  1928 ;; Defined at:
  1929 ;;		line 81 in file "..\Header Files\..\C Source Code\ZIGBEE_16F_MASTER.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  result          1    wreg     PTR unsigned char 
  1932 ;;		 -> main@sensor(18), 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  result          1   12[BANK0 ] PTR unsigned char 
  1935 ;;		 -> main@sensor(18), 
  1936 ;;  iter            1   16[BANK0 ] unsigned char 
  1937 ;;  iter            1   15[BANK0 ] char 
  1938 ;;  iter            1   11[BANK0 ] unsigned char 
  1939 ;;  iter            1   14[BANK0 ] unsigned char 
  1940 ;;  iter            1   13[BANK0 ] char 
  1941 ;;  iter            1   10[BANK0 ] unsigned char 
  1942 ;;  iter            1    9[BANK0 ] unsigned char 
  1943 ;;  temp            8    0[BANK0 ] unsigned char [8]
  1944 ;;  offset          1    8[BANK0 ] unsigned char 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;		None               void
  1947 ;; Registers used:
  1948 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1954 ;;      Params:         0       0       0       0       0
  1955 ;;      Locals:         0      17       0       0       0
  1956 ;;      Temps:          2       0       0       0       0
  1957 ;;      Totals:         2      17       0       0       0
  1958 ;;Total ram usage:       19 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:    3
  1961 ;; This function calls:
  1962 ;;		_get_USART_char_timeout
  1963 ;;		_send_USART_string
  1964 ;;		_flush_RCREG
  1965 ;; This function is called by:
  1966 ;;		_main
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           
  1971                           ;psect for function _getIdentification
  1972  0232                     _getIdentification:	
  1973                           
  1974                           ;incstack = 0
  1975                           ; Regs used in _getIdentification: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1976                           ;getIdentification@result stored from wreg
  1977  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1978  0233  1303               	bcf	3,6	;RP1=0, select bank0
  1979  0234  00AC               	movwf	getIdentification@result
  1980                           
  1981                           ;ZIGBEE_16F_MASTER.c: 87: for(char iter = 0; iter < 16; iter++)
  1982  0235  01A9               	clrf	getIdentification@iter
  1983  0236  3010               	movlw	16
  1984  0237  0229               	subwf	getIdentification@iter,w
  1985  0238  1803               	btfsc	3,0
  1986  0239  2A4C               	goto	l2488
  1987  023A                     l2482:	
  1988                           
  1989                           ;ZIGBEE_16F_MASTER.c: 88: {result[iter] = '0';}
  1990  023A  3030               	movlw	48
  1991  023B  00FB               	movwf	??_getIdentification
  1992  023C  0829               	movf	getIdentification@iter,w
  1993  023D  072C               	addwf	getIdentification@result,w
  1994  023E  00FC               	movwf	??_getIdentification+1
  1995  023F  087C               	movf	??_getIdentification+1,w
  1996  0240  0084               	movwf	4
  1997  0241  087B               	movf	??_getIdentification,w
  1998  0242  1383               	bcf	3,7	;select IRP bank0
  1999  0243  0080               	movwf	0
  2000  0244  3001               	movlw	1
  2001  0245  00FB               	movwf	??_getIdentification
  2002  0246  087B               	movf	??_getIdentification,w
  2003  0247  07A9               	addwf	getIdentification@iter,f
  2004  0248  3010               	movlw	16
  2005  0249  0229               	subwf	getIdentification@iter,w
  2006  024A  1C03               	skipc
  2007  024B  2A3A               	goto	l2482
  2008  024C                     l2488:	
  2009                           
  2010                           ;ZIGBEE_16F_MASTER.c: 91: result[16] = '\0';
  2011  024C  082C               	movf	getIdentification@result,w
  2012  024D  3E10               	addlw	16
  2013  024E  0084               	movwf	4
  2014  024F  1383               	bcf	3,7	;select IRP bank0
  2015  0250  0180               	clrf	0
  2016                           
  2017                           ;ZIGBEE_16F_MASTER.c: 94: flush_RCREG();
  2018  0251  120A  158A  24AB   	fcall	_flush_RCREG
      +       120A  118A         
  2019                           
  2020                           ;ZIGBEE_16F_MASTER.c: 95: send_USART_string("ATSH\r");
  2021  0256  306C               	movlw	low (STR_3-__stringbase)
  2022  0257  00F6               	movwf	?_send_USART_string
  2023  0258  3080               	movlw	128
  2024  0259  00F7               	movwf	?_send_USART_string+1
  2025  025A  120A  158A  2631   	fcall	_send_USART_string
      +       120A  118A         
  2026                           
  2027                           ;ZIGBEE_16F_MASTER.c: 97: char temp[8];
  2028                           ;ZIGBEE_16F_MASTER.c: 98: char offset = 0;
  2029  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2030  0260  1303               	bcf	3,6	;RP1=0, select bank0
  2031  0261  01A8               	clrf	getIdentification@offset
  2032                           
  2033                           ;ZIGBEE_16F_MASTER.c: 102: for(char iter = 0; iter < 8; iter++)
  2034  0262  01AA               	clrf	getIdentification@iter_156
  2035  0263  3008               	movlw	8
  2036  0264  022A               	subwf	getIdentification@iter_156,w
  2037  0265  1803               	btfsc	3,0
  2038  0266  2A7D               	goto	l2508
  2039  0267                     l2502:	
  2040                           
  2041                           ;ZIGBEE_16F_MASTER.c: 103: {temp[iter] = get_USART_char_timeout();}
  2042  0267  120A  158A  2603   	fcall	_get_USART_char_timeout
      +       120A  118A         
  2043  026C  00FB               	movwf	??_getIdentification
  2044  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2045  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2046  026F  082A               	movf	getIdentification@iter_156,w
  2047  0270  3E20               	addlw	getIdentification@temp& (0+255)
  2048  0271  0084               	movwf	4
  2049  0272  087B               	movf	??_getIdentification,w
  2050  0273  1383               	bcf	3,7	;select IRP bank0
  2051  0274  0080               	movwf	0
  2052  0275  3001               	movlw	1
  2053  0276  00FB               	movwf	??_getIdentification
  2054  0277  087B               	movf	??_getIdentification,w
  2055  0278  07AA               	addwf	getIdentification@iter_156,f
  2056  0279  3008               	movlw	8
  2057  027A  022A               	subwf	getIdentification@iter_156,w
  2058  027B  1C03               	skipc
  2059  027C  2A67               	goto	l2502
  2060  027D                     l2508:	
  2061                           
  2062                           ;ZIGBEE_16F_MASTER.c: 107: for(signed char iter = 7; iter >= 0; iter--)
  2063  027D  3007               	movlw	7
  2064  027E  00FB               	movwf	??_getIdentification
  2065  027F  087B               	movf	??_getIdentification,w
  2066  0280  00AD               	movwf	getIdentification@iter_157
  2067  0281  1BAD               	btfsc	getIdentification@iter_157,7
  2068  0282  2A9B               	goto	l2522
  2069  0283                     l2514:	
  2070                           
  2071                           ;ZIGBEE_16F_MASTER.c: 108: {
  2072                           ;ZIGBEE_16F_MASTER.c: 109: if(temp[iter] == '\0' || temp[iter] == '\r')
  2073  0283  082D               	movf	getIdentification@iter_157,w
  2074  0284  3E20               	addlw	getIdentification@temp& (0+255)
  2075  0285  0084               	movwf	4
  2076  0286  1383               	bcf	3,7	;select IRP bank0
  2077  0287  0880               	movf	0,f
  2078  0288  1903               	skipnz
  2079  0289  2A91               	goto	l2518
  2080  028A  082D               	movf	getIdentification@iter_157,w
  2081  028B  3E20               	addlw	getIdentification@temp& (0+255)
  2082  028C  0084               	movwf	4
  2083  028D  0800               	movf	0,w
  2084  028E  3A0D               	xorlw	13
  2085  028F  1D03               	skipz
  2086  0290  2A95               	goto	l199
  2087  0291                     l2518:	
  2088                           
  2089                           ;ZIGBEE_16F_MASTER.c: 110: {offset++;}
  2090  0291  3001               	movlw	1
  2091  0292  00FB               	movwf	??_getIdentification
  2092  0293  087B               	movf	??_getIdentification,w
  2093  0294  07A8               	addwf	getIdentification@offset,f
  2094  0295                     l199:	
  2095  0295  30FF               	movlw	-1
  2096  0296  00FB               	movwf	??_getIdentification
  2097  0297  087B               	movf	??_getIdentification,w
  2098  0298  07AD               	addwf	getIdentification@iter_157,f
  2099  0299  1FAD               	btfss	getIdentification@iter_157,7
  2100  029A  2A83               	goto	l2514
  2101  029B                     l2522:	
  2102                           
  2103                           ;ZIGBEE_16F_MASTER.c: 111: }
  2104                           ;ZIGBEE_16F_MASTER.c: 114: for(char iter = 0; iter < 8; iter++)
  2105  029B  01AE               	clrf	getIdentification@iter_158
  2106  029C  3008               	movlw	8
  2107  029D  022E               	subwf	getIdentification@iter_158,w
  2108  029E  1803               	btfsc	3,0
  2109  029F  2AB6               	goto	l2534
  2110  02A0                     l2528:	
  2111                           
  2112                           ;ZIGBEE_16F_MASTER.c: 115: {
  2113                           ;ZIGBEE_16F_MASTER.c: 116: result[iter+offset] = temp[iter];
  2114  02A0  082E               	movf	getIdentification@iter_158,w
  2115  02A1  3E20               	addlw	getIdentification@temp& (0+255)
  2116  02A2  0084               	movwf	4
  2117  02A3  1383               	bcf	3,7	;select IRP bank0
  2118  02A4  0800               	movf	0,w
  2119  02A5  00FB               	movwf	??_getIdentification
  2120  02A6  0828               	movf	getIdentification@offset,w
  2121  02A7  072E               	addwf	getIdentification@iter_158,w
  2122  02A8  072C               	addwf	getIdentification@result,w
  2123  02A9  00FC               	movwf	??_getIdentification+1
  2124  02AA  087C               	movf	??_getIdentification+1,w
  2125  02AB  0084               	movwf	4
  2126  02AC  087B               	movf	??_getIdentification,w
  2127  02AD  0080               	movwf	0
  2128  02AE  3001               	movlw	1
  2129  02AF  00FB               	movwf	??_getIdentification
  2130  02B0  087B               	movf	??_getIdentification,w
  2131  02B1  07AE               	addwf	getIdentification@iter_158,f
  2132  02B2  3008               	movlw	8
  2133  02B3  022E               	subwf	getIdentification@iter_158,w
  2134  02B4  1C03               	skipc
  2135  02B5  2AA0               	goto	l2528
  2136  02B6                     l2534:	
  2137                           
  2138                           ;ZIGBEE_16F_MASTER.c: 117: }
  2139                           ;ZIGBEE_16F_MASTER.c: 120: flush_RCREG();
  2140  02B6  120A  158A  24AB   	fcall	_flush_RCREG
      +       120A  118A         
  2141                           
  2142                           ;ZIGBEE_16F_MASTER.c: 121: send_USART_string("ATSL\r");
  2143  02BB  3072               	movlw	low (STR_4-__stringbase)
  2144  02BC  00F6               	movwf	?_send_USART_string
  2145  02BD  3080               	movlw	128
  2146  02BE  00F7               	movwf	?_send_USART_string+1
  2147  02BF  120A  158A  2631   	fcall	_send_USART_string
      +       120A  118A         
  2148                           
  2149                           ;ZIGBEE_16F_MASTER.c: 123: offset = 0;
  2150  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  2151  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  2152  02C6  01A8               	clrf	getIdentification@offset
  2153                           
  2154                           ;ZIGBEE_16F_MASTER.c: 127: for(char iter = 0; iter < 8; iter++)
  2155  02C7  01AB               	clrf	getIdentification@iter_160
  2156  02C8  3008               	movlw	8
  2157  02C9  022B               	subwf	getIdentification@iter_160,w
  2158  02CA  1803               	btfsc	3,0
  2159  02CB  2AE2               	goto	l2552
  2160  02CC                     l2546:	
  2161                           
  2162                           ;ZIGBEE_16F_MASTER.c: 128: {temp[iter] = get_USART_char_timeout();}
  2163  02CC  120A  158A  2603   	fcall	_get_USART_char_timeout
      +       120A  118A         
  2164  02D1  00FB               	movwf	??_getIdentification
  2165  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2166  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2167  02D4  082B               	movf	getIdentification@iter_160,w
  2168  02D5  3E20               	addlw	getIdentification@temp& (0+255)
  2169  02D6  0084               	movwf	4
  2170  02D7  087B               	movf	??_getIdentification,w
  2171  02D8  1383               	bcf	3,7	;select IRP bank0
  2172  02D9  0080               	movwf	0
  2173  02DA  3001               	movlw	1
  2174  02DB  00FB               	movwf	??_getIdentification
  2175  02DC  087B               	movf	??_getIdentification,w
  2176  02DD  07AB               	addwf	getIdentification@iter_160,f
  2177  02DE  3008               	movlw	8
  2178  02DF  022B               	subwf	getIdentification@iter_160,w
  2179  02E0  1C03               	skipc
  2180  02E1  2ACC               	goto	l2546
  2181  02E2                     l2552:	
  2182                           
  2183                           ;ZIGBEE_16F_MASTER.c: 132: for(signed char iter = 7; iter >= 0; iter--)
  2184  02E2  3007               	movlw	7
  2185  02E3  00FB               	movwf	??_getIdentification
  2186  02E4  087B               	movf	??_getIdentification,w
  2187  02E5  00AF               	movwf	getIdentification@iter_161
  2188  02E6  1BAF               	btfsc	getIdentification@iter_161,7
  2189  02E7  2B00               	goto	l2566
  2190  02E8                     l2558:	
  2191                           
  2192                           ;ZIGBEE_16F_MASTER.c: 133: {
  2193                           ;ZIGBEE_16F_MASTER.c: 134: if(temp[iter] == '\0' || temp[iter] == '\r')
  2194  02E8  082F               	movf	getIdentification@iter_161,w
  2195  02E9  3E20               	addlw	getIdentification@temp& (0+255)
  2196  02EA  0084               	movwf	4
  2197  02EB  1383               	bcf	3,7	;select IRP bank0
  2198  02EC  0880               	movf	0,f
  2199  02ED  1903               	skipnz
  2200  02EE  2AF6               	goto	l2562
  2201  02EF  082F               	movf	getIdentification@iter_161,w
  2202  02F0  3E20               	addlw	getIdentification@temp& (0+255)
  2203  02F1  0084               	movwf	4
  2204  02F2  0800               	movf	0,w
  2205  02F3  3A0D               	xorlw	13
  2206  02F4  1D03               	skipz
  2207  02F5  2AFA               	goto	l208
  2208  02F6                     l2562:	
  2209                           
  2210                           ;ZIGBEE_16F_MASTER.c: 135: {offset++;}
  2211  02F6  3001               	movlw	1
  2212  02F7  00FB               	movwf	??_getIdentification
  2213  02F8  087B               	movf	??_getIdentification,w
  2214  02F9  07A8               	addwf	getIdentification@offset,f
  2215  02FA                     l208:	
  2216  02FA  30FF               	movlw	-1
  2217  02FB  00FB               	movwf	??_getIdentification
  2218  02FC  087B               	movf	??_getIdentification,w
  2219  02FD  07AF               	addwf	getIdentification@iter_161,f
  2220  02FE  1FAF               	btfss	getIdentification@iter_161,7
  2221  02FF  2AE8               	goto	l2558
  2222  0300                     l2566:	
  2223                           
  2224                           ;ZIGBEE_16F_MASTER.c: 136: }
  2225                           ;ZIGBEE_16F_MASTER.c: 139: for(char iter = 0; iter < 8; iter++)
  2226  0300  01B0               	clrf	getIdentification@iter_162
  2227  0301                     L4:	
  2228  0301  3008               	movlw	8
  2229  0302  0230               	subwf	getIdentification@iter_162,w
  2230  0303  1803               	btfsc	3,0
  2231  0304  0008               	return
  2232                           
  2233                           ;ZIGBEE_16F_MASTER.c: 140: {
  2234                           ;ZIGBEE_16F_MASTER.c: 141: result[iter+8+offset] = temp[iter];
  2235  0305  0830               	movf	getIdentification@iter_162,w
  2236  0306  3E20               	addlw	getIdentification@temp& (0+255)
  2237  0307  0084               	movwf	4
  2238  0308  1383               	bcf	3,7	;select IRP bank0
  2239  0309  0800               	movf	0,w
  2240  030A  00FB               	movwf	??_getIdentification
  2241  030B  0828               	movf	getIdentification@offset,w
  2242  030C  0730               	addwf	getIdentification@iter_162,w
  2243  030D  3E08               	addlw	8
  2244  030E  072C               	addwf	getIdentification@result,w
  2245  030F  00FC               	movwf	??_getIdentification+1
  2246  0310  087C               	movf	??_getIdentification+1,w
  2247  0311  0084               	movwf	4
  2248  0312  087B               	movf	??_getIdentification,w
  2249  0313  0080               	movwf	0
  2250  0314  3001               	movlw	1
  2251  0315  00FB               	movwf	??_getIdentification
  2252  0316  087B               	movf	??_getIdentification,w
  2253  0317  07B0               	addwf	getIdentification@iter_162,f
  2254  0318  2B01               	goto	L4
  2255  0319                     __end_of_getIdentification:	
  2256                           
  2257                           	psect	text7
  2258  0E03                     __ptext7:	
  2259 ;; *************** function _get_USART_char_timeout *****************
  2260 ;; Defined at:
  2261 ;;		line 125 in file "..\Header Files\..\C Source Code\USART_16F_MASTER.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;		None
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  timeout_int     2    1[COMMON] int 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      unsigned char 
  2268 ;; Registers used:
  2269 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2275 ;;      Params:         0       0       0       0       0
  2276 ;;      Locals:         2       0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0
  2278 ;;      Totals:         2       0       0       0       0
  2279 ;;Total ram usage:        2 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    1
  2282 ;; This function calls:
  2283 ;;		_clear_usart_errors
  2284 ;; This function is called by:
  2285 ;;		_getIdentification
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           
  2290                           ;psect for function _get_USART_char_timeout
  2291  0E03                     _get_USART_char_timeout:	
  2292                           
  2293                           ;USART_16F_MASTER.c: 127: for( int timeout_int = 1000000; timeout_int > 0; timeout_int--)
  2294                           
  2295                           ;incstack = 0
  2296                           ; Regs used in _get_USART_char_timeout: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2297  0E03  3040               	movlw	64
  2298  0E04  00F1               	movwf	get_USART_char_timeout@timeout_int
  2299  0E05  3042               	movlw	66
  2300  0E06  00F2               	movwf	get_USART_char_timeout@timeout_int+1
  2301  0E07  0872               	movf	get_USART_char_timeout@timeout_int+1,w
  2302  0E08  3A80               	xorlw	128
  2303  0E09  00FF               	movwf	127
  2304  0E0A  3080               	movlw	128
  2305  0E0B  027F               	subwf	127,w
  2306  0E0C  1D03               	skipz
  2307  0E0D  2E10               	goto	u1465
  2308  0E0E  3001               	movlw	1
  2309  0E0F  0271               	subwf	get_USART_char_timeout@timeout_int,w
  2310  0E10                     u1465:	
  2311  0E10  1C03               	btfss	3,0
  2312  0E11  2E2F               	goto	l2138
  2313  0E12                     l149:	
  2314                           
  2315                           ;USART_16F_MASTER.c: 128: {
  2316                           ;USART_16F_MASTER.c: 129: if (RCIF == 1)
  2317  0E12  1283               	bcf	3,5	;RP0=0, select bank0
  2318  0E13  1303               	bcf	3,6	;RP1=0, select bank0
  2319  0E14  1E8C               	btfss	12,5	;volatile
  2320  0E15  2E18               	goto	l2130
  2321                           
  2322                           ;USART_16F_MASTER.c: 130: {return RCREG;}
  2323  0E16  081A               	movf	26,w	;volatile
  2324  0E17  0008               	return
  2325  0E18                     l2130:	
  2326                           
  2327                           ;USART_16F_MASTER.c: 131: clear_usart_errors();
  2328  0E18  120A  158A  2502   	fcall	_clear_usart_errors
      +       120A  158A         
  2329                           
  2330                           ;USART_16F_MASTER.c: 132: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2331  0E1D  0000               	nop
  2332  0E1E  30FF               	movlw	255
  2333  0E1F  07F1               	addwf	get_USART_char_timeout@timeout_int,f
  2334  0E20  1803               	skipnc
  2335  0E21  0AF2               	incf	get_USART_char_timeout@timeout_int+1,f
  2336  0E22  30FF               	movlw	255
  2337  0E23  07F2               	addwf	get_USART_char_timeout@timeout_int+1,f
  2338  0E24  0872               	movf	get_USART_char_timeout@timeout_int+1,w
  2339  0E25  3A80               	xorlw	128
  2340  0E26  00FF               	movwf	127
  2341  0E27  3080               	movlw	128
  2342  0E28  027F               	subwf	127,w
  2343  0E29  1D03               	skipz
  2344  0E2A  2E2D               	goto	u1485
  2345  0E2B  3001               	movlw	1
  2346  0E2C  0271               	subwf	get_USART_char_timeout@timeout_int,w
  2347  0E2D                     u1485:	
  2348  0E2D  1803               	skipnc
  2349  0E2E  2E12               	goto	l149
  2350  0E2F                     l2138:	
  2351                           
  2352                           ;USART_16F_MASTER.c: 133: }
  2353                           ;USART_16F_MASTER.c: 135: return '\0';
  2354  0E2F  3000               	movlw	0
  2355  0E30  0008               	return
  2356  0E31                     __end_of_get_USART_char_timeout:	
  2357                           
  2358                           	psect	text8
  2359  05C3                     __ptext8:	
  2360 ;; *************** function _getRSSI *****************
  2361 ;; Defined at:
  2362 ;;		line 12 in file "..\Header Files\..\C Source Code\ZIGBEE_16F_MASTER.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  RSSI            1    wreg     PTR unsigned char 
  2365 ;;		 -> main@RSSI(5), 
  2366 ;;  dBm             1   15[BANK0 ] PTR unsigned char 
  2367 ;;		 -> main@dBm(7), 
  2368 ;;  percentage      1   16[BANK0 ] PTR unsigned char 
  2369 ;;		 -> main@percentage(7), 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  RSSI            1   25[BANK0 ] PTR unsigned char 
  2372 ;;		 -> main@RSSI(5), 
  2373 ;;  iter            1   24[BANK0 ] unsigned char 
  2374 ;;  RSSInum         3   19[BANK0 ] unsigned char [3]
  2375 ;;  dBmNum          2   26[BANK0 ] unsigned int 
  2376 ;;  dBmbuf          2   22[BANK0 ] unsigned char [2]
  2377 ;; Return value:  Size  Location     Type
  2378 ;;		None               void
  2379 ;; Registers used:
  2380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2386 ;;      Params:         0       2       0       0       0
  2387 ;;      Locals:         0       9       0       0       0
  2388 ;;      Temps:          0       2       0       0       0
  2389 ;;      Totals:         0      13       0       0       0
  2390 ;;Total ram usage:       13 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    3
  2393 ;; This function calls:
  2394 ;;		_get_USART_char
  2395 ;;		_send_USART_string
  2396 ;;		_flush_RCREG
  2397 ;;		_strtol
  2398 ;;		_sprintf
  2399 ;; This function is called by:
  2400 ;;		_main
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           
  2405                           ;psect for function _getRSSI
  2406  05C3                     _getRSSI:	
  2407                           
  2408                           ;incstack = 0
  2409                           ; Regs used in _getRSSI: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2410                           ;getRSSI@RSSI stored from wreg
  2411  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  2412  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  2413  05C5  00B9               	movwf	getRSSI@RSSI
  2414                           
  2415                           ;ZIGBEE_16F_MASTER.c: 14: RSSI[0] = '0';
  2416  05C6  3030               	movlw	48
  2417  05C7  00B1               	movwf	??_getRSSI
  2418  05C8  0839               	movf	getRSSI@RSSI,w
  2419  05C9  0084               	movwf	4
  2420  05CA  0831               	movf	??_getRSSI,w
  2421  05CB  1383               	bcf	3,7	;select IRP bank0
  2422  05CC  0080               	movwf	0
  2423                           
  2424                           ;ZIGBEE_16F_MASTER.c: 15: RSSI[1] = 'x';
  2425  05CD  3078               	movlw	120
  2426  05CE  00B1               	movwf	??_getRSSI
  2427  05CF  0A39               	incf	getRSSI@RSSI,w
  2428  05D0  0084               	movwf	4
  2429  05D1  0831               	movf	??_getRSSI,w
  2430  05D2  0080               	movwf	0
  2431                           
  2432                           ;ZIGBEE_16F_MASTER.c: 17: flush_RCREG();
  2433  05D3  120A  158A  24AB   	fcall	_flush_RCREG
      +       120A  118A         
  2434                           
  2435                           ;ZIGBEE_16F_MASTER.c: 18: send_USART_string("ATDB\r");
  2436  05D8  3066               	movlw	low (STR_1-__stringbase)
  2437  05D9  00F6               	movwf	?_send_USART_string
  2438  05DA  3080               	movlw	128
  2439  05DB  00F7               	movwf	?_send_USART_string+1
  2440  05DC  120A  158A  2631   	fcall	_send_USART_string
      +       120A  118A         
  2441                           
  2442                           ;ZIGBEE_16F_MASTER.c: 20: for(char iter = 0; iter < 2; iter++)
  2443  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  2444  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  2445  05E3  01B8               	clrf	getRSSI@iter
  2446  05E4  3002               	movlw	2
  2447  05E5  0238               	subwf	getRSSI@iter,w
  2448  05E6  1803               	btfsc	3,0
  2449  05E7  2E01               	goto	l2380
  2450  05E8                     l2374:	
  2451                           
  2452                           ;ZIGBEE_16F_MASTER.c: 21: {RSSI[iter+2] = get_USART_char();}
  2453  05E8  120A  158A  2475   	fcall	_get_USART_char
      +       120A  118A         
  2454  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  2455  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  2456  05EF  00B1               	movwf	??_getRSSI
  2457  05F0  0838               	movf	getRSSI@iter,w
  2458  05F1  3E02               	addlw	2
  2459  05F2  0739               	addwf	getRSSI@RSSI,w
  2460  05F3  00B2               	movwf	??_getRSSI+1
  2461  05F4  0832               	movf	??_getRSSI+1,w
  2462  05F5  0084               	movwf	4
  2463  05F6  0831               	movf	??_getRSSI,w
  2464  05F7  1383               	bcf	3,7	;select IRP bank0
  2465  05F8  0080               	movwf	0
  2466  05F9  3001               	movlw	1
  2467  05FA  00B1               	movwf	??_getRSSI
  2468  05FB  0831               	movf	??_getRSSI,w
  2469  05FC  07B8               	addwf	getRSSI@iter,f
  2470  05FD  3002               	movlw	2
  2471  05FE  0238               	subwf	getRSSI@iter,w
  2472  05FF  1C03               	skipc
  2473  0600  2DE8               	goto	l2374
  2474  0601                     l2380:	
  2475                           
  2476                           ;ZIGBEE_16F_MASTER.c: 23: RSSI[4] = '\0';
  2477  0601  0839               	movf	getRSSI@RSSI,w
  2478  0602  3E04               	addlw	4
  2479  0603  0084               	movwf	4
  2480  0604  1383               	bcf	3,7	;select IRP bank0
  2481  0605  0180               	clrf	0
  2482                           
  2483                           ;ZIGBEE_16F_MASTER.c: 25: char RSSInum[2+1];
  2484                           ;ZIGBEE_16F_MASTER.c: 26: RSSInum[0] = RSSI[2];
  2485  0606  0839               	movf	getRSSI@RSSI,w
  2486  0607  3E02               	addlw	2
  2487  0608  0084               	movwf	4
  2488  0609  0800               	movf	0,w
  2489  060A  00B1               	movwf	??_getRSSI
  2490  060B  0831               	movf	??_getRSSI,w
  2491  060C  00B3               	movwf	getRSSI@RSSInum
  2492                           
  2493                           ;ZIGBEE_16F_MASTER.c: 27: RSSInum[1] = RSSI[3];
  2494  060D  0839               	movf	getRSSI@RSSI,w
  2495  060E  3E03               	addlw	3
  2496  060F  0084               	movwf	4
  2497  0610  0800               	movf	0,w
  2498  0611  00B1               	movwf	??_getRSSI
  2499  0612  0831               	movf	??_getRSSI,w
  2500  0613  00B4               	movwf	getRSSI@RSSInum+1
  2501                           
  2502                           ;ZIGBEE_16F_MASTER.c: 28: RSSInum[2] = RSSI[4];
  2503  0614  0839               	movf	getRSSI@RSSI,w
  2504  0615  3E04               	addlw	4
  2505  0616  0084               	movwf	4
  2506  0617  0800               	movf	0,w
  2507  0618  00B1               	movwf	??_getRSSI
  2508  0619  0831               	movf	??_getRSSI,w
  2509  061A  00B5               	movwf	getRSSI@RSSInum+2
  2510                           
  2511                           ;ZIGBEE_16F_MASTER.c: 32: unsigned int dBmNum = (int) strtol (RSSInum, (0), 16);
  2512  061B  01A0               	clrf	?_strtol
  2513  061C  3010               	movlw	16
  2514  061D  00A1               	movwf	?_strtol+1
  2515  061E  3000               	movlw	0
  2516  061F  00A2               	movwf	?_strtol+2
  2517  0620  3033               	movlw	getRSSI@RSSInum& (0+255)
  2518  0621  120A  118A  2319   	fcall	_strtol
      +       120A  118A         
  2519  0626  1283               	bcf	3,5	;RP0=0, select bank0
  2520  0627  1303               	bcf	3,6	;RP1=0, select bank0
  2521  0628  0821               	movf	?_strtol+1,w
  2522  0629  01BB               	clrf	getRSSI@dBmNum+1
  2523  062A  07BB               	addwf	getRSSI@dBmNum+1,f
  2524  062B  0820               	movf	?_strtol,w
  2525  062C  01BA               	clrf	getRSSI@dBmNum
  2526  062D  07BA               	addwf	getRSSI@dBmNum,f
  2527                           
  2528                           ;ZIGBEE_16F_MASTER.c: 33: char dBmbuf[2];
  2529                           ;ZIGBEE_16F_MASTER.c: 34: sprintf(dBmbuf , "%d", dBmNum);
  2530  062E  3092               	movlw	(STR_2-__stringbase)& (0+255)
  2531  062F  00B1               	movwf	??_getRSSI
  2532  0630  0831               	movf	??_getRSSI,w
  2533  0631  00A0               	movwf	?_sprintf
  2534  0632  083B               	movf	getRSSI@dBmNum+1,w
  2535  0633  01A2               	clrf	?_sprintf+2
  2536  0634  07A2               	addwf	?_sprintf+2,f
  2537  0635  083A               	movf	getRSSI@dBmNum,w
  2538  0636  01A1               	clrf	?_sprintf+1
  2539  0637  07A1               	addwf	?_sprintf+1,f
  2540  0638  3036               	movlw	getRSSI@dBmbuf& (0+255)
  2541  0639  120A  118A  2159   	fcall	_sprintf
      +       120A  118A         
  2542                           
  2543                           ;ZIGBEE_16F_MASTER.c: 35: dBm[0] = '-';
  2544  063E  302D               	movlw	45
  2545  063F  1283               	bcf	3,5	;RP0=0, select bank0
  2546  0640  1303               	bcf	3,6	;RP1=0, select bank0
  2547  0641  00B1               	movwf	??_getRSSI
  2548  0642  082F               	movf	getRSSI@dBm,w
  2549  0643  0084               	movwf	4
  2550  0644  0831               	movf	??_getRSSI,w
  2551  0645  1383               	bcf	3,7	;select IRP bank0
  2552  0646  0080               	movwf	0
  2553                           
  2554                           ;ZIGBEE_16F_MASTER.c: 36: dBm[1] = dBmbuf[0];
  2555  0647  0836               	movf	getRSSI@dBmbuf,w
  2556  0648  00B1               	movwf	??_getRSSI
  2557  0649  0A2F               	incf	getRSSI@dBm,w
  2558  064A  0084               	movwf	4
  2559  064B  0831               	movf	??_getRSSI,w
  2560  064C  0080               	movwf	0
  2561                           
  2562                           ;ZIGBEE_16F_MASTER.c: 37: dBm[2] = dBmbuf[1];
  2563  064D  0837               	movf	getRSSI@dBmbuf+1,w
  2564  064E  00B1               	movwf	??_getRSSI
  2565  064F  082F               	movf	getRSSI@dBm,w
  2566  0650  3E02               	addlw	2
  2567  0651  0084               	movwf	4
  2568  0652  0831               	movf	??_getRSSI,w
  2569  0653  0080               	movwf	0
  2570                           
  2571                           ;ZIGBEE_16F_MASTER.c: 38: dBm[3] = 'd';
  2572  0654  3064               	movlw	100
  2573  0655  00B1               	movwf	??_getRSSI
  2574  0656  082F               	movf	getRSSI@dBm,w
  2575  0657  3E03               	addlw	3
  2576  0658  0084               	movwf	4
  2577  0659  0831               	movf	??_getRSSI,w
  2578  065A  0080               	movwf	0
  2579                           
  2580                           ;ZIGBEE_16F_MASTER.c: 39: dBm[4] = 'B';
  2581  065B  3042               	movlw	66
  2582  065C  00B1               	movwf	??_getRSSI
  2583  065D  082F               	movf	getRSSI@dBm,w
  2584  065E  3E04               	addlw	4
  2585  065F  0084               	movwf	4
  2586  0660  0831               	movf	??_getRSSI,w
  2587  0661  0080               	movwf	0
  2588                           
  2589                           ;ZIGBEE_16F_MASTER.c: 40: dBm[5] = 'm';
  2590  0662  306D               	movlw	109
  2591  0663  00B1               	movwf	??_getRSSI
  2592  0664  082F               	movf	getRSSI@dBm,w
  2593  0665  3E05               	addlw	5
  2594  0666  0084               	movwf	4
  2595  0667  0831               	movf	??_getRSSI,w
  2596  0668  0080               	movwf	0
  2597                           
  2598                           ;ZIGBEE_16F_MASTER.c: 41: dBm[6] = '\0';
  2599  0669  082F               	movf	getRSSI@dBm,w
  2600  066A  3E06               	addlw	6
  2601  066B  0084               	movwf	4
  2602  066C  0180               	clrf	0
  2603                           
  2604                           ;ZIGBEE_16F_MASTER.c: 46: if(dBmNum > 25 && dBmNum <= 35)
  2605  066D  3000               	movlw	0
  2606  066E  023B               	subwf	getRSSI@dBmNum+1,w
  2607  066F  301A               	movlw	26
  2608  0670  1903               	skipnz
  2609  0671  023A               	subwf	getRSSI@dBmNum,w
  2610  0672  1C03               	skipc
  2611  0673  2EA8               	goto	l2414
  2612  0674  3000               	movlw	0
  2613  0675  023B               	subwf	getRSSI@dBmNum+1,w
  2614  0676  3024               	movlw	36
  2615  0677  1903               	skipnz
  2616  0678  023A               	subwf	getRSSI@dBmNum,w
  2617  0679  1803               	skipnc
  2618  067A  2EA8               	goto	l2414
  2619                           
  2620                           ;ZIGBEE_16F_MASTER.c: 47: {
  2621                           ;ZIGBEE_16F_MASTER.c: 48: percentage[0] = '('; percentage[1] = '1'; percentage[2] = '0';
      +                           percentage[3] = '0'; percentage[4] = '%'; percentage[5] = ')'; percentage[6] = '\0';
  2622  067B  3028               	movlw	40
  2623  067C  00B1               	movwf	??_getRSSI
  2624  067D  0830               	movf	getRSSI@percentage,w
  2625  067E  0084               	movwf	4
  2626  067F  0831               	movf	??_getRSSI,w
  2627  0680  0080               	movwf	0
  2628  0681  3031               	movlw	49
  2629  0682  00B1               	movwf	??_getRSSI
  2630  0683  0A30               	incf	getRSSI@percentage,w
  2631  0684  0084               	movwf	4
  2632  0685  0831               	movf	??_getRSSI,w
  2633  0686  0080               	movwf	0
  2634  0687  3030               	movlw	48
  2635  0688  00B1               	movwf	??_getRSSI
  2636  0689  0830               	movf	getRSSI@percentage,w
  2637  068A  3E02               	addlw	2
  2638  068B  0084               	movwf	4
  2639  068C  0831               	movf	??_getRSSI,w
  2640  068D  0080               	movwf	0
  2641  068E  3030               	movlw	48
  2642  068F  00B1               	movwf	??_getRSSI
  2643  0690  0830               	movf	getRSSI@percentage,w
  2644  0691  3E03               	addlw	3
  2645  0692  0084               	movwf	4
  2646  0693  0831               	movf	??_getRSSI,w
  2647  0694  0080               	movwf	0
  2648  0695  3025               	movlw	37
  2649  0696  00B1               	movwf	??_getRSSI
  2650  0697  0830               	movf	getRSSI@percentage,w
  2651  0698  3E04               	addlw	4
  2652  0699  0084               	movwf	4
  2653  069A  0831               	movf	??_getRSSI,w
  2654  069B  0080               	movwf	0
  2655  069C  3029               	movlw	41
  2656  069D  00B1               	movwf	??_getRSSI
  2657  069E  0830               	movf	getRSSI@percentage,w
  2658  069F  3E05               	addlw	5
  2659  06A0  0084               	movwf	4
  2660  06A1  0831               	movf	??_getRSSI,w
  2661  06A2  0080               	movwf	0
  2662  06A3  0830               	movf	getRSSI@percentage,w
  2663  06A4  3E06               	addlw	6
  2664  06A5  0084               	movwf	4
  2665  06A6  0180               	clrf	0
  2666                           
  2667                           ;ZIGBEE_16F_MASTER.c: 49: }
  2668  06A7  0008               	return
  2669  06A8                     l2414:	
  2670                           
  2671                           ;ZIGBEE_16F_MASTER.c: 50: else if(dBmNum > 35 && dBmNum <= 45)
  2672  06A8  3000               	movlw	0
  2673  06A9  023B               	subwf	getRSSI@dBmNum+1,w
  2674  06AA  3024               	movlw	36
  2675  06AB  1903               	skipnz
  2676  06AC  023A               	subwf	getRSSI@dBmNum,w
  2677  06AD  1C03               	skipc
  2678  06AE  2EE0               	goto	l2424
  2679  06AF  3000               	movlw	0
  2680  06B0  023B               	subwf	getRSSI@dBmNum+1,w
  2681  06B1  302E               	movlw	46
  2682  06B2  1903               	skipnz
  2683  06B3  023A               	subwf	getRSSI@dBmNum,w
  2684  06B4  1803               	skipnc
  2685  06B5  2EE0               	goto	l2424
  2686                           
  2687                           ;ZIGBEE_16F_MASTER.c: 51: {
  2688                           ;ZIGBEE_16F_MASTER.c: 52: percentage[0] = '('; percentage[1] = '8'; percentage[2] = '5';
      +                           percentage[3] = '%'; percentage[4] = ')'; percentage[5] = '\0'; percentage[6] = '\0';
  2689  06B6  3028               	movlw	40
  2690  06B7  00B1               	movwf	??_getRSSI
  2691  06B8  0830               	movf	getRSSI@percentage,w
  2692  06B9  0084               	movwf	4
  2693  06BA  0831               	movf	??_getRSSI,w
  2694  06BB  0080               	movwf	0
  2695  06BC  3038               	movlw	56
  2696  06BD  00B1               	movwf	??_getRSSI
  2697  06BE  0A30               	incf	getRSSI@percentage,w
  2698  06BF  0084               	movwf	4
  2699  06C0  0831               	movf	??_getRSSI,w
  2700  06C1  0080               	movwf	0
  2701  06C2  3035               	movlw	53
  2702  06C3  00B1               	movwf	??_getRSSI
  2703  06C4  0830               	movf	getRSSI@percentage,w
  2704  06C5  3E02               	addlw	2
  2705  06C6  0084               	movwf	4
  2706  06C7  0831               	movf	??_getRSSI,w
  2707  06C8  0080               	movwf	0
  2708  06C9  3025               	movlw	37
  2709  06CA  00B1               	movwf	??_getRSSI
  2710  06CB  0830               	movf	getRSSI@percentage,w
  2711  06CC  3E03               	addlw	3
  2712  06CD  0084               	movwf	4
  2713  06CE  0831               	movf	??_getRSSI,w
  2714  06CF  0080               	movwf	0
  2715  06D0  3029               	movlw	41
  2716  06D1  00B1               	movwf	??_getRSSI
  2717  06D2  0830               	movf	getRSSI@percentage,w
  2718  06D3  3E04               	addlw	4
  2719  06D4  0084               	movwf	4
  2720  06D5  0831               	movf	??_getRSSI,w
  2721  06D6  0080               	movwf	0
  2722  06D7  0830               	movf	getRSSI@percentage,w
  2723  06D8  3E05               	addlw	5
  2724  06D9  0084               	movwf	4
  2725  06DA  0180               	clrf	0
  2726  06DB  0830               	movf	getRSSI@percentage,w
  2727  06DC  3E06               	addlw	6
  2728  06DD  0084               	movwf	4
  2729  06DE  0180               	clrf	0
  2730                           
  2731                           ;ZIGBEE_16F_MASTER.c: 53: }
  2732  06DF  0008               	return
  2733  06E0                     l2424:	
  2734                           
  2735                           ;ZIGBEE_16F_MASTER.c: 54: else if(dBmNum > 45 && dBmNum <= 55)
  2736  06E0  3000               	movlw	0
  2737  06E1  023B               	subwf	getRSSI@dBmNum+1,w
  2738  06E2  302E               	movlw	46
  2739  06E3  1903               	skipnz
  2740  06E4  023A               	subwf	getRSSI@dBmNum,w
  2741  06E5  1C03               	skipc
  2742  06E6  2F18               	goto	l2434
  2743  06E7  3000               	movlw	0
  2744  06E8  023B               	subwf	getRSSI@dBmNum+1,w
  2745  06E9  3038               	movlw	56
  2746  06EA  1903               	skipnz
  2747  06EB  023A               	subwf	getRSSI@dBmNum,w
  2748  06EC  1803               	skipnc
  2749  06ED  2F18               	goto	l2434
  2750                           
  2751                           ;ZIGBEE_16F_MASTER.c: 55: {
  2752                           ;ZIGBEE_16F_MASTER.c: 56: percentage[0] = '('; percentage[1] = '6'; percentage[2] = '0';
      +                           percentage[3] = '%'; percentage[4] = ')'; percentage[5] = '\0'; percentage[6] = '\0';
  2753  06EE  3028               	movlw	40
  2754  06EF  00B1               	movwf	??_getRSSI
  2755  06F0  0830               	movf	getRSSI@percentage,w
  2756  06F1  0084               	movwf	4
  2757  06F2  0831               	movf	??_getRSSI,w
  2758  06F3  0080               	movwf	0
  2759  06F4  3036               	movlw	54
  2760  06F5  00B1               	movwf	??_getRSSI
  2761  06F6  0A30               	incf	getRSSI@percentage,w
  2762  06F7  0084               	movwf	4
  2763  06F8  0831               	movf	??_getRSSI,w
  2764  06F9  0080               	movwf	0
  2765  06FA  3030               	movlw	48
  2766  06FB  00B1               	movwf	??_getRSSI
  2767  06FC  0830               	movf	getRSSI@percentage,w
  2768  06FD  3E02               	addlw	2
  2769  06FE  0084               	movwf	4
  2770  06FF  0831               	movf	??_getRSSI,w
  2771  0700  0080               	movwf	0
  2772  0701  3025               	movlw	37
  2773  0702  00B1               	movwf	??_getRSSI
  2774  0703  0830               	movf	getRSSI@percentage,w
  2775  0704  3E03               	addlw	3
  2776  0705  0084               	movwf	4
  2777  0706  0831               	movf	??_getRSSI,w
  2778  0707  0080               	movwf	0
  2779  0708  3029               	movlw	41
  2780  0709  00B1               	movwf	??_getRSSI
  2781  070A  0830               	movf	getRSSI@percentage,w
  2782  070B  3E04               	addlw	4
  2783  070C  0084               	movwf	4
  2784  070D  0831               	movf	??_getRSSI,w
  2785  070E  0080               	movwf	0
  2786  070F  0830               	movf	getRSSI@percentage,w
  2787  0710  3E05               	addlw	5
  2788  0711  0084               	movwf	4
  2789  0712  0180               	clrf	0
  2790  0713  0830               	movf	getRSSI@percentage,w
  2791  0714  3E06               	addlw	6
  2792  0715  0084               	movwf	4
  2793  0716  0180               	clrf	0
  2794                           
  2795                           ;ZIGBEE_16F_MASTER.c: 57: }
  2796  0717  0008               	return
  2797  0718                     l2434:	
  2798                           
  2799                           ;ZIGBEE_16F_MASTER.c: 58: else if(dBmNum > 55 && dBmNum <= 65)
  2800  0718  3000               	movlw	0
  2801  0719  023B               	subwf	getRSSI@dBmNum+1,w
  2802  071A  3038               	movlw	56
  2803  071B  1903               	skipnz
  2804  071C  023A               	subwf	getRSSI@dBmNum,w
  2805  071D  1C03               	skipc
  2806  071E  2F50               	goto	l2444
  2807  071F  3000               	movlw	0
  2808  0720  023B               	subwf	getRSSI@dBmNum+1,w
  2809  0721  3042               	movlw	66
  2810  0722  1903               	skipnz
  2811  0723  023A               	subwf	getRSSI@dBmNum,w
  2812  0724  1803               	skipnc
  2813  0725  2F50               	goto	l2444
  2814                           
  2815                           ;ZIGBEE_16F_MASTER.c: 59: {
  2816                           ;ZIGBEE_16F_MASTER.c: 60: percentage[0] = '('; percentage[1] = '4'; percentage[2] = '5';
      +                           percentage[3] = '%'; percentage[4] = ')'; percentage[5] = '\0'; percentage[6] = '\0';
  2817  0726  3028               	movlw	40
  2818  0727  00B1               	movwf	??_getRSSI
  2819  0728  0830               	movf	getRSSI@percentage,w
  2820  0729  0084               	movwf	4
  2821  072A  0831               	movf	??_getRSSI,w
  2822  072B  0080               	movwf	0
  2823  072C  3034               	movlw	52
  2824  072D  00B1               	movwf	??_getRSSI
  2825  072E  0A30               	incf	getRSSI@percentage,w
  2826  072F  0084               	movwf	4
  2827  0730  0831               	movf	??_getRSSI,w
  2828  0731  0080               	movwf	0
  2829  0732  3035               	movlw	53
  2830  0733  00B1               	movwf	??_getRSSI
  2831  0734  0830               	movf	getRSSI@percentage,w
  2832  0735  3E02               	addlw	2
  2833  0736  0084               	movwf	4
  2834  0737  0831               	movf	??_getRSSI,w
  2835  0738  0080               	movwf	0
  2836  0739  3025               	movlw	37
  2837  073A  00B1               	movwf	??_getRSSI
  2838  073B  0830               	movf	getRSSI@percentage,w
  2839  073C  3E03               	addlw	3
  2840  073D  0084               	movwf	4
  2841  073E  0831               	movf	??_getRSSI,w
  2842  073F  0080               	movwf	0
  2843  0740  3029               	movlw	41
  2844  0741  00B1               	movwf	??_getRSSI
  2845  0742  0830               	movf	getRSSI@percentage,w
  2846  0743  3E04               	addlw	4
  2847  0744  0084               	movwf	4
  2848  0745  0831               	movf	??_getRSSI,w
  2849  0746  0080               	movwf	0
  2850  0747  0830               	movf	getRSSI@percentage,w
  2851  0748  3E05               	addlw	5
  2852  0749  0084               	movwf	4
  2853  074A  0180               	clrf	0
  2854  074B  0830               	movf	getRSSI@percentage,w
  2855  074C  3E06               	addlw	6
  2856  074D  0084               	movwf	4
  2857  074E  0180               	clrf	0
  2858                           
  2859                           ;ZIGBEE_16F_MASTER.c: 61: }
  2860  074F  0008               	return
  2861  0750                     l2444:	
  2862                           
  2863                           ;ZIGBEE_16F_MASTER.c: 62: else if(dBmNum > 65 && dBmNum <= 75)
  2864  0750  3000               	movlw	0
  2865  0751  023B               	subwf	getRSSI@dBmNum+1,w
  2866  0752  3042               	movlw	66
  2867  0753  1903               	skipnz
  2868  0754  023A               	subwf	getRSSI@dBmNum,w
  2869  0755  1C03               	skipc
  2870  0756  2F88               	goto	l2454
  2871  0757  3000               	movlw	0
  2872  0758  023B               	subwf	getRSSI@dBmNum+1,w
  2873  0759  304C               	movlw	76
  2874  075A  1903               	skipnz
  2875  075B  023A               	subwf	getRSSI@dBmNum,w
  2876  075C  1803               	skipnc
  2877  075D  2F88               	goto	l2454
  2878                           
  2879                           ;ZIGBEE_16F_MASTER.c: 63: {
  2880                           ;ZIGBEE_16F_MASTER.c: 64: percentage[0] = '('; percentage[1] = '3'; percentage[2] = '0';
      +                           percentage[3] = '%'; percentage[4] = ')'; percentage[5] = '\0'; percentage[6] = '\0';
  2881  075E  3028               	movlw	40
  2882  075F  00B1               	movwf	??_getRSSI
  2883  0760  0830               	movf	getRSSI@percentage,w
  2884  0761  0084               	movwf	4
  2885  0762  0831               	movf	??_getRSSI,w
  2886  0763  0080               	movwf	0
  2887  0764  3033               	movlw	51
  2888  0765  00B1               	movwf	??_getRSSI
  2889  0766  0A30               	incf	getRSSI@percentage,w
  2890  0767  0084               	movwf	4
  2891  0768  0831               	movf	??_getRSSI,w
  2892  0769  0080               	movwf	0
  2893  076A  3030               	movlw	48
  2894  076B  00B1               	movwf	??_getRSSI
  2895  076C  0830               	movf	getRSSI@percentage,w
  2896  076D  3E02               	addlw	2
  2897  076E  0084               	movwf	4
  2898  076F  0831               	movf	??_getRSSI,w
  2899  0770  0080               	movwf	0
  2900  0771  3025               	movlw	37
  2901  0772  00B1               	movwf	??_getRSSI
  2902  0773  0830               	movf	getRSSI@percentage,w
  2903  0774  3E03               	addlw	3
  2904  0775  0084               	movwf	4
  2905  0776  0831               	movf	??_getRSSI,w
  2906  0777  0080               	movwf	0
  2907  0778  3029               	movlw	41
  2908  0779  00B1               	movwf	??_getRSSI
  2909  077A  0830               	movf	getRSSI@percentage,w
  2910  077B  3E04               	addlw	4
  2911  077C  0084               	movwf	4
  2912  077D  0831               	movf	??_getRSSI,w
  2913  077E  0080               	movwf	0
  2914  077F  0830               	movf	getRSSI@percentage,w
  2915  0780  3E05               	addlw	5
  2916  0781  0084               	movwf	4
  2917  0782  0180               	clrf	0
  2918  0783  0830               	movf	getRSSI@percentage,w
  2919  0784  3E06               	addlw	6
  2920  0785  0084               	movwf	4
  2921  0786  0180               	clrf	0
  2922                           
  2923                           ;ZIGBEE_16F_MASTER.c: 65: }
  2924  0787  0008               	return
  2925  0788                     l2454:	
  2926                           
  2927                           ;ZIGBEE_16F_MASTER.c: 66: else if(dBmNum > 75 && dBmNum <= 85)
  2928  0788  3000               	movlw	0
  2929  0789  023B               	subwf	getRSSI@dBmNum+1,w
  2930  078A  304C               	movlw	76
  2931  078B  1903               	skipnz
  2932  078C  023A               	subwf	getRSSI@dBmNum,w
  2933  078D  1C03               	skipc
  2934  078E  2FC0               	goto	l2464
  2935  078F  3000               	movlw	0
  2936  0790  023B               	subwf	getRSSI@dBmNum+1,w
  2937  0791  3056               	movlw	86
  2938  0792  1903               	skipnz
  2939  0793  023A               	subwf	getRSSI@dBmNum,w
  2940  0794  1803               	skipnc
  2941  0795  2FC0               	goto	l2464
  2942                           
  2943                           ;ZIGBEE_16F_MASTER.c: 67: {
  2944                           ;ZIGBEE_16F_MASTER.c: 68: percentage[0] = '('; percentage[1] = '1'; percentage[2] = '5';
      +                           percentage[3] = '%'; percentage[4] = ')'; percentage[5] = '\0'; percentage[6] = '\0';
  2945  0796  3028               	movlw	40
  2946  0797  00B1               	movwf	??_getRSSI
  2947  0798  0830               	movf	getRSSI@percentage,w
  2948  0799  0084               	movwf	4
  2949  079A  0831               	movf	??_getRSSI,w
  2950  079B  0080               	movwf	0
  2951  079C  3031               	movlw	49
  2952  079D  00B1               	movwf	??_getRSSI
  2953  079E  0A30               	incf	getRSSI@percentage,w
  2954  079F  0084               	movwf	4
  2955  07A0  0831               	movf	??_getRSSI,w
  2956  07A1  0080               	movwf	0
  2957  07A2  3035               	movlw	53
  2958  07A3  00B1               	movwf	??_getRSSI
  2959  07A4  0830               	movf	getRSSI@percentage,w
  2960  07A5  3E02               	addlw	2
  2961  07A6  0084               	movwf	4
  2962  07A7  0831               	movf	??_getRSSI,w
  2963  07A8  0080               	movwf	0
  2964  07A9  3025               	movlw	37
  2965  07AA  00B1               	movwf	??_getRSSI
  2966  07AB  0830               	movf	getRSSI@percentage,w
  2967  07AC  3E03               	addlw	3
  2968  07AD  0084               	movwf	4
  2969  07AE  0831               	movf	??_getRSSI,w
  2970  07AF  0080               	movwf	0
  2971  07B0  3029               	movlw	41
  2972  07B1  00B1               	movwf	??_getRSSI
  2973  07B2  0830               	movf	getRSSI@percentage,w
  2974  07B3  3E04               	addlw	4
  2975  07B4  0084               	movwf	4
  2976  07B5  0831               	movf	??_getRSSI,w
  2977  07B6  0080               	movwf	0
  2978  07B7  0830               	movf	getRSSI@percentage,w
  2979  07B8  3E05               	addlw	5
  2980  07B9  0084               	movwf	4
  2981  07BA  0180               	clrf	0
  2982  07BB  0830               	movf	getRSSI@percentage,w
  2983  07BC  3E06               	addlw	6
  2984  07BD  0084               	movwf	4
  2985  07BE  0180               	clrf	0
  2986                           
  2987                           ;ZIGBEE_16F_MASTER.c: 69: }
  2988  07BF  0008               	return
  2989  07C0                     l2464:	
  2990                           
  2991                           ;ZIGBEE_16F_MASTER.c: 70: else if(dBmNum > 85 && dBmNum <= 95)
  2992  07C0  3000               	movlw	0
  2993  07C1  023B               	subwf	getRSSI@dBmNum+1,w
  2994  07C2  3056               	movlw	86
  2995  07C3  1903               	skipnz
  2996  07C4  023A               	subwf	getRSSI@dBmNum,w
  2997  07C5  1C03               	skipc
  2998  07C6  0008               	return
  2999  07C7  3000               	movlw	0
  3000  07C8  023B               	subwf	getRSSI@dBmNum+1,w
  3001  07C9  3060               	movlw	96
  3002  07CA  1903               	skipnz
  3003  07CB  023A               	subwf	getRSSI@dBmNum,w
  3004  07CC  1803               	skipnc
  3005  07CD  0008               	return
  3006                           
  3007                           ;ZIGBEE_16F_MASTER.c: 71: {
  3008                           ;ZIGBEE_16F_MASTER.c: 72: percentage[0] = '('; percentage[1] = '0'; percentage[2] = '%';
      +                           percentage[3] = ')'; percentage[4] = '\0'; percentage[5] = '\0'; percentage[6] = '\0';
  3009  07CE  3028               	movlw	40
  3010  07CF  00B1               	movwf	??_getRSSI
  3011  07D0  0830               	movf	getRSSI@percentage,w
  3012  07D1  0084               	movwf	4
  3013  07D2  0831               	movf	??_getRSSI,w
  3014  07D3  0080               	movwf	0
  3015  07D4  3030               	movlw	48
  3016  07D5  00B1               	movwf	??_getRSSI
  3017  07D6  0A30               	incf	getRSSI@percentage,w
  3018  07D7  0084               	movwf	4
  3019  07D8  0831               	movf	??_getRSSI,w
  3020  07D9  0080               	movwf	0
  3021  07DA  3025               	movlw	37
  3022  07DB  00B1               	movwf	??_getRSSI
  3023  07DC  0830               	movf	getRSSI@percentage,w
  3024  07DD  3E02               	addlw	2
  3025  07DE  0084               	movwf	4
  3026  07DF  0831               	movf	??_getRSSI,w
  3027  07E0  0080               	movwf	0
  3028  07E1  3029               	movlw	41
  3029  07E2  00B1               	movwf	??_getRSSI
  3030  07E3  0830               	movf	getRSSI@percentage,w
  3031  07E4  3E03               	addlw	3
  3032  07E5  0084               	movwf	4
  3033  07E6  0831               	movf	??_getRSSI,w
  3034  07E7  0080               	movwf	0
  3035  07E8  0830               	movf	getRSSI@percentage,w
  3036  07E9  3E04               	addlw	4
  3037  07EA  0084               	movwf	4
  3038  07EB  0180               	clrf	0
  3039  07EC  0830               	movf	getRSSI@percentage,w
  3040  07ED  3E05               	addlw	5
  3041  07EE  0084               	movwf	4
  3042  07EF  0180               	clrf	0
  3043  07F0  0830               	movf	getRSSI@percentage,w
  3044  07F1  3E06               	addlw	6
  3045  07F2  0084               	movwf	4
  3046  07F3  0180               	clrf	0
  3047                           
  3048                           ;ZIGBEE_16F_MASTER.c: 74: else
  3049                           ;ZIGBEE_16F_MASTER.c: 75: {
  3050                           
  3051                           ;ZIGBEE_16F_MASTER.c: 73: }
  3052  07F4  0008               	return
  3053  07F5                     __end_of_getRSSI:	
  3054                           
  3055                           	psect	text9
  3056  0159                     __ptext9:	
  3057 ;; *************** function _sprintf *****************
  3058 ;; Defined at:
  3059 ;;		line 493 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\doprnt.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  sp              1    wreg     PTR unsigned char 
  3062 ;;		 -> getRSSI@dBmbuf(2), 
  3063 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  3064 ;;		 -> STR_2(3), 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  sp              1   13[BANK0 ] PTR unsigned char 
  3067 ;;		 -> getRSSI@dBmbuf(2), 
  3068 ;;  _val            4    9[BANK0 ] struct .
  3069 ;;  c               1   14[BANK0 ] char 
  3070 ;;  prec            1    8[BANK0 ] char 
  3071 ;;  flag            1    7[BANK0 ] unsigned char 
  3072 ;;  ap              1    6[BANK0 ] PTR void [1]
  3073 ;;		 -> ?_sprintf(2), 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  2    0[BANK0 ] int 
  3076 ;; Registers used:
  3077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3083 ;;      Params:         0       3       0       0       0
  3084 ;;      Locals:         0       9       0       0       0
  3085 ;;      Temps:          0       3       0       0       0
  3086 ;;      Totals:         0      15       0       0       0
  3087 ;;Total ram usage:       15 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    1
  3090 ;; This function calls:
  3091 ;;		___lwdiv
  3092 ;;		___lwmod
  3093 ;; This function is called by:
  3094 ;;		_getRSSI
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           
  3099                           ;psect for function _sprintf
  3100  0159                     _sprintf:	
  3101                           
  3102                           ;incstack = 0
  3103                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3104                           ;sprintf@sp stored from wreg
  3105  0159  1283               	bcf	3,5	;RP0=0, select bank0
  3106  015A  1303               	bcf	3,6	;RP1=0, select bank0
  3107  015B  00AD               	movwf	sprintf@sp
  3108                           
  3109                           ;doprnt.c: 494: va_list ap;
  3110                           ;doprnt.c: 499: signed char c;
  3111                           ;doprnt.c: 506: signed char prec;
  3112                           ;doprnt.c: 508: unsigned char flag;
  3113                           ;doprnt.c: 527: union {
  3114                           ;doprnt.c: 528: unsigned int _val;
  3115                           ;doprnt.c: 529: struct {
  3116                           ;doprnt.c: 530: const char * _cp;
  3117                           ;doprnt.c: 531: unsigned _len;
  3118                           ;doprnt.c: 532: } _str;
  3119                           ;doprnt.c: 533: } _val;
  3120                           ;doprnt.c: 542: *ap = __va_start();
  3121  015C  3021               	movlw	(?_sprintf+1)& (0+255)
  3122  015D  00A3               	movwf	??_sprintf
  3123  015E  0823               	movf	??_sprintf,w
  3124  015F  00A6               	movwf	sprintf@ap
  3125  0160                     l2356:	
  3126                           ;doprnt.c: 545: while(c = *f++) {
  3127                           
  3128  0160  3001               	movlw	1
  3129  0161  07A0               	addwf	sprintf@f,f
  3130  0162  30FF               	movlw	-1
  3131  0163  0720               	addwf	sprintf@f,w
  3132  0164  0084               	movwf	4
  3133  0165  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  3134  016A  00A3               	movwf	??_sprintf
  3135  016B  0823               	movf	??_sprintf,w
  3136  016C  00AE               	movwf	sprintf@c
  3137  016D  08AE               	movf	sprintf@c,f
  3138  016E  1903               	btfsc	3,2
  3139  016F  2A2D               	goto	l2358
  3140                           
  3141                           ;doprnt.c: 547: if(c != '%')
  3142  0170  082E               	movf	sprintf@c,w
  3143  0171  3A25               	xorlw	37
  3144  0172  1903               	skipnz
  3145  0173  2980               	goto	l2312
  3146                           
  3147                           ;doprnt.c: 549: {
  3148                           ;doprnt.c: 550: ((*sp++ = (c)));
  3149  0174  082E               	movf	sprintf@c,w
  3150  0175  00A3               	movwf	??_sprintf
  3151  0176  082D               	movf	sprintf@sp,w
  3152  0177  0084               	movwf	4
  3153  0178  0823               	movf	??_sprintf,w
  3154  0179  1383               	bcf	3,7	;select IRP bank0
  3155  017A  0080               	movwf	0
  3156  017B  3001               	movlw	1
  3157  017C  00A3               	movwf	??_sprintf
  3158  017D  0823               	movf	??_sprintf,w
  3159  017E  07AD               	addwf	sprintf@sp,f
  3160                           
  3161                           ;doprnt.c: 551: continue;
  3162  017F  2960               	goto	l2356
  3163  0180                     l2312:	
  3164                           
  3165                           ;doprnt.c: 552: }
  3166                           ;doprnt.c: 557: flag = 0;
  3167  0180  01A7               	clrf	sprintf@flag
  3168                           
  3169                           ;doprnt.c: 831: }
  3170                           
  3171                           ;doprnt.c: 822: continue;
  3172                           
  3173                           ;doprnt.c: 811: default:
  3174                           
  3175                           ;doprnt.c: 707: case 'i':
  3176                           ;doprnt.c: 708: break;
  3177                           
  3178                           ;doprnt.c: 706: case 'd':
  3179                           
  3180                           ;doprnt.c: 647: goto alldone;
  3181                           
  3182                           ;doprnt.c: 646: case 0:
  3183                           
  3184                           ;doprnt.c: 644: switch(c = *f++) {
  3185  0181  3001               	movlw	1
  3186  0182  07A0               	addwf	sprintf@f,f
  3187  0183  30FF               	movlw	-1
  3188  0184  0720               	addwf	sprintf@f,w
  3189  0185  0084               	movwf	4
  3190  0186  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  3191  018B  00AE               	movwf	sprintf@c
  3192                           
  3193                           ; Switch size 1, requested type "space"
  3194                           ; Number of cases is 3, Range of values is 0 to 105
  3195                           ; switch strategies available:
  3196                           ; Name         Instructions Cycles
  3197                           ; simple_byte           10     6 (average)
  3198                           ; jumptable            260     6 (fixed)
  3199                           ;	Chosen strategy is simple_byte
  3200  018C  3A00               	xorlw	0	; case 0
  3201  018D  1903               	skipnz
  3202  018E  2A2D               	goto	l2358
  3203  018F  3A64               	xorlw	100	; case 100
  3204  0190  1903               	skipnz
  3205  0191  2996               	goto	l2318
  3206  0192  3A0D               	xorlw	13	; case 105
  3207  0193  1903               	skipnz
  3208  0194  2996               	goto	l2318
  3209  0195  2960               	goto	l2356
  3210  0196                     l2318:	
  3211                           
  3212                           ;doprnt.c: 1260: {
  3213                           ;doprnt.c: 1266: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3214  0196  0826               	movf	sprintf@ap,w
  3215  0197  0084               	movwf	4
  3216  0198  1383               	bcf	3,7	;select IRP bank0
  3217  0199  0800               	movf	0,w
  3218  019A  00A9               	movwf	sprintf@_val
  3219  019B  0A84               	incf	4,f
  3220  019C  0800               	movf	0,w
  3221  019D  00AA               	movwf	sprintf@_val+1
  3222  019E  3002               	movlw	2
  3223  019F  00A3               	movwf	??_sprintf
  3224  01A0  0823               	movf	??_sprintf,w
  3225  01A1  07A6               	addwf	sprintf@ap,f
  3226                           
  3227                           ;doprnt.c: 1268: if((int)_val._val < 0) {
  3228  01A2  1FAA               	btfss	sprintf@_val+1,7
  3229  01A3  29AD               	goto	l2328
  3230                           
  3231                           ;doprnt.c: 1269: flag |= 0x03;
  3232  01A4  3003               	movlw	3
  3233  01A5  00A3               	movwf	??_sprintf
  3234  01A6  0823               	movf	??_sprintf,w
  3235  01A7  04A7               	iorwf	sprintf@flag,f
  3236                           
  3237                           ;doprnt.c: 1270: _val._val = -_val._val;
  3238  01A8  09A9               	comf	sprintf@_val,f
  3239  01A9  09AA               	comf	sprintf@_val+1,f
  3240  01AA  0AA9               	incf	sprintf@_val,f
  3241  01AB  1903               	skipnz
  3242  01AC  0AAA               	incf	sprintf@_val+1,f
  3243  01AD                     l2328:	
  3244                           
  3245                           ;doprnt.c: 1271: }
  3246                           ;doprnt.c: 1273: }
  3247                           ;doprnt.c: 1312: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3248  01AD  01AE               	clrf	sprintf@c
  3249  01AE  0AAE               	incf	sprintf@c,f
  3250  01AF  082E               	movf	sprintf@c,w
  3251  01B0  3A05               	xorlw	5
  3252  01B1  1903               	btfsc	3,2
  3253  01B2  29D4               	goto	l2340
  3254  01B3                     l2332:	
  3255                           
  3256                           ;doprnt.c: 1313: if(_val._val < dpowers[c])
  3257  01B3  082E               	movf	sprintf@c,w
  3258  01B4  00A3               	movwf	??_sprintf
  3259  01B5  0723               	addwf	??_sprintf,w
  3260  01B6  3E01               	addlw	low (_dpowers-__stringbase)
  3261  01B7  0084               	movwf	4
  3262  01B8  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  3263  01BD  00A4               	movwf	??_sprintf+1
  3264  01BE  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  3265  01C3  00A5               	movwf	??_sprintf+2
  3266  01C4  0825               	movf	??_sprintf+2,w
  3267  01C5  022A               	subwf	sprintf@_val+1,w
  3268  01C6  1D03               	skipz
  3269  01C7  29CA               	goto	u1805
  3270  01C8  0824               	movf	??_sprintf+1,w
  3271  01C9  0229               	subwf	sprintf@_val,w
  3272  01CA                     u1805:	
  3273  01CA  1C03               	btfss	3,0
  3274  01CB  29D4               	goto	l2340
  3275                           
  3276                           ;doprnt.c: 1314: break;
  3277  01CC  3001               	movlw	1
  3278  01CD  00A3               	movwf	??_sprintf
  3279  01CE  0823               	movf	??_sprintf,w
  3280  01CF  07AE               	addwf	sprintf@c,f
  3281  01D0  082E               	movf	sprintf@c,w
  3282  01D1  3A05               	xorlw	5
  3283  01D2  1D03               	skipz
  3284  01D3  29B3               	goto	l2332
  3285  01D4                     l2340:	
  3286                           
  3287                           ;doprnt.c: 1429: {
  3288                           ;doprnt.c: 1445: if(flag & 0x03)
  3289  01D4  0827               	movf	sprintf@flag,w
  3290  01D5  3903               	andlw	3
  3291  01D6  1903               	btfsc	3,2
  3292  01D7  29E3               	goto	l2346
  3293                           
  3294                           ;doprnt.c: 1446: ((*sp++ = ('-')));
  3295  01D8  302D               	movlw	45
  3296  01D9  00A3               	movwf	??_sprintf
  3297  01DA  082D               	movf	sprintf@sp,w
  3298  01DB  0084               	movwf	4
  3299  01DC  0823               	movf	??_sprintf,w
  3300  01DD  1383               	bcf	3,7	;select IRP bank0
  3301  01DE  0080               	movwf	0
  3302  01DF  3001               	movlw	1
  3303  01E0  00A3               	movwf	??_sprintf
  3304  01E1  0823               	movf	??_sprintf,w
  3305  01E2  07AD               	addwf	sprintf@sp,f
  3306  01E3                     l2346:	
  3307                           
  3308                           ;doprnt.c: 1476: }
  3309                           ;doprnt.c: 1479: prec = c;
  3310  01E3  082E               	movf	sprintf@c,w
  3311  01E4  00A3               	movwf	??_sprintf
  3312  01E5  0823               	movf	??_sprintf,w
  3313  01E6  00A8               	movwf	sprintf@prec
  3314  01E7                     l2354:	
  3315                           ;doprnt.c: 1481: while(prec--) {
  3316                           
  3317  01E7  30FF               	movlw	-1
  3318  01E8  00A3               	movwf	??_sprintf
  3319  01E9  0823               	movf	??_sprintf,w
  3320  01EA  07A8               	addwf	sprintf@prec,f
  3321  01EB  0828               	movf	sprintf@prec,w
  3322  01EC  3AFF               	xorlw	-1
  3323  01ED  1903               	btfsc	3,2
  3324  01EE  2960               	goto	l2356
  3325                           
  3326                           ;doprnt.c: 1485: {
  3327                           ;doprnt.c: 1496: c = (_val._val / dpowers[prec]) % 10 + '0';
  3328  01EF  300A               	movlw	10
  3329  01F0  00F8               	movwf	?___lwmod
  3330  01F1  3000               	movlw	0
  3331  01F2  00F9               	movwf	?___lwmod+1
  3332  01F3  0828               	movf	sprintf@prec,w
  3333  01F4  00A3               	movwf	??_sprintf
  3334  01F5  0723               	addwf	??_sprintf,w
  3335  01F6  3E01               	addlw	low (_dpowers-__stringbase)
  3336  01F7  0084               	movwf	4
  3337  01F8  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  3338  01FD  00F0               	movwf	?___lwdiv
  3339  01FE  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
  3340  0203  00F1               	movwf	?___lwdiv+1
  3341  0204  082A               	movf	sprintf@_val+1,w
  3342  0205  01F3               	clrf	?___lwdiv+3
  3343  0206  07F3               	addwf	?___lwdiv+3,f
  3344  0207  0829               	movf	sprintf@_val,w
  3345  0208  01F2               	clrf	?___lwdiv+2
  3346  0209  07F2               	addwf	?___lwdiv+2,f
  3347  020A  120A  158A  273C   	fcall	___lwdiv
      +       120A  118A         
  3348  020F  0871               	movf	?___lwdiv+1,w
  3349  0210  01FB               	clrf	?___lwmod+3
  3350  0211  07FB               	addwf	?___lwmod+3,f
  3351  0212  0870               	movf	?___lwdiv,w
  3352  0213  01FA               	clrf	?___lwmod+2
  3353  0214  07FA               	addwf	?___lwmod+2,f
  3354  0215  120A  158A  2694   	fcall	___lwmod
      +       120A  118A         
  3355  021A  0878               	movf	?___lwmod,w
  3356  021B  3E30               	addlw	48
  3357  021C  1283               	bcf	3,5	;RP0=0, select bank0
  3358  021D  1303               	bcf	3,6	;RP1=0, select bank0
  3359  021E  00A4               	movwf	??_sprintf+1
  3360  021F  0824               	movf	??_sprintf+1,w
  3361  0220  00AE               	movwf	sprintf@c
  3362                           
  3363                           ;doprnt.c: 1530: }
  3364                           ;doprnt.c: 1531: ((*sp++ = (c)));
  3365  0221  082E               	movf	sprintf@c,w
  3366  0222  00A3               	movwf	??_sprintf
  3367  0223  082D               	movf	sprintf@sp,w
  3368  0224  0084               	movwf	4
  3369  0225  0823               	movf	??_sprintf,w
  3370  0226  1383               	bcf	3,7	;select IRP bank0
  3371  0227  0080               	movwf	0
  3372  0228  3001               	movlw	1
  3373  0229  00A3               	movwf	??_sprintf
  3374  022A  0823               	movf	??_sprintf,w
  3375  022B  07AD               	addwf	sprintf@sp,f
  3376  022C  29E7               	goto	l2354
  3377  022D                     l2358:	
  3378                           ;doprnt.c: 1532: }
  3379                           ;doprnt.c: 1540: }
  3380                           ;doprnt.c: 1542: alldone:
  3381                           
  3382                           
  3383                           ;doprnt.c: 1545: *sp = 0;
  3384  022D  082D               	movf	sprintf@sp,w
  3385  022E  0084               	movwf	4
  3386  022F  1383               	bcf	3,7	;select IRP bank0
  3387  0230  0180               	clrf	0
  3388  0231  0008               	return
  3389  0232                     __end_of_sprintf:	
  3390                           ;doprnt.c: 1547: return 0;
  3391                           ;	Return value of _sprintf is never used
  3392                           
  3393                           
  3394                           	psect	text10
  3395  0E94                     __ptext10:	
  3396 ;; *************** function ___lwmod *****************
  3397 ;; Defined at:
  3398 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\lwmod.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  divisor         2    8[COMMON] unsigned int 
  3401 ;;  dividend        2   10[COMMON] unsigned int 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  counter         1   13[COMMON] unsigned char 
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  2    8[COMMON] unsigned int 
  3406 ;; Registers used:
  3407 ;;		wreg, status,2, status,0
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3413 ;;      Params:         4       0       0       0       0
  3414 ;;      Locals:         1       0       0       0       0
  3415 ;;      Temps:          1       0       0       0       0
  3416 ;;      Totals:         6       0       0       0       0
  3417 ;;Total ram usage:        6 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; This function calls:
  3420 ;;		Nothing
  3421 ;; This function is called by:
  3422 ;;		_sprintf
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           
  3427                           ;psect for function ___lwmod
  3428  0E94                     ___lwmod:	
  3429                           
  3430                           ;incstack = 0
  3431                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3432  0E94  0879               	movf	___lwmod@divisor+1,w
  3433  0E95  0478               	iorwf	___lwmod@divisor,w
  3434  0E96  1903               	skipnz
  3435  0E97  2EC1               	goto	l2166
  3436  0E98  01FD               	clrf	___lwmod@counter
  3437  0E99  0AFD               	incf	___lwmod@counter,f
  3438  0E9A                     l2156:	
  3439  0E9A  1BF9               	btfsc	___lwmod@divisor+1,7
  3440  0E9B  2EA8               	goto	l2158
  3441  0E9C  3001               	movlw	1
  3442  0E9D                     u1515:	
  3443  0E9D  1003               	clrc
  3444  0E9E  0DF8               	rlf	___lwmod@divisor,f
  3445  0E9F  0DF9               	rlf	___lwmod@divisor+1,f
  3446  0EA0  3EFF               	addlw	-1
  3447  0EA1  1D03               	skipz
  3448  0EA2  2E9D               	goto	u1515
  3449  0EA3  3001               	movlw	1
  3450  0EA4  00FC               	movwf	??___lwmod
  3451  0EA5  087C               	movf	??___lwmod,w
  3452  0EA6  07FD               	addwf	___lwmod@counter,f
  3453  0EA7  2E9A               	goto	l2156
  3454  0EA8                     l2158:	
  3455  0EA8  0879               	movf	___lwmod@divisor+1,w
  3456  0EA9  027B               	subwf	___lwmod@dividend+1,w
  3457  0EAA  1D03               	skipz
  3458  0EAB  2EAE               	goto	u1535
  3459  0EAC  0878               	movf	___lwmod@divisor,w
  3460  0EAD  027A               	subwf	___lwmod@dividend,w
  3461  0EAE                     u1535:	
  3462  0EAE  1C03               	skipc
  3463  0EAF  2EB6               	goto	l2162
  3464  0EB0  0878               	movf	___lwmod@divisor,w
  3465  0EB1  02FA               	subwf	___lwmod@dividend,f
  3466  0EB2  0879               	movf	___lwmod@divisor+1,w
  3467  0EB3  1C03               	skipc
  3468  0EB4  03FB               	decf	___lwmod@dividend+1,f
  3469  0EB5  02FB               	subwf	___lwmod@dividend+1,f
  3470  0EB6                     l2162:	
  3471  0EB6  3001               	movlw	1
  3472  0EB7                     u1545:	
  3473  0EB7  1003               	clrc
  3474  0EB8  0CF9               	rrf	___lwmod@divisor+1,f
  3475  0EB9  0CF8               	rrf	___lwmod@divisor,f
  3476  0EBA  3EFF               	addlw	-1
  3477  0EBB  1D03               	skipz
  3478  0EBC  2EB7               	goto	u1545
  3479  0EBD  3001               	movlw	1
  3480  0EBE  02FD               	subwf	___lwmod@counter,f
  3481  0EBF  1D03               	btfss	3,2
  3482  0EC0  2EA8               	goto	l2158
  3483  0EC1                     l2166:	
  3484  0EC1  087B               	movf	___lwmod@dividend+1,w
  3485  0EC2  01F9               	clrf	?___lwmod+1
  3486  0EC3  07F9               	addwf	?___lwmod+1,f
  3487  0EC4  087A               	movf	___lwmod@dividend,w
  3488  0EC5  01F8               	clrf	?___lwmod
  3489  0EC6  07F8               	addwf	?___lwmod,f
  3490  0EC7  0008               	return
  3491  0EC8                     __end_of___lwmod:	
  3492                           
  3493                           	psect	text11
  3494  0F3C                     __ptext11:	
  3495 ;; *************** function ___lwdiv *****************
  3496 ;; Defined at:
  3497 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\lwdiv.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  divisor         2    0[COMMON] unsigned int 
  3500 ;;  dividend        2    2[COMMON] unsigned int 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  quotient        2    5[COMMON] unsigned int 
  3503 ;;  counter         1    7[COMMON] unsigned char 
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  2    0[COMMON] unsigned int 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2, status,0
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3513 ;;      Params:         4       0       0       0       0
  3514 ;;      Locals:         3       0       0       0       0
  3515 ;;      Temps:          1       0       0       0       0
  3516 ;;      Totals:         8       0       0       0       0
  3517 ;;Total ram usage:        8 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; This function calls:
  3520 ;;		Nothing
  3521 ;; This function is called by:
  3522 ;;		_sprintf
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           
  3527                           ;psect for function ___lwdiv
  3528  0F3C                     ___lwdiv:	
  3529                           
  3530                           ;incstack = 0
  3531                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3532  0F3C  01F5               	clrf	___lwdiv@quotient
  3533  0F3D  01F6               	clrf	___lwdiv@quotient+1
  3534  0F3E  0871               	movf	___lwdiv@divisor+1,w
  3535  0F3F  0470               	iorwf	___lwdiv@divisor,w
  3536  0F40  1903               	skipnz
  3537  0F41  2F73               	goto	l2018
  3538  0F42  01F7               	clrf	___lwdiv@counter
  3539  0F43  0AF7               	incf	___lwdiv@counter,f
  3540  0F44                     l2006:	
  3541  0F44  1BF1               	btfsc	___lwdiv@divisor+1,7
  3542  0F45  2F52               	goto	l2008
  3543  0F46  3001               	movlw	1
  3544  0F47                     u1305:	
  3545  0F47  1003               	clrc
  3546  0F48  0DF0               	rlf	___lwdiv@divisor,f
  3547  0F49  0DF1               	rlf	___lwdiv@divisor+1,f
  3548  0F4A  3EFF               	addlw	-1
  3549  0F4B  1D03               	skipz
  3550  0F4C  2F47               	goto	u1305
  3551  0F4D  3001               	movlw	1
  3552  0F4E  00F4               	movwf	??___lwdiv
  3553  0F4F  0874               	movf	??___lwdiv,w
  3554  0F50  07F7               	addwf	___lwdiv@counter,f
  3555  0F51  2F44               	goto	l2006
  3556  0F52                     l2008:	
  3557  0F52  3001               	movlw	1
  3558  0F53                     u1325:	
  3559  0F53  1003               	clrc
  3560  0F54  0DF5               	rlf	___lwdiv@quotient,f
  3561  0F55  0DF6               	rlf	___lwdiv@quotient+1,f
  3562  0F56  3EFF               	addlw	-1
  3563  0F57  1D03               	skipz
  3564  0F58  2F53               	goto	u1325
  3565  0F59  0871               	movf	___lwdiv@divisor+1,w
  3566  0F5A  0273               	subwf	___lwdiv@dividend+1,w
  3567  0F5B  1D03               	skipz
  3568  0F5C  2F5F               	goto	u1335
  3569  0F5D  0870               	movf	___lwdiv@divisor,w
  3570  0F5E  0272               	subwf	___lwdiv@dividend,w
  3571  0F5F                     u1335:	
  3572  0F5F  1C03               	skipc
  3573  0F60  2F68               	goto	l2014
  3574  0F61  0870               	movf	___lwdiv@divisor,w
  3575  0F62  02F2               	subwf	___lwdiv@dividend,f
  3576  0F63  0871               	movf	___lwdiv@divisor+1,w
  3577  0F64  1C03               	skipc
  3578  0F65  03F3               	decf	___lwdiv@dividend+1,f
  3579  0F66  02F3               	subwf	___lwdiv@dividend+1,f
  3580  0F67  1475               	bsf	___lwdiv@quotient,0
  3581  0F68                     l2014:	
  3582  0F68  3001               	movlw	1
  3583  0F69                     u1345:	
  3584  0F69  1003               	clrc
  3585  0F6A  0CF1               	rrf	___lwdiv@divisor+1,f
  3586  0F6B  0CF0               	rrf	___lwdiv@divisor,f
  3587  0F6C  3EFF               	addlw	-1
  3588  0F6D  1D03               	skipz
  3589  0F6E  2F69               	goto	u1345
  3590  0F6F  3001               	movlw	1
  3591  0F70  02F7               	subwf	___lwdiv@counter,f
  3592  0F71  1D03               	btfss	3,2
  3593  0F72  2F52               	goto	l2008
  3594  0F73                     l2018:	
  3595  0F73  0876               	movf	___lwdiv@quotient+1,w
  3596  0F74  01F1               	clrf	?___lwdiv+1
  3597  0F75  07F1               	addwf	?___lwdiv+1,f
  3598  0F76  0875               	movf	___lwdiv@quotient,w
  3599  0F77  01F0               	clrf	?___lwdiv
  3600  0F78  07F0               	addwf	?___lwdiv,f
  3601  0F79  0008               	return
  3602  0F7A                     __end_of___lwdiv:	
  3603                           
  3604                           	psect	text12
  3605  0319                     __ptext12:	
  3606 ;; *************** function _strtol *****************
  3607 ;; Defined at:
  3608 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strtol.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;  s               1    wreg     PTR const unsigned char 
  3611 ;;		 -> getRSSI@RSSInum(3), 
  3612 ;;  endptr          1    0[BANK0 ] PTR PTR unsigned char 
  3613 ;;		 -> NULL(0), 
  3614 ;;  base            2    1[BANK0 ] int 
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  3617 ;;		 -> getRSSI@RSSInum(3), 
  3618 ;;  a               4    9[BANK0 ] long 
  3619 ;;  c               1   14[BANK0 ] unsigned char 
  3620 ;;  sign            1    8[BANK0 ] unsigned char 
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  4    0[BANK0 ] long 
  3623 ;; Registers used:
  3624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3630 ;;      Params:         0       4       0       0       0
  3631 ;;      Locals:         0       7       0       0       0
  3632 ;;      Temps:          0       4       0       0       0
  3633 ;;      Totals:         0      15       0       0       0
  3634 ;;Total ram usage:       15 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; Hardware stack levels required when called:    2
  3637 ;; This function calls:
  3638 ;;		___lmul
  3639 ;;		_isspace
  3640 ;;		_isalpha
  3641 ;;		_toupper
  3642 ;;		_isdigit
  3643 ;; This function is called by:
  3644 ;;		_getRSSI
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           
  3649                           ;psect for function _strtol
  3650  0319                     _strtol:	
  3651                           
  3652                           ;incstack = 0
  3653                           ; Regs used in _strtol: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3654                           ;strtol@s stored from wreg
  3655  0319  1283               	bcf	3,5	;RP0=0, select bank0
  3656  031A  1303               	bcf	3,6	;RP1=0, select bank0
  3657  031B  00AD               	movwf	strtol@s
  3658  031C                     l721:	
  3659  031C  1283               	bcf	3,5	;RP0=0, select bank0
  3660  031D  1303               	bcf	3,6	;RP1=0, select bank0
  3661  031E  082D               	movf	strtol@s,w
  3662  031F  0084               	movwf	4
  3663  0320  1383               	bcf	3,7	;select IRP bank0
  3664  0321  0800               	movf	0,w
  3665  0322  00A4               	movwf	??_strtol
  3666  0323  0824               	movf	??_strtol,w
  3667  0324  00AE               	movwf	strtol@c
  3668  0325  3001               	movlw	1
  3669  0326  00A4               	movwf	??_strtol
  3670  0327  0824               	movf	??_strtol,w
  3671  0328  07AD               	addwf	strtol@s,f
  3672  0329  082E               	movf	strtol@c,w
  3673  032A  120A  158A  24C9   	fcall	_isspace
      +       120A  118A         
  3674  032F  1C03               	btfss	3,0
  3675  0330  2B34               	goto	l2226
  3676  0331  1283               	bcf	3,5	;RP0=0, select bank0
  3677  0332  1303               	bcf	3,6	;RP1=0, select bank0
  3678  0333  2B1C               	goto	l721
  3679  0334                     l2226:	
  3680  0334  3000               	movlw	0
  3681  0335  1283               	bcf	3,5	;RP0=0, select bank0
  3682  0336  1303               	bcf	3,6	;RP1=0, select bank0
  3683  0337  00AC               	movwf	strtol@a+3
  3684  0338  3000               	movlw	0
  3685  0339  00AB               	movwf	strtol@a+2
  3686  033A  3000               	movlw	0
  3687  033B  00AA               	movwf	strtol@a+1
  3688  033C  3000               	movlw	0
  3689  033D  00A9               	movwf	strtol@a
  3690  033E  01A8               	clrf	strtol@sign
  3691  033F  082E               	movf	strtol@c,w
  3692  0340  3A2D               	xorlw	45
  3693  0341  1D03               	skipz
  3694  0342  2B46               	goto	l2238
  3695  0343  01A8               	clrf	strtol@sign
  3696  0344  0AA8               	incf	strtol@sign,f
  3697  0345  2B4A               	goto	l2240
  3698  0346                     l2238:	
  3699  0346  082E               	movf	strtol@c,w
  3700  0347  3A2B               	xorlw	43
  3701  0348  1D03               	skipz
  3702  0349  2B55               	goto	l2244
  3703  034A                     l2240:	
  3704  034A  082D               	movf	strtol@s,w
  3705  034B  0084               	movwf	4
  3706  034C  1383               	bcf	3,7	;select IRP bank0
  3707  034D  0800               	movf	0,w
  3708  034E  00A4               	movwf	??_strtol
  3709  034F  0824               	movf	??_strtol,w
  3710  0350  00AE               	movwf	strtol@c
  3711  0351  3001               	movlw	1
  3712  0352  00A4               	movwf	??_strtol
  3713  0353  0824               	movf	??_strtol,w
  3714  0354  07AD               	addwf	strtol@s,f
  3715  0355                     l2244:	
  3716  0355  082E               	movf	strtol@c,w
  3717  0356  3A30               	xorlw	48
  3718  0357  1D03               	skipz
  3719  0358  2B8C               	goto	l2268
  3720  0359  082D               	movf	strtol@s,w
  3721  035A  0084               	movwf	4
  3722  035B  1383               	bcf	3,7	;select IRP bank0
  3723  035C  0800               	movf	0,w
  3724  035D  00A4               	movwf	??_strtol
  3725  035E  0824               	movf	??_strtol,w
  3726  035F  00AE               	movwf	strtol@c
  3727  0360  3001               	movlw	1
  3728  0361  00A4               	movwf	??_strtol
  3729  0362  0824               	movf	??_strtol,w
  3730  0363  07AD               	addwf	strtol@s,f
  3731  0364  0822               	movf	strtol@base+1,w
  3732  0365  0421               	iorwf	strtol@base,w
  3733  0366  1903               	skipnz
  3734  0367  2B6D               	goto	l2254
  3735  0368  3010               	movlw	16
  3736  0369  0621               	xorwf	strtol@base,w
  3737  036A  0422               	iorwf	strtol@base+1,w
  3738  036B  1D03               	skipz
  3739  036C  2B84               	goto	l2264
  3740  036D                     l2254:	
  3741  036D  082E               	movf	strtol@c,w
  3742  036E  3A78               	xorlw	120
  3743  036F  1903               	skipnz
  3744  0370  2B75               	goto	l2258
  3745  0371  082E               	movf	strtol@c,w
  3746  0372  3A58               	xorlw	88
  3747  0373  1D03               	skipz
  3748  0374  2B84               	goto	l2264
  3749  0375                     l2258:	
  3750  0375  3010               	movlw	16
  3751  0376  00A1               	movwf	strtol@base
  3752  0377  3000               	movlw	0
  3753  0378  00A2               	movwf	strtol@base+1
  3754  0379  082D               	movf	strtol@s,w
  3755  037A  0084               	movwf	4
  3756  037B  0800               	movf	0,w
  3757  037C  00A4               	movwf	??_strtol
  3758  037D  0824               	movf	??_strtol,w
  3759  037E  00AE               	movwf	strtol@c
  3760  037F  3001               	movlw	1
  3761  0380  00A4               	movwf	??_strtol
  3762  0381  0824               	movf	??_strtol,w
  3763  0382  07AD               	addwf	strtol@s,f
  3764  0383  2B8C               	goto	l2268
  3765  0384                     l2264:	
  3766  0384  0822               	movf	strtol@base+1,w
  3767  0385  0421               	iorwf	strtol@base,w
  3768  0386  1D03               	skipz
  3769  0387  2B8C               	goto	l2268
  3770  0388  3008               	movlw	8
  3771  0389  00A1               	movwf	strtol@base
  3772  038A  3000               	movlw	0
  3773  038B  00A2               	movwf	strtol@base+1
  3774  038C                     l2268:	
  3775  038C  0822               	movf	strtol@base+1,w
  3776  038D  0421               	iorwf	strtol@base,w
  3777  038E  1D03               	skipz
  3778  038F  2B94               	goto	l2272
  3779  0390  300A               	movlw	10
  3780  0391  00A1               	movwf	strtol@base
  3781  0392  3000               	movlw	0
  3782  0393  00A2               	movwf	strtol@base+1
  3783  0394                     l2272:	
  3784  0394  082E               	movf	strtol@c,w
  3785  0395  120A  158A  24DB   	fcall	_isalpha
      +       120A  118A         
  3786  039A  1C03               	btfss	3,0
  3787  039B  2BAB               	goto	l2276
  3788  039C  1283               	bcf	3,5	;RP0=0, select bank0
  3789  039D  1303               	bcf	3,6	;RP1=0, select bank0
  3790  039E  082E               	movf	strtol@c,w
  3791  039F  120A  158A  24BA   	fcall	_toupper
      +       120A  118A         
  3792  03A4  3EC9               	addlw	201
  3793  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  3794  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  3795  03A7  00A4               	movwf	??_strtol
  3796  03A8  0824               	movf	??_strtol,w
  3797  03A9  00AE               	movwf	strtol@c
  3798  03AA  2BB9               	goto	l2280
  3799  03AB                     l2276:	
  3800  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  3801  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  3802  03AD  082E               	movf	strtol@c,w
  3803  03AE  120A  158A  248E   	fcall	_isdigit
      +       120A  118A         
  3804  03B3  1C03               	btfss	3,0
  3805  03B4  2C07               	goto	l2290
  3806  03B5  3030               	movlw	48
  3807  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  3808  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  3809  03B8  02AE               	subwf	strtol@c,f
  3810  03B9                     l2280:	
  3811  03B9  0822               	movf	strtol@base+1,w
  3812  03BA  3A80               	xorlw	128
  3813  03BB  3C80               	sublw	128
  3814  03BC  1D03               	skipz
  3815  03BD  2BC0               	goto	u1735
  3816  03BE  0821               	movf	strtol@base,w
  3817  03BF  022E               	subwf	strtol@c,w
  3818  03C0                     u1735:	
  3819  03C0  1803               	btfsc	3,0
  3820  03C1  2C07               	goto	l2290
  3821  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  3822  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  3823  03C4  082E               	movf	strtol@c,w
  3824  03C5  00A4               	movwf	??_strtol
  3825  03C6  01A5               	clrf	??_strtol+1
  3826  03C7  01A6               	clrf	??_strtol+2
  3827  03C8  01A7               	clrf	??_strtol+3
  3828  03C9  0821               	movf	strtol@base,w
  3829  03CA  00F0               	movwf	?___lmul
  3830  03CB  0822               	movf	strtol@base+1,w
  3831  03CC  00F1               	movwf	?___lmul+1
  3832  03CD  3000               	movlw	0
  3833  03CE  1BF1               	btfsc	?___lmul+1,7
  3834  03CF  30FF               	movlw	255
  3835  03D0  00F2               	movwf	?___lmul+2
  3836  03D1  00F3               	movwf	?___lmul+3
  3837  03D2  082C               	movf	strtol@a+3,w
  3838  03D3  00F7               	movwf	?___lmul+7
  3839  03D4  082B               	movf	strtol@a+2,w
  3840  03D5  00F6               	movwf	?___lmul+6
  3841  03D6  082A               	movf	strtol@a+1,w
  3842  03D7  00F5               	movwf	?___lmul+5
  3843  03D8  0829               	movf	strtol@a,w
  3844  03D9  00F4               	movwf	?___lmul+4
  3845  03DA  120A  158A  277A   	fcall	___lmul
      +       120A  118A         
  3846  03DF  0870               	movf	?___lmul,w
  3847  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  3848  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  3849  03E2  07A4               	addwf	??_strtol,f
  3850  03E3  0871               	movf	?___lmul+1,w
  3851  03E4  1803               	skipnc
  3852  03E5  0F71               	incfsz	?___lmul+1,w
  3853  03E6  2BE8               	goto	u1740
  3854  03E7  2BE9               	goto	u1741
  3855  03E8                     u1740:	
  3856  03E8  07A5               	addwf	??_strtol+1,f
  3857  03E9                     u1741:	
  3858  03E9  0872               	movf	?___lmul+2,w
  3859  03EA  1803               	skipnc
  3860  03EB  0F72               	incfsz	?___lmul+2,w
  3861  03EC  2BEE               	goto	u1742
  3862  03ED  2BEF               	goto	u1743
  3863  03EE                     u1742:	
  3864  03EE  07A6               	addwf	??_strtol+2,f
  3865  03EF                     u1743:	
  3866  03EF  0873               	movf	?___lmul+3,w
  3867  03F0  1803               	skipnc
  3868  03F1  0A73               	incf	?___lmul+3,w
  3869  03F2  07A7               	addwf	??_strtol+3,f
  3870  03F3  0827               	movf	??_strtol+3,w
  3871  03F4  00AC               	movwf	strtol@a+3
  3872  03F5  0826               	movf	??_strtol+2,w
  3873  03F6  00AB               	movwf	strtol@a+2
  3874  03F7  0825               	movf	??_strtol+1,w
  3875  03F8  00AA               	movwf	strtol@a+1
  3876  03F9  0824               	movf	??_strtol,w
  3877  03FA  00A9               	movwf	strtol@a
  3878  03FB  082D               	movf	strtol@s,w
  3879  03FC  0084               	movwf	4
  3880  03FD  1383               	bcf	3,7	;select IRP bank0
  3881  03FE  0800               	movf	0,w
  3882  03FF  00A4               	movwf	??_strtol
  3883  0400  0824               	movf	??_strtol,w
  3884  0401  00AE               	movwf	strtol@c
  3885  0402  3001               	movlw	1
  3886  0403  00A4               	movwf	??_strtol
  3887  0404  0824               	movf	??_strtol,w
  3888  0405  07AD               	addwf	strtol@s,f
  3889  0406  2B94               	goto	l2272
  3890  0407                     l2290:	
  3891  0407  1283               	bcf	3,5	;RP0=0, select bank0
  3892  0408  1303               	bcf	3,6	;RP1=0, select bank0
  3893  0409  0820               	movf	strtol@endptr,w
  3894  040A  1903               	btfsc	3,2
  3895  040B  2C13               	goto	l2294
  3896  040C  032D               	decf	strtol@s,w
  3897  040D  00A4               	movwf	??_strtol
  3898  040E  0820               	movf	strtol@endptr,w
  3899  040F  0084               	movwf	4
  3900  0410  0824               	movf	??_strtol,w
  3901  0411  1383               	bcf	3,7	;select IRP bank0
  3902  0412  0080               	movwf	0
  3903  0413                     l2294:	
  3904  0413  0828               	movf	strtol@sign,w
  3905  0414  1903               	btfsc	3,2
  3906  0415  2C26               	goto	l2300
  3907  0416  0929               	comf	strtol@a,w
  3908  0417  00A0               	movwf	?_strtol
  3909  0418  092A               	comf	strtol@a+1,w
  3910  0419  00A1               	movwf	?_strtol+1
  3911  041A  092B               	comf	strtol@a+2,w
  3912  041B  00A2               	movwf	?_strtol+2
  3913  041C  092C               	comf	strtol@a+3,w
  3914  041D  00A3               	movwf	?_strtol+3
  3915  041E  0AA0               	incf	?_strtol,f
  3916  041F  1903               	skipnz
  3917  0420  0AA1               	incf	?_strtol+1,f
  3918  0421  1903               	skipnz
  3919  0422  0AA2               	incf	?_strtol+2,f
  3920  0423  1903               	skipnz
  3921  0424  0AA3               	incf	?_strtol+3,f
  3922  0425  0008               	return
  3923  0426                     l2300:	
  3924  0426  082C               	movf	strtol@a+3,w
  3925  0427  00A3               	movwf	?_strtol+3
  3926  0428  082B               	movf	strtol@a+2,w
  3927  0429  00A2               	movwf	?_strtol+2
  3928  042A  082A               	movf	strtol@a+1,w
  3929  042B  00A1               	movwf	?_strtol+1
  3930  042C  0829               	movf	strtol@a,w
  3931  042D  00A0               	movwf	?_strtol
  3932  042E  0008               	return
  3933  042F                     __end_of_strtol:	
  3934                           
  3935                           	psect	text13
  3936  0C8E                     __ptext13:	
  3937 ;; *************** function _isdigit *****************
  3938 ;; Defined at:
  3939 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\isdigit.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;  c               1    wreg     unsigned char 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;  c               1    1[COMMON] unsigned char 
  3944 ;; Return value:  Size  Location     Type
  3945 ;;		None               void
  3946 ;; Registers used:
  3947 ;;		wreg, status,2, status,0
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3953 ;;      Params:         0       0       0       0       0
  3954 ;;      Locals:         2       0       0       0       0
  3955 ;;      Temps:          0       0       0       0       0
  3956 ;;      Totals:         2       0       0       0       0
  3957 ;;Total ram usage:        2 bytes
  3958 ;; Hardware stack levels used:    1
  3959 ;; This function calls:
  3960 ;;		Nothing
  3961 ;; This function is called by:
  3962 ;;		_strtol
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           
  3967                           ;psect for function _isdigit
  3968  0C8E                     _isdigit:	
  3969                           
  3970                           ;incstack = 0
  3971                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3972                           ;isdigit@c stored from wreg
  3973  0C8E  00F1               	movwf	isdigit@c
  3974  0C8F  01F0               	clrf	_isdigit$506
  3975  0C90  303A               	movlw	58
  3976  0C91  0271               	subwf	isdigit@c,w
  3977  0C92  1803               	skipnc
  3978  0C93  2C9A               	goto	l2054
  3979  0C94  3030               	movlw	48
  3980  0C95  0271               	subwf	isdigit@c,w
  3981  0C96  1C03               	skipc
  3982  0C97  2C9A               	goto	l2054
  3983  0C98  01F0               	clrf	_isdigit$506
  3984  0C99  0AF0               	incf	_isdigit$506,f
  3985  0C9A                     l2054:	
  3986  0C9A  0C70               	rrf	_isdigit$506,w
  3987  0C9B  0008               	return
  3988  0C9C                     __end_of_isdigit:	
  3989                           
  3990                           	psect	text14
  3991  0CBA                     __ptext14:	
  3992 ;; *************** function _toupper *****************
  3993 ;; Defined at:
  3994 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\toupper.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  c               1    wreg     unsigned char 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  c               1    1[COMMON] unsigned char 
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  1    wreg      unsigned char 
  4001 ;; Registers used:
  4002 ;;		wreg, status,2, status,0
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4008 ;;      Params:         0       0       0       0       0
  4009 ;;      Locals:         1       0       0       0       0
  4010 ;;      Temps:          1       0       0       0       0
  4011 ;;      Totals:         2       0       0       0       0
  4012 ;;Total ram usage:        2 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; This function calls:
  4015 ;;		Nothing
  4016 ;; This function is called by:
  4017 ;;		_strtol
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           
  4022                           ;psect for function _toupper
  4023  0CBA                     _toupper:	
  4024                           
  4025                           ;incstack = 0
  4026                           ; Regs used in _toupper: [wreg+status,2+status,0]
  4027                           ;toupper@c stored from wreg
  4028  0CBA  00F1               	movwf	toupper@c
  4029  0CBB  307B               	movlw	123
  4030  0CBC  0271               	subwf	toupper@c,w
  4031  0CBD  1803               	skipnc
  4032  0CBE  2CC7               	goto	l2042
  4033  0CBF  3061               	movlw	97
  4034  0CC0  0271               	subwf	toupper@c,w
  4035  0CC1  1C03               	skipc
  4036  0CC2  2CC7               	goto	l2042
  4037  0CC3  30DF               	movlw	223
  4038  0CC4  00F0               	movwf	??_toupper
  4039  0CC5  0870               	movf	??_toupper,w
  4040  0CC6  05F1               	andwf	toupper@c,f
  4041  0CC7                     l2042:	
  4042  0CC7  0871               	movf	toupper@c,w
  4043  0CC8  0008               	return
  4044  0CC9                     __end_of_toupper:	
  4045                           
  4046                           	psect	text15
  4047  0CDB                     __ptext15:	
  4048 ;; *************** function _isalpha *****************
  4049 ;; Defined at:
  4050 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\isalpha.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;  c               1    wreg     unsigned char 
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;  c               1    3[COMMON] unsigned char 
  4055 ;; Return value:  Size  Location     Type
  4056 ;;		None               void
  4057 ;; Registers used:
  4058 ;;		wreg, status,2, status,0, pclath, cstack
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4064 ;;      Params:         0       0       0       0       0
  4065 ;;      Locals:         2       0       0       0       0
  4066 ;;      Temps:          0       0       0       0       0
  4067 ;;      Totals:         2       0       0       0       0
  4068 ;;Total ram usage:        2 bytes
  4069 ;; Hardware stack levels used:    1
  4070 ;; Hardware stack levels required when called:    1
  4071 ;; This function calls:
  4072 ;;		_isupper
  4073 ;; This function is called by:
  4074 ;;		_strtol
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078                           
  4079                           ;psect for function _isalpha
  4080  0CDB                     _isalpha:	
  4081                           
  4082                           ;incstack = 0
  4083                           ; Regs used in _isalpha: [wreg+status,2+status,0+pclath+cstack]
  4084                           ;isalpha@c stored from wreg
  4085  0CDB  00F3               	movwf	isalpha@c
  4086  0CDC  01F2               	clrf	_isalpha$503
  4087  0CDD  0AF2               	incf	_isalpha$503,f
  4088  0CDE  307B               	movlw	123
  4089  0CDF  0273               	subwf	isalpha@c,w
  4090  0CE0  1803               	skipnc
  4091  0CE1  2CE6               	goto	l2176
  4092  0CE2  3061               	movlw	97
  4093  0CE3  0273               	subwf	isalpha@c,w
  4094  0CE4  1803               	skipnc
  4095  0CE5  2CEC               	goto	l2180
  4096  0CE6                     l2176:	
  4097  0CE6  0873               	movf	isalpha@c,w
  4098  0CE7  120A  158A  2480   	fcall	_isupper
  4099  0CEA  1C03               	btfss	3,0
  4100  0CEB  01F2               	clrf	_isalpha$503
  4101  0CEC                     l2180:	
  4102  0CEC  0C72               	rrf	_isalpha$503,w
  4103  0CED  0008               	return
  4104  0CEE                     __end_of_isalpha:	
  4105                           
  4106                           	psect	text16
  4107  0C80                     __ptext16:	
  4108 ;; *************** function _isupper *****************
  4109 ;; Defined at:
  4110 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\isupper.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;  c               1    wreg     unsigned char 
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;  c               1    1[COMMON] unsigned char 
  4115 ;; Return value:  Size  Location     Type
  4116 ;;		None               void
  4117 ;; Registers used:
  4118 ;;		wreg, status,2, status,0
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4124 ;;      Params:         0       0       0       0       0
  4125 ;;      Locals:         2       0       0       0       0
  4126 ;;      Temps:          0       0       0       0       0
  4127 ;;      Totals:         2       0       0       0       0
  4128 ;;Total ram usage:        2 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; This function calls:
  4131 ;;		Nothing
  4132 ;; This function is called by:
  4133 ;;		_isalpha
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           
  4138                           ;psect for function _isupper
  4139  0C80                     _isupper:	
  4140                           
  4141                           ;incstack = 0
  4142                           ; Regs used in _isupper: [wreg+status,2+status,0]
  4143                           ;isupper@c stored from wreg
  4144  0C80  00F1               	movwf	isupper@c
  4145  0C81  01F0               	clrf	_isupper$512
  4146  0C82  305B               	movlw	91
  4147  0C83  0271               	subwf	isupper@c,w
  4148  0C84  1803               	skipnc
  4149  0C85  2C8C               	goto	l2066
  4150  0C86  3041               	movlw	65
  4151  0C87  0271               	subwf	isupper@c,w
  4152  0C88  1C03               	skipc
  4153  0C89  2C8C               	goto	l2066
  4154  0C8A  01F0               	clrf	_isupper$512
  4155  0C8B  0AF0               	incf	_isupper$512,f
  4156  0C8C                     l2066:	
  4157  0C8C  0C70               	rrf	_isupper$512,w
  4158  0C8D  0008               	return
  4159  0C8E                     __end_of_isupper:	
  4160                           
  4161                           	psect	text17
  4162  0CC9                     __ptext17:	
  4163 ;; *************** function _isspace *****************
  4164 ;; Defined at:
  4165 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\isspace.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;  c               1    wreg     unsigned char 
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;  c               1    1[COMMON] unsigned char 
  4170 ;; Return value:  Size  Location     Type
  4171 ;;		None               void
  4172 ;; Registers used:
  4173 ;;		wreg, status,2, status,0
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4179 ;;      Params:         0       0       0       0       0
  4180 ;;      Locals:         2       0       0       0       0
  4181 ;;      Temps:          0       0       0       0       0
  4182 ;;      Totals:         2       0       0       0       0
  4183 ;;Total ram usage:        2 bytes
  4184 ;; Hardware stack levels used:    1
  4185 ;; This function calls:
  4186 ;;		Nothing
  4187 ;; This function is called by:
  4188 ;;		_strtol
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           
  4193                           ;psect for function _isspace
  4194  0CC9                     _isspace:	
  4195                           
  4196                           ;incstack = 0
  4197                           ; Regs used in _isspace: [wreg+status,2+status,0]
  4198                           ;isspace@c stored from wreg
  4199  0CC9  00F1               	movwf	isspace@c
  4200  0CCA  01F0               	clrf	_isspace$509
  4201  0CCB  0AF0               	incf	_isspace$509,f
  4202  0CCC  0871               	movf	isspace@c,w
  4203  0CCD  3A20               	xorlw	32
  4204  0CCE  1903               	skipnz
  4205  0CCF  2CD9               	goto	l2032
  4206  0CD0  300E               	movlw	14
  4207  0CD1  0271               	subwf	isspace@c,w
  4208  0CD2  1803               	skipnc
  4209  0CD3  2CD8               	goto	l2030
  4210  0CD4  3009               	movlw	9
  4211  0CD5  0271               	subwf	isspace@c,w
  4212  0CD6  1803               	skipnc
  4213  0CD7  2CD9               	goto	l2032
  4214  0CD8                     l2030:	
  4215  0CD8  01F0               	clrf	_isspace$509
  4216  0CD9                     l2032:	
  4217  0CD9  0C70               	rrf	_isspace$509,w
  4218  0CDA  0008               	return
  4219  0CDB                     __end_of_isspace:	
  4220                           
  4221                           	psect	text18
  4222  0F7A                     __ptext18:	
  4223 ;; *************** function ___lmul *****************
  4224 ;; Defined at:
  4225 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\lmul.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;  multiplier      4    0[COMMON] unsigned long 
  4228 ;;  multiplicand    4    4[COMMON] unsigned long 
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;  product         4    9[COMMON] unsigned long 
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  4    0[COMMON] unsigned long 
  4233 ;; Registers used:
  4234 ;;		wreg, status,2, status,0
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4240 ;;      Params:         8       0       0       0       0
  4241 ;;      Locals:         4       0       0       0       0
  4242 ;;      Temps:          1       0       0       0       0
  4243 ;;      Totals:        13       0       0       0       0
  4244 ;;Total ram usage:       13 bytes
  4245 ;; Hardware stack levels used:    1
  4246 ;; This function calls:
  4247 ;;		Nothing
  4248 ;; This function is called by:
  4249 ;;		_strtol
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           
  4253                           
  4254                           ;psect for function ___lmul
  4255  0F7A                     ___lmul:	
  4256                           
  4257                           ;incstack = 0
  4258                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4259  0F7A  3000               	movlw	0
  4260  0F7B  00FC               	movwf	___lmul@product+3
  4261  0F7C  3000               	movlw	0
  4262  0F7D  00FB               	movwf	___lmul@product+2
  4263  0F7E  3000               	movlw	0
  4264  0F7F  00FA               	movwf	___lmul@product+1
  4265  0F80  3000               	movlw	0
  4266  0F81  00F9               	movwf	___lmul@product
  4267  0F82                     l1984:	
  4268  0F82  1C70               	btfss	___lmul@multiplier,0
  4269  0F83  2F98               	goto	l1988
  4270  0F84  0874               	movf	___lmul@multiplicand,w
  4271  0F85  07F9               	addwf	___lmul@product,f
  4272  0F86  0875               	movf	___lmul@multiplicand+1,w
  4273  0F87  1103               	clrz
  4274  0F88  1803               	skipnc
  4275  0F89  3E01               	addlw	1
  4276  0F8A  1D03               	btfss	3,2
  4277  0F8B  07FA               	addwf	___lmul@product+1,f
  4278  0F8C  0876               	movf	___lmul@multiplicand+2,w
  4279  0F8D  1103               	clrz
  4280  0F8E  1803               	skipnc
  4281  0F8F  3E01               	addlw	1
  4282  0F90  1D03               	btfss	3,2
  4283  0F91  07FB               	addwf	___lmul@product+2,f
  4284  0F92  0877               	movf	___lmul@multiplicand+3,w
  4285  0F93  1103               	clrz
  4286  0F94  1803               	skipnc
  4287  0F95  3E01               	addlw	1
  4288  0F96  1D03               	btfss	3,2
  4289  0F97  07FC               	addwf	___lmul@product+3,f
  4290  0F98                     l1988:	
  4291  0F98  3001               	movlw	1
  4292  0F99  00F8               	movwf	??___lmul
  4293  0F9A                     u1265:	
  4294  0F9A  1003               	clrc
  4295  0F9B  0DF4               	rlf	___lmul@multiplicand,f
  4296  0F9C  0DF5               	rlf	___lmul@multiplicand+1,f
  4297  0F9D  0DF6               	rlf	___lmul@multiplicand+2,f
  4298  0F9E  0DF7               	rlf	___lmul@multiplicand+3,f
  4299  0F9F  0BF8               	decfsz	??___lmul,f
  4300  0FA0  2F9A               	goto	u1265
  4301  0FA1  3001               	movlw	1
  4302  0FA2                     u1275:	
  4303  0FA2  1003               	clrc
  4304  0FA3  0CF3               	rrf	___lmul@multiplier+3,f
  4305  0FA4  0CF2               	rrf	___lmul@multiplier+2,f
  4306  0FA5  0CF1               	rrf	___lmul@multiplier+1,f
  4307  0FA6  0CF0               	rrf	___lmul@multiplier,f
  4308  0FA7  3EFF               	addlw	-1
  4309  0FA8  1D03               	skipz
  4310  0FA9  2FA2               	goto	u1275
  4311  0FAA  0873               	movf	___lmul@multiplier+3,w
  4312  0FAB  0472               	iorwf	___lmul@multiplier+2,w
  4313  0FAC  0471               	iorwf	___lmul@multiplier+1,w
  4314  0FAD  0470               	iorwf	___lmul@multiplier,w
  4315  0FAE  1D03               	skipz
  4316  0FAF  2F82               	goto	l1984
  4317  0FB0  087C               	movf	___lmul@product+3,w
  4318  0FB1  00F3               	movwf	?___lmul+3
  4319  0FB2  087B               	movf	___lmul@product+2,w
  4320  0FB3  00F2               	movwf	?___lmul+2
  4321  0FB4  087A               	movf	___lmul@product+1,w
  4322  0FB5  00F1               	movwf	?___lmul+1
  4323  0FB6  0879               	movf	___lmul@product,w
  4324  0FB7  00F0               	movwf	?___lmul
  4325  0FB8  0008               	return
  4326  0FB9                     __end_of___lmul:	
  4327                           
  4328                           	psect	text19
  4329  0CAB                     __ptext19:	
  4330 ;; *************** function _flush_RCREG *****************
  4331 ;; Defined at:
  4332 ;;		line 181 in file "..\Header Files\..\C Source Code\USART_16F_MASTER.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;		None
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;		None
  4337 ;; Return value:  Size  Location     Type
  4338 ;;		None               void
  4339 ;; Registers used:
  4340 ;;		wreg
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4346 ;;      Params:         0       0       0       0       0
  4347 ;;      Locals:         0       0       0       0       0
  4348 ;;      Temps:          1       0       0       0       0
  4349 ;;      Totals:         1       0       0       0       0
  4350 ;;Total ram usage:        1 bytes
  4351 ;; Hardware stack levels used:    1
  4352 ;; This function calls:
  4353 ;;		Nothing
  4354 ;; This function is called by:
  4355 ;;		_getRSSI
  4356 ;;		_getIdentification
  4357 ;;		_setDestination
  4358 ;;		_enterCommandMode
  4359 ;;		_exitCommandMode
  4360 ;;		_main
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           
  4365                           ;psect for function _flush_RCREG
  4366  0CAB                     _flush_RCREG:	
  4367                           
  4368                           ;USART_16F_MASTER.c: 183: dummy=RCREG;
  4369                           
  4370                           ;incstack = 0
  4371                           ; Regs used in _flush_RCREG: [wreg]
  4372  0CAB  1283               	bcf	3,5	;RP0=0, select bank0
  4373  0CAC  1303               	bcf	3,6	;RP1=0, select bank0
  4374  0CAD  081A               	movf	26,w	;volatile
  4375  0CAE  00F0               	movwf	??_flush_RCREG
  4376  0CAF  0870               	movf	??_flush_RCREG,w
  4377  0CB0  00CF               	movwf	_dummy
  4378                           
  4379                           ;USART_16F_MASTER.c: 184: dummy=RCREG;
  4380  0CB1  081A               	movf	26,w	;volatile
  4381  0CB2  00F0               	movwf	??_flush_RCREG
  4382  0CB3  0870               	movf	??_flush_RCREG,w
  4383  0CB4  00CF               	movwf	_dummy
  4384                           
  4385                           ;USART_16F_MASTER.c: 185: dummy=RCREG;
  4386  0CB5  081A               	movf	26,w	;volatile
  4387  0CB6  00F0               	movwf	??_flush_RCREG
  4388  0CB7  0870               	movf	??_flush_RCREG,w
  4389  0CB8  00CF               	movwf	_dummy
  4390  0CB9  0008               	return
  4391  0CBA                     __end_of_flush_RCREG:	
  4392                           
  4393                           	psect	text20
  4394  0E31                     __ptext20:	
  4395 ;; *************** function _send_USART_string *****************
  4396 ;; Defined at:
  4397 ;;		line 151 in file "..\Header Files\..\C Source Code\USART_16F_MASTER.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;  string          2    6[COMMON] PTR const unsigned char 
  4400 ;;		 -> STR_16(8), STR_15(10), STR_14(10), STR_13(15), 
  4401 ;;		 -> main@percentage(7), main@dBm(7), main@RSSI(5), main@mobile(17), 
  4402 ;;		 -> main@broadcastNumber(4), main@sensor(18), STR_10(6), STR_9(4), 
  4403 ;;		 -> STR_8(2), setDestination@subbuff2(9), STR_7(5), STR_6(2), 
  4404 ;;		 -> setDestination@subbuff(9), STR_5(5), STR_4(6), STR_3(6), 
  4405 ;;		 -> STR_1(6), 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;  iter            1   10[COMMON] unsigned char 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;		None               void
  4410 ;; Registers used:
  4411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4417 ;;      Params:         2       0       0       0       0
  4418 ;;      Locals:         1       0       0       0       0
  4419 ;;      Temps:          2       0       0       0       0
  4420 ;;      Totals:         5       0       0       0       0
  4421 ;;Total ram usage:        5 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:    2
  4424 ;; This function calls:
  4425 ;;		_strlen
  4426 ;;		_send_USART_char
  4427 ;; This function is called by:
  4428 ;;		_getRSSI
  4429 ;;		_getIdentification
  4430 ;;		_setDestination
  4431 ;;		_enterCommandMode
  4432 ;;		_exitCommandMode
  4433 ;;		_main
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           
  4438                           ;psect for function _send_USART_string
  4439  0E31                     _send_USART_string:	
  4440                           
  4441                           ;USART_16F_MASTER.c: 152: for(unsigned char iter = 0 ; iter < strlen(string) ; iter++)
  4442                           
  4443                           ;incstack = 0
  4444                           ; Regs used in _send_USART_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4445  0E31  01FA               	clrf	send_USART_string@iter
  4446  0E32                     l2218:	
  4447  0E32  0877               	movf	send_USART_string@string+1,w
  4448  0E33  01F1               	clrf	?_strlen+1
  4449  0E34  07F1               	addwf	?_strlen+1,f
  4450  0E35  0876               	movf	send_USART_string@string,w
  4451  0E36  01F0               	clrf	?_strlen
  4452  0E37  07F0               	addwf	?_strlen,f
  4453  0E38  120A  158A  25AD   	fcall	_strlen
      +       120A  158A         
  4454  0E3D  087A               	movf	send_USART_string@iter,w
  4455  0E3E  00F8               	movwf	??_send_USART_string
  4456  0E3F  01F9               	clrf	??_send_USART_string+1
  4457  0E40  0871               	movf	?_strlen+1,w
  4458  0E41  0279               	subwf	??_send_USART_string+1,w
  4459  0E42  1D03               	skipz
  4460  0E43  2E46               	goto	u1605
  4461  0E44  0870               	movf	?_strlen,w
  4462  0E45  0278               	subwf	??_send_USART_string,w
  4463  0E46                     u1605:	
  4464  0E46  1803               	btfsc	3,0
  4465  0E47  0008               	return
  4466                           
  4467                           ;USART_16F_MASTER.c: 153: {send_USART_char(string[iter]);}
  4468  0E48  087A               	movf	send_USART_string@iter,w
  4469  0E49  0776               	addwf	send_USART_string@string,w
  4470  0E4A  0084               	movwf	4
  4471  0E4B  0877               	movf	send_USART_string@string+1,w
  4472  0E4C  1803               	skipnc
  4473  0E4D  0A77               	incf	send_USART_string@string+1,w
  4474  0E4E  1283               	bcf	3,5	;RP0=0, select bank0
  4475  0E4F  1303               	bcf	3,6	;RP1=0, select bank0
  4476  0E50  00FF               	movwf	127
  4477  0E51  120A  118A  2003   	fcall	stringtab
      +       120A  158A         
  4478  0E56  120A  158A  24EE   	fcall	_send_USART_char
      +       120A  158A         
  4479  0E5B  3001               	movlw	1
  4480  0E5C  00F8               	movwf	??_send_USART_string
  4481  0E5D  0878               	movf	??_send_USART_string,w
  4482  0E5E  07FA               	addwf	send_USART_string@iter,f
  4483  0E5F  2E32               	goto	l2218
  4484  0E60                     __end_of_send_USART_string:	
  4485                           
  4486                           	psect	text21
  4487  0CEE                     __ptext21:	
  4488 ;; *************** function _send_USART_char *****************
  4489 ;; Defined at:
  4490 ;;		line 141 in file "..\Header Files\..\C Source Code\USART_16F_MASTER.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;  character       1    wreg     unsigned char 
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;  character       1    2[COMMON] unsigned char 
  4495 ;; Return value:  Size  Location     Type
  4496 ;;		None               void
  4497 ;; Registers used:
  4498 ;;		wreg, status,2, status,0, pclath, cstack
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4504 ;;      Params:         0       0       0       0       0
  4505 ;;      Locals:         1       0       0       0       0
  4506 ;;      Temps:          1       0       0       0       0
  4507 ;;      Totals:         2       0       0       0       0
  4508 ;;Total ram usage:        2 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; Hardware stack levels required when called:    1
  4511 ;; This function calls:
  4512 ;;		_clear_usart_errors
  4513 ;; This function is called by:
  4514 ;;		_send_USART_string
  4515 ;;		_main
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           
  4520                           ;psect for function _send_USART_char
  4521  0CEE                     _send_USART_char:	
  4522                           
  4523                           ;incstack = 0
  4524                           ; Regs used in _send_USART_char: [wreg+status,2+status,0+pclath+cstack]
  4525                           ;send_USART_char@character stored from wreg
  4526  0CEE  00F2               	movwf	send_USART_char@character
  4527  0CEF                     l155:	
  4528                           ;USART_16F_MASTER.c: 142: do
  4529                           
  4530                           
  4531                           ;USART_16F_MASTER.c: 143: {clear_usart_errors();}
  4532  0CEF  120A  158A  2502   	fcall	_clear_usart_errors
      +       120A  158A         
  4533                           
  4534                           ;USART_16F_MASTER.c: 144: while(TXIF == 0);
  4535  0CF4  1283               	bcf	3,5	;RP0=0, select bank0
  4536  0CF5  1303               	bcf	3,6	;RP1=0, select bank0
  4537  0CF6  1E0C               	btfss	12,4	;volatile
  4538  0CF7  2CEF               	goto	l155
  4539                           
  4540                           ;USART_16F_MASTER.c: 146: TXREG = character;
  4541  0CF8  0872               	movf	send_USART_char@character,w
  4542  0CF9  0099               	movwf	25	;volatile
  4543                           
  4544                           ;USART_16F_MASTER.c: 147: _delay((unsigned long)((1)*(4000000/4000.0)));
  4545  0CFA  30F9               	movlw	249
  4546  0CFB  00F1               	movwf	??_send_USART_char
  4547  0CFC                     u2407:	
  4548  0CFC  0000               	nop
  4549  0CFD  0BF1               	decfsz	??_send_USART_char,f
  4550  0CFE  2CFC               	goto	u2407
  4551  0CFF  2D00               	nop2	;nop
  4552  0D00  0000               	nop
  4553  0D01  0008               	return
  4554  0D02                     __end_of_send_USART_char:	
  4555                           
  4556                           	psect	text22
  4557  0C75                     __ptext22:	
  4558 ;; *************** function _get_USART_char *****************
  4559 ;; Defined at:
  4560 ;;		line 115 in file "..\Header Files\..\C Source Code\USART_16F_MASTER.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;		None
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;		None
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      unsigned char 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0, pclath, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4574 ;;      Params:         0       0       0       0       0
  4575 ;;      Locals:         0       0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0
  4577 ;;      Totals:         0       0       0       0       0
  4578 ;;Total ram usage:        0 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    1
  4581 ;; This function calls:
  4582 ;;		_clear_usart_errors
  4583 ;; This function is called by:
  4584 ;;		_getRSSI
  4585 ;;		_setDestination
  4586 ;;		_enterCommandMode
  4587 ;;		_exitCommandMode
  4588 ;;		_main
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           
  4593                           ;psect for function _get_USART_char
  4594  0C75                     _get_USART_char:	
  4595  0C75                     l144:	
  4596                           ;incstack = 0
  4597                           ; Regs used in _get_USART_char: [wreg+status,2+status,0+pclath+cstack]
  4598                           ;USART_16F_MASTER.c: 116: do
  4599                           
  4600                           
  4601                           ;USART_16F_MASTER.c: 117: {clear_usart_errors();}
  4602  0C75  120A  158A  2502   	fcall	_clear_usart_errors
      +       120A  158A         
  4603                           
  4604                           ;USART_16F_MASTER.c: 118: while(RCIF == 0);
  4605  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  4606  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  4607  0C7C  1E8C               	btfss	12,5	;volatile
  4608  0C7D  2C75               	goto	l144
  4609                           
  4610                           ;USART_16F_MASTER.c: 120: return RCREG;
  4611  0C7E  081A               	movf	26,w	;volatile
  4612  0C7F  0008               	return
  4613  0C80                     __end_of_get_USART_char:	
  4614                           
  4615                           	psect	text23
  4616  0D02                     __ptext23:	
  4617 ;; *************** function _clear_usart_errors *****************
  4618 ;; Defined at:
  4619 ;;		line 161 in file "..\Header Files\..\C Source Code\USART_16F_MASTER.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;		None
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;		None
  4624 ;; Return value:  Size  Location     Type
  4625 ;;		None               void
  4626 ;; Registers used:
  4627 ;;		wreg
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4633 ;;      Params:         0       0       0       0       0
  4634 ;;      Locals:         0       0       0       0       0
  4635 ;;      Temps:          1       0       0       0       0
  4636 ;;      Totals:         1       0       0       0       0
  4637 ;;Total ram usage:        1 bytes
  4638 ;; Hardware stack levels used:    1
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_get_USART_char
  4643 ;;		_get_USART_char_timeout
  4644 ;;		_send_USART_char
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648                           
  4649                           ;psect for function _clear_usart_errors
  4650  0D02                     _clear_usart_errors:	
  4651                           
  4652                           ;USART_16F_MASTER.c: 163: if (OERR == 1)
  4653                           
  4654                           ;incstack = 0
  4655                           ; Regs used in _clear_usart_errors: [wreg]
  4656  0D02  1283               	bcf	3,5	;RP0=0, select bank0
  4657  0D03  1303               	bcf	3,6	;RP1=0, select bank0
  4658  0D04  1C98               	btfss	24,1	;volatile
  4659  0D05  2D0E               	goto	l166
  4660                           
  4661                           ;USART_16F_MASTER.c: 164: {
  4662                           ;USART_16F_MASTER.c: 166: TXEN=0;
  4663  0D06  1683               	bsf	3,5	;RP0=1, select bank1
  4664  0D07  1303               	bcf	3,6	;RP1=0, select bank1
  4665  0D08  1298               	bcf	24,5	;volatile
  4666                           
  4667                           ;USART_16F_MASTER.c: 167: TXEN=1;
  4668  0D09  1698               	bsf	24,5	;volatile
  4669                           
  4670                           ;USART_16F_MASTER.c: 168: CREN=0;
  4671  0D0A  1283               	bcf	3,5	;RP0=0, select bank0
  4672  0D0B  1303               	bcf	3,6	;RP1=0, select bank0
  4673  0D0C  1218               	bcf	24,4	;volatile
  4674                           
  4675                           ;USART_16F_MASTER.c: 169: CREN=1;
  4676  0D0D  1618               	bsf	24,4	;volatile
  4677  0D0E                     l166:	
  4678                           
  4679                           ;USART_16F_MASTER.c: 170: }
  4680                           ;USART_16F_MASTER.c: 172: if (FERR == 1)
  4681  0D0E  1D18               	btfss	24,2	;volatile
  4682  0D0F  0008               	return
  4683                           
  4684                           ;USART_16F_MASTER.c: 173: {
  4685                           ;USART_16F_MASTER.c: 174: dummy=RCREG;
  4686  0D10  081A               	movf	26,w	;volatile
  4687  0D11  00F0               	movwf	??_clear_usart_errors
  4688  0D12  0870               	movf	??_clear_usart_errors,w
  4689  0D13  00CF               	movwf	_dummy
  4690                           
  4691                           ;USART_16F_MASTER.c: 175: TXEN=0;
  4692  0D14  1683               	bsf	3,5	;RP0=1, select bank1
  4693  0D15  1303               	bcf	3,6	;RP1=0, select bank1
  4694  0D16  1298               	bcf	24,5	;volatile
  4695                           
  4696                           ;USART_16F_MASTER.c: 176: TXEN=1;
  4697  0D17  1698               	bsf	24,5	;volatile
  4698  0D18  0008               	return
  4699  0D19                     __end_of_clear_usart_errors:	
  4700                           
  4701                           	psect	text24
  4702  0D6B                     __ptext24:	
  4703 ;; *************** function _USART_Init *****************
  4704 ;; Defined at:
  4705 ;;		line 18 in file "..\Header Files\..\C Source Code\USART_16F_MASTER.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;		None
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;		None
  4710 ;; Return value:  Size  Location     Type
  4711 ;;		None               void
  4712 ;; Registers used:
  4713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4719 ;;      Params:         0       0       0       0       0
  4720 ;;      Locals:         0       0       0       0       0
  4721 ;;      Temps:          0       0       0       0       0
  4722 ;;      Totals:         0       0       0       0       0
  4723 ;;Total ram usage:        0 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; Hardware stack levels required when called:    1
  4726 ;; This function calls:
  4727 ;;		_Setup_Baud_Gen
  4728 ;; This function is called by:
  4729 ;;		_main
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           
  4734                           ;psect for function _USART_Init
  4735  0D6B                     _USART_Init:	
  4736                           
  4737                           ;USART_16F_MASTER.c: 58: Setup_Baud_Gen(9600);
  4738                           
  4739                           ;incstack = 0
  4740                           ; Regs used in _USART_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4741  0D6B  3080               	movlw	128
  4742  0D6C  00F0               	movwf	?_Setup_Baud_Gen
  4743  0D6D  3025               	movlw	37
  4744  0D6E  00F1               	movwf	?_Setup_Baud_Gen+1
  4745  0D6F  120A  158A  27B9   	fcall	_Setup_Baud_Gen
  4746                           
  4747                           ;USART_16F_MASTER.c: 62: SYNC = 0;
  4748  0D72  1683               	bsf	3,5	;RP0=1, select bank1
  4749  0D73  1303               	bcf	3,6	;RP1=0, select bank1
  4750  0D74  1218               	bcf	24,4	;volatile
  4751                           
  4752                           ;USART_16F_MASTER.c: 64: SPEN = 1;
  4753  0D75  1283               	bcf	3,5	;RP0=0, select bank0
  4754  0D76  1303               	bcf	3,6	;RP1=0, select bank0
  4755  0D77  1798               	bsf	24,7	;volatile
  4756                           
  4757                           ;USART_16F_MASTER.c: 67: TXIE = 0;
  4758  0D78  1683               	bsf	3,5	;RP0=1, select bank1
  4759  0D79  1303               	bcf	3,6	;RP1=0, select bank1
  4760  0D7A  120C               	bcf	12,4	;volatile
  4761                           
  4762                           ;USART_16F_MASTER.c: 68: RCIE = 0;
  4763  0D7B  128C               	bcf	12,5	;volatile
  4764                           
  4765                           ;USART_16F_MASTER.c: 72: RX9=0;
  4766  0D7C  1283               	bcf	3,5	;RP0=0, select bank0
  4767  0D7D  1303               	bcf	3,6	;RP1=0, select bank0
  4768  0D7E  1318               	bcf	24,6	;volatile
  4769                           
  4770                           ;USART_16F_MASTER.c: 74: TX9=0;
  4771  0D7F  1683               	bsf	3,5	;RP0=1, select bank1
  4772  0D80  1303               	bcf	3,6	;RP1=0, select bank1
  4773  0D81  1318               	bcf	24,6	;volatile
  4774                           
  4775                           ;USART_16F_MASTER.c: 78: CREN = 1;
  4776  0D82  1283               	bcf	3,5	;RP0=0, select bank0
  4777  0D83  1303               	bcf	3,6	;RP1=0, select bank0
  4778  0D84  1618               	bsf	24,4	;volatile
  4779                           
  4780                           ;USART_16F_MASTER.c: 80: TXEN = 1;
  4781  0D85  1683               	bsf	3,5	;RP0=1, select bank1
  4782  0D86  1303               	bcf	3,6	;RP1=0, select bank1
  4783  0D87  1698               	bsf	24,5	;volatile
  4784  0D88  0008               	return
  4785  0D89                     __end_of_USART_Init:	
  4786                           
  4787                           	psect	text25
  4788  0FB9                     __ptext25:	
  4789 ;; *************** function _Setup_Baud_Gen *****************
  4790 ;; Defined at:
  4791 ;;		line 85 in file "..\Header Files\..\C Source Code\USART_16F_MASTER.c"
  4792 ;; Parameters:    Size  Location     Type
  4793 ;;  BAUD            2    0[COMMON] int 
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;		None
  4796 ;; Return value:  Size  Location     Type
  4797 ;;		None               void
  4798 ;; Registers used:
  4799 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4800 ;; Tracked objects:
  4801 ;;		On entry : 0/0
  4802 ;;		On exit  : 0/0
  4803 ;;		Unchanged: 0/0
  4804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4805 ;;      Params:         2       0       0       0       0
  4806 ;;      Locals:         0       0       0       0       0
  4807 ;;      Temps:          0       0       0       0       0
  4808 ;;      Totals:         2       0       0       0       0
  4809 ;;Total ram usage:        2 bytes
  4810 ;; Hardware stack levels used:    1
  4811 ;; This function calls:
  4812 ;;		Nothing
  4813 ;; This function is called by:
  4814 ;;		_USART_Init
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           
  4819                           ;psect for function _Setup_Baud_Gen
  4820  0FB9                     _Setup_Baud_Gen:	
  4821                           
  4822                           ;USART_16F_MASTER.c: 87: {
  4823                           ;USART_16F_MASTER.c: 89: BRGH = 1;
  4824                           
  4825                           ;incstack = 0
  4826                           ; Regs used in _Setup_Baud_Gen: [wreg-fsr0h+status,2+status,0]
  4827  0FB9  1683               	bsf	3,5	;RP0=1, select bank1
  4828  0FBA  1303               	bcf	3,6	;RP1=0, select bank1
  4829  0FBB  1518               	bsf	24,2	;volatile
  4830                           
  4831                           ;USART_16F_MASTER.c: 90: BRG16 = 0;
  4832  0FBC  1683               	bsf	3,5	;RP0=1, select bank3
  4833  0FBD  1703               	bsf	3,6	;RP1=1, select bank3
  4834  0FBE  1187               	bcf	7,3	;volatile
  4835                           
  4836                           ;USART_16F_MASTER.c: 91: SPBRGH = 0;
  4837  0FBF  1683               	bsf	3,5	;RP0=1, select bank1
  4838  0FC0  1303               	bcf	3,6	;RP1=0, select bank1
  4839  0FC1  019A               	clrf	26	;volatile
  4840                           
  4841                           ;USART_16F_MASTER.c: 93: switch(BAUD)
  4842  0FC2  2FD5               	goto	l1918
  4843  0FC3                     l1904:	
  4844                           ;USART_16F_MASTER.c: 94: {
  4845                           ;USART_16F_MASTER.c: 95: case 1200: SPBRG = 207; break;
  4846                           
  4847  0FC3  30CF               	movlw	207
  4848  0FC4  0099               	movwf	25	;volatile
  4849  0FC5  0008               	return
  4850  0FC6                     l1906:	
  4851                           ;USART_16F_MASTER.c: 96: case 2400: SPBRG = 103; break;
  4852                           
  4853  0FC6  3067               	movlw	103
  4854  0FC7  0099               	movwf	25	;volatile
  4855  0FC8  0008               	return
  4856  0FC9                     l1908:	
  4857                           ;USART_16F_MASTER.c: 97: case 9600: SPBRG = 25; break;
  4858                           
  4859  0FC9  3019               	movlw	25
  4860  0FCA  0099               	movwf	25	;volatile
  4861  0FCB  0008               	return
  4862  0FCC                     l1910:	
  4863                           ;USART_16F_MASTER.c: 98: case 10417: SPBRG = 23; break;
  4864                           
  4865  0FCC  3017               	movlw	23
  4866  0FCD  0099               	movwf	25	;volatile
  4867  0FCE  0008               	return
  4868  0FCF                     l1912:	
  4869                           ;USART_16F_MASTER.c: 99: case 19200: SPBRG = 12; break;
  4870                           
  4871  0FCF  300C               	movlw	12
  4872  0FD0  0099               	movwf	25	;volatile
  4873  0FD1  0008               	return
  4874  0FD2                     l1914:	
  4875                           ;USART_16F_MASTER.c: 102: default: SPBRG = 25; break;
  4876                           
  4877  0FD2  3019               	movlw	25
  4878  0FD3  0099               	movwf	25	;volatile
  4879                           
  4880                           ;USART_16F_MASTER.c: 103: }
  4881  0FD4  0008               	return
  4882  0FD5                     l1918:	
  4883                           
  4884                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 5 sub-sw
      +                          itches
  4885                           ; Switch size 1, requested type "space"
  4886                           ; Number of cases is 5, Range of values is 4 to 75
  4887                           ; switch strategies available:
  4888                           ; Name         Instructions Cycles
  4889                           ; simple_byte           16     9 (average)
  4890                           ; direct_byte          227    11 (fixed)
  4891                           ; jumptable            263     9 (fixed)
  4892                           ;	Chosen strategy is simple_byte
  4893  0FD5  0871               	movf	Setup_Baud_Gen@BAUD+1,w
  4894  0FD6  3A04               	xorlw	4	; case 4
  4895  0FD7  1903               	skipnz
  4896  0FD8  2FE6               	goto	l2882
  4897  0FD9  3A0D               	xorlw	13	; case 9
  4898  0FDA  1903               	skipnz
  4899  0FDB  2FEB               	goto	l2884
  4900  0FDC  3A2C               	xorlw	44	; case 37
  4901  0FDD  1903               	skipnz
  4902  0FDE  2FF0               	goto	l2886
  4903  0FDF  3A0D               	xorlw	13	; case 40
  4904  0FE0  1903               	skipnz
  4905  0FE1  2FF5               	goto	l2888
  4906  0FE2  3A63               	xorlw	99	; case 75
  4907  0FE3  1903               	skipnz
  4908  0FE4  2FFA               	goto	l2890
  4909  0FE5  2FD2               	goto	l1914
  4910  0FE6                     l2882:	
  4911                           
  4912                           ; Switch size 1, requested type "space"
  4913                           ; Number of cases is 1, Range of values is 176 to 176
  4914                           ; switch strategies available:
  4915                           ; Name         Instructions Cycles
  4916                           ; simple_byte            4     3 (average)
  4917                           ; direct_byte           14    11 (fixed)
  4918                           ; jumptable            263     9 (fixed)
  4919                           ;	Chosen strategy is simple_byte
  4920  0FE6  0870               	movf	Setup_Baud_Gen@BAUD,w
  4921  0FE7  3AB0               	xorlw	176	; case 176
  4922  0FE8  1903               	skipnz
  4923  0FE9  2FC3               	goto	l1904
  4924  0FEA  2FD2               	goto	l1914
  4925  0FEB                     l2884:	
  4926                           
  4927                           ; Switch size 1, requested type "space"
  4928                           ; Number of cases is 1, Range of values is 96 to 96
  4929                           ; switch strategies available:
  4930                           ; Name         Instructions Cycles
  4931                           ; simple_byte            4     3 (average)
  4932                           ; direct_byte           14    11 (fixed)
  4933                           ; jumptable            263     9 (fixed)
  4934                           ;	Chosen strategy is simple_byte
  4935  0FEB  0870               	movf	Setup_Baud_Gen@BAUD,w
  4936  0FEC  3A60               	xorlw	96	; case 96
  4937  0FED  1903               	skipnz
  4938  0FEE  2FC6               	goto	l1906
  4939  0FEF  2FD2               	goto	l1914
  4940  0FF0                     l2886:	
  4941                           
  4942                           ; Switch size 1, requested type "space"
  4943                           ; Number of cases is 1, Range of values is 128 to 128
  4944                           ; switch strategies available:
  4945                           ; Name         Instructions Cycles
  4946                           ; simple_byte            4     3 (average)
  4947                           ; direct_byte           14    11 (fixed)
  4948                           ; jumptable            263     9 (fixed)
  4949                           ;	Chosen strategy is simple_byte
  4950  0FF0  0870               	movf	Setup_Baud_Gen@BAUD,w
  4951  0FF1  3A80               	xorlw	128	; case 128
  4952  0FF2  1903               	skipnz
  4953  0FF3  2FC9               	goto	l1908
  4954  0FF4  2FD2               	goto	l1914
  4955  0FF5                     l2888:	
  4956                           
  4957                           ; Switch size 1, requested type "space"
  4958                           ; Number of cases is 1, Range of values is 177 to 177
  4959                           ; switch strategies available:
  4960                           ; Name         Instructions Cycles
  4961                           ; simple_byte            4     3 (average)
  4962                           ; direct_byte           14    11 (fixed)
  4963                           ; jumptable            263     9 (fixed)
  4964                           ;	Chosen strategy is simple_byte
  4965  0FF5  0870               	movf	Setup_Baud_Gen@BAUD,w
  4966  0FF6  3AB1               	xorlw	177	; case 177
  4967  0FF7  1903               	skipnz
  4968  0FF8  2FCC               	goto	l1910
  4969  0FF9  2FD2               	goto	l1914
  4970  0FFA                     l2890:	
  4971                           
  4972                           ; Switch size 1, requested type "space"
  4973                           ; Number of cases is 1, Range of values is 0 to 0
  4974                           ; switch strategies available:
  4975                           ; Name         Instructions Cycles
  4976                           ; simple_byte            4     3 (average)
  4977                           ; direct_byte           11     8 (fixed)
  4978                           ; jumptable            260     6 (fixed)
  4979                           ;	Chosen strategy is simple_byte
  4980  0FFA  0870               	movf	Setup_Baud_Gen@BAUD,w
  4981  0FFB  3A00               	xorlw	0	; case 0
  4982  0FFC  1903               	skipnz
  4983  0FFD  2FCF               	goto	l1912
  4984  0FFE  2FD2               	goto	l1914
  4985  0FFF  0008               	return
  4986  1000                     __end_of_Setup_Baud_Gen:	
  4987                           
  4988                           	psect	text26
  4989  0C9C                     __ptext26:	
  4990 ;; *************** function _Goto_Second_Line *****************
  4991 ;; Defined at:
  4992 ;;		line 83 in file "..\Header Files\..\C Source Code\LCD_Display_C_Code_MASTER.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;		None
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;		None
  4997 ;; Return value:  Size  Location     Type
  4998 ;;		None               void
  4999 ;; Registers used:
  5000 ;;		wreg, status,2, status,0, pclath, cstack
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5006 ;;      Params:         0       0       0       0       0
  5007 ;;      Locals:         0       0       0       0       0
  5008 ;;      Temps:          1       0       0       0       0
  5009 ;;      Totals:         1       0       0       0       0
  5010 ;;Total ram usage:        1 bytes
  5011 ;; Hardware stack levels used:    1
  5012 ;; Hardware stack levels required when called:    1
  5013 ;; This function calls:
  5014 ;;		_LCD_Command
  5015 ;; This function is called by:
  5016 ;;		_main
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           
  5021                           ;psect for function _Goto_Second_Line
  5022  0C9C                     _Goto_Second_Line:	
  5023                           
  5024                           ;LCD_Display_C_Code_MASTER.c: 84: _delay((unsigned long)((1)*(4000000/4000.0)));
  5025                           
  5026                           ;incstack = 0
  5027                           ; Regs used in _Goto_Second_Line: [wreg+status,2+status,0+pclath+cstack]
  5028  0C9C  30F9               	movlw	249
  5029  0C9D  00F4               	movwf	??_Goto_Second_Line
  5030  0C9E                     u2417:	
  5031  0C9E  0000               	nop
  5032  0C9F  0BF4               	decfsz	??_Goto_Second_Line,f
  5033  0CA0  2C9E               	goto	u2417
  5034  0CA1  2CA2               	nop2	;nop
  5035  0CA2  0000               	nop
  5036                           
  5037                           ;LCD_Display_C_Code_MASTER.c: 85: LCD_Command(0b11000000);
  5038  0CA3  30C0               	movlw	192
  5039  0CA4  00F0               	movwf	?_LCD_Command
  5040  0CA5  3000               	movlw	0
  5041  0CA6  00F1               	movwf	?_LCD_Command+1
  5042  0CA7  120A  158A  254E   	fcall	_LCD_Command
  5043  0CAA  0008               	return
  5044  0CAB                     __end_of_Goto_Second_Line:	
  5045                           ;LCD_Display_C_Code_MASTER.c: 86: return;
  5046                           
  5047                           
  5048                           	psect	text27
  5049  0C65                     __ptext27:	
  5050 ;; *************** function _LCD_Clear_Display *****************
  5051 ;; Defined at:
  5052 ;;		line 77 in file "..\Header Files\..\C Source Code\LCD_Display_C_Code_MASTER.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;		None
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;		None
  5057 ;; Return value:  Size  Location     Type
  5058 ;;		None               void
  5059 ;; Registers used:
  5060 ;;		wreg, status,2, status,0, pclath, cstack
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5066 ;;      Params:         0       0       0       0       0
  5067 ;;      Locals:         0       0       0       0       0
  5068 ;;      Temps:          0       0       0       0       0
  5069 ;;      Totals:         0       0       0       0       0
  5070 ;;Total ram usage:        0 bytes
  5071 ;; Hardware stack levels used:    1
  5072 ;; Hardware stack levels required when called:    1
  5073 ;; This function calls:
  5074 ;;		_LCD_Command
  5075 ;; This function is called by:
  5076 ;;		_main
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           
  5081                           ;psect for function _LCD_Clear_Display
  5082  0C65                     _LCD_Clear_Display:	
  5083                           
  5084                           ;LCD_Display_C_Code_MASTER.c: 78: LCD_Command(0b00000001);
  5085                           
  5086                           ;incstack = 0
  5087                           ; Regs used in _LCD_Clear_Display: [wreg+status,2+status,0+pclath+cstack]
  5088  0C65  3001               	movlw	1
  5089  0C66  00F0               	movwf	?_LCD_Command
  5090  0C67  3000               	movlw	0
  5091  0C68  00F1               	movwf	?_LCD_Command+1
  5092  0C69  120A  158A  254E   	fcall	_LCD_Command
  5093  0C6C  0008               	return
  5094  0C6D                     __end_of_LCD_Clear_Display:	
  5095                           ;LCD_Display_C_Code_MASTER.c: 79: return;
  5096                           
  5097                           
  5098                           	psect	text28
  5099  0EFE                     __ptext28:	
  5100 ;; *************** function _LCD_Init *****************
  5101 ;; Defined at:
  5102 ;;		line 39 in file "..\Header Files\..\C Source Code\LCD_Display_C_Code_MASTER.c"
  5103 ;; Parameters:    Size  Location     Type
  5104 ;;		None
  5105 ;; Auto vars:     Size  Location     Type
  5106 ;;		None
  5107 ;; Return value:  Size  Location     Type
  5108 ;;		None               void
  5109 ;; Registers used:
  5110 ;;		wreg, status,2, status,0, pclath, cstack
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5116 ;;      Params:         0       0       0       0       0
  5117 ;;      Locals:         0       0       0       0       0
  5118 ;;      Temps:          1       0       0       0       0
  5119 ;;      Totals:         1       0       0       0       0
  5120 ;;Total ram usage:        1 bytes
  5121 ;; Hardware stack levels used:    1
  5122 ;; Hardware stack levels required when called:    1
  5123 ;; This function calls:
  5124 ;;		_LCD_Command
  5125 ;; This function is called by:
  5126 ;;		_main
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129                           
  5130                           
  5131                           ;psect for function _LCD_Init
  5132  0EFE                     _LCD_Init:	
  5133                           
  5134                           ;LCD_Display_C_Code_MASTER.c: 40: LCD_Command(0b00000001);
  5135                           
  5136                           ;incstack = 0
  5137                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  5138  0EFE  3001               	movlw	1
  5139  0EFF  00F0               	movwf	?_LCD_Command
  5140  0F00  3000               	movlw	0
  5141  0F01  00F1               	movwf	?_LCD_Command+1
  5142  0F02  120A  158A  254E   	fcall	_LCD_Command
      +       120A  158A         
  5143                           
  5144                           ;LCD_Display_C_Code_MASTER.c: 41: LCD_Command(0b00111000);
  5145  0F07  3038               	movlw	56
  5146  0F08  00F0               	movwf	?_LCD_Command
  5147  0F09  3000               	movlw	0
  5148  0F0A  00F1               	movwf	?_LCD_Command+1
  5149  0F0B  120A  158A  254E   	fcall	_LCD_Command
      +       120A  158A         
  5150                           
  5151                           ;LCD_Display_C_Code_MASTER.c: 42: LCD_Command(0b00000110);
  5152  0F10  3006               	movlw	6
  5153  0F11  00F0               	movwf	?_LCD_Command
  5154  0F12  3000               	movlw	0
  5155  0F13  00F1               	movwf	?_LCD_Command+1
  5156  0F14  120A  158A  254E   	fcall	_LCD_Command
      +       120A  158A         
  5157                           
  5158                           ;LCD_Display_C_Code_MASTER.c: 43: LCD_Command(0b00001100);
  5159  0F19  300C               	movlw	12
  5160  0F1A  00F0               	movwf	?_LCD_Command
  5161  0F1B  3000               	movlw	0
  5162  0F1C  00F1               	movwf	?_LCD_Command+1
  5163  0F1D  120A  158A  254E   	fcall	_LCD_Command
      +       120A  158A         
  5164                           
  5165                           ;LCD_Display_C_Code_MASTER.c: 44: LCD_Command(0b00000001);
  5166  0F22  3001               	movlw	1
  5167  0F23  00F0               	movwf	?_LCD_Command
  5168  0F24  3000               	movlw	0
  5169  0F25  00F1               	movwf	?_LCD_Command+1
  5170  0F26  120A  158A  254E   	fcall	_LCD_Command
      +       120A  158A         
  5171                           
  5172                           ;LCD_Display_C_Code_MASTER.c: 45: LCD_Command(0b10000000);
  5173  0F2B  3080               	movlw	128
  5174  0F2C  00F0               	movwf	?_LCD_Command
  5175  0F2D  3000               	movlw	0
  5176  0F2E  00F1               	movwf	?_LCD_Command+1
  5177  0F2F  120A  158A  254E   	fcall	_LCD_Command
      +       120A  158A         
  5178                           
  5179                           ;LCD_Display_C_Code_MASTER.c: 47: _delay((unsigned long)((1)*(4000000/4000.0)));
  5180  0F34  30F9               	movlw	249
  5181  0F35  00F4               	movwf	??_LCD_Init
  5182  0F36                     u2427:	
  5183  0F36  0000               	nop
  5184  0F37  0BF4               	decfsz	??_LCD_Init,f
  5185  0F38  2F36               	goto	u2427
  5186  0F39  2F3A               	nop2	;nop
  5187  0F3A  0000               	nop
  5188  0F3B  0008               	return
  5189  0F3C                     __end_of_LCD_Init:	
  5190                           ;LCD_Display_C_Code_MASTER.c: 48: return;
  5191                           
  5192                           
  5193                           	psect	text29
  5194  0D4E                     __ptext29:	
  5195 ;; *************** function _LCD_Command *****************
  5196 ;; Defined at:
  5197 ;;		line 52 in file "..\Header Files\..\C Source Code\LCD_Display_C_Code_MASTER.c"
  5198 ;; Parameters:    Size  Location     Type
  5199 ;;  command         2    0[COMMON] unsigned int 
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;		None
  5202 ;; Return value:  Size  Location     Type
  5203 ;;		None               void
  5204 ;; Registers used:
  5205 ;;		wreg
  5206 ;; Tracked objects:
  5207 ;;		On entry : 0/0
  5208 ;;		On exit  : 0/0
  5209 ;;		Unchanged: 0/0
  5210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5211 ;;      Params:         2       0       0       0       0
  5212 ;;      Locals:         0       0       0       0       0
  5213 ;;      Temps:          2       0       0       0       0
  5214 ;;      Totals:         4       0       0       0       0
  5215 ;;Total ram usage:        4 bytes
  5216 ;; Hardware stack levels used:    1
  5217 ;; This function calls:
  5218 ;;		Nothing
  5219 ;; This function is called by:
  5220 ;;		_LCD_Init
  5221 ;;		_LCD_Clear_Display
  5222 ;;		_Goto_Second_Line
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           
  5227                           ;psect for function _LCD_Command
  5228  0D4E                     _LCD_Command:	
  5229                           
  5230                           ;LCD_Display_C_Code_MASTER.c: 53: PORTB = command;
  5231                           
  5232                           ;incstack = 0
  5233                           ; Regs used in _LCD_Command: [wreg]
  5234  0D4E  0870               	movf	LCD_Command@command,w
  5235  0D4F  1283               	bcf	3,5	;RP0=0, select bank0
  5236  0D50  1303               	bcf	3,6	;RP1=0, select bank0
  5237  0D51  0086               	movwf	6	;volatile
  5238                           
  5239                           ;LCD_Display_C_Code_MASTER.c: 54: RA2 = 0;
  5240  0D52  1105               	bcf	5,2	;volatile
  5241                           
  5242                           ;LCD_Display_C_Code_MASTER.c: 55: RA1 = 0;
  5243  0D53  1085               	bcf	5,1	;volatile
  5244                           
  5245                           ;LCD_Display_C_Code_MASTER.c: 56: RA3 = 1;
  5246  0D54  1585               	bsf	5,3	;volatile
  5247                           
  5248                           ;LCD_Display_C_Code_MASTER.c: 57: _delay((unsigned long)((2)*(4000000/4000.0)));
  5249  0D55  3003               	movlw	3
  5250  0D56  00F3               	movwf	??_LCD_Command+1
  5251  0D57  3097               	movlw	151
  5252  0D58  00F2               	movwf	??_LCD_Command
  5253  0D59                     u2437:	
  5254  0D59  0BF2               	decfsz	??_LCD_Command,f
  5255  0D5A  2D59               	goto	u2437
  5256  0D5B  0BF3               	decfsz	??_LCD_Command+1,f
  5257  0D5C  2D59               	goto	u2437
  5258  0D5D  2D5E               	nop2
  5259                           
  5260                           ;LCD_Display_C_Code_MASTER.c: 58: RA3 = 0;
  5261  0D5E  1283               	bcf	3,5	;RP0=0, select bank0
  5262  0D5F  1303               	bcf	3,6	;RP1=0, select bank0
  5263  0D60  1185               	bcf	5,3	;volatile
  5264                           
  5265                           ;LCD_Display_C_Code_MASTER.c: 59: _delay((unsigned long)((10)*(4000000/4000.0)));
  5266  0D61  300D               	movlw	13
  5267  0D62  00F3               	movwf	??_LCD_Command+1
  5268  0D63  30FB               	movlw	251
  5269  0D64  00F2               	movwf	??_LCD_Command
  5270  0D65                     u2447:	
  5271  0D65  0BF2               	decfsz	??_LCD_Command,f
  5272  0D66  2D65               	goto	u2447
  5273  0D67  0BF3               	decfsz	??_LCD_Command+1,f
  5274  0D68  2D65               	goto	u2447
  5275  0D69  2D6A               	nop2
  5276  0D6A  0008               	return
  5277  0D6B                     __end_of_LCD_Command:	
  5278                           ;LCD_Display_C_Code_MASTER.c: 60: return;
  5279                           
  5280                           
  5281                           	psect	text30
  5282  0E60                     __ptext30:	
  5283 ;; *************** function _print_to_screen *****************
  5284 ;; Defined at:
  5285 ;;		line 22 in file "..\Header Files\..\C Source Code\LCD_Display_C_Code_MASTER.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;  word            2    6[COMMON] PTR const unsigned char 
  5288 ;;		 -> STR_18(16), main@lightingValue(4), STR_17(6), main@percentage(7), 
  5289 ;;		 -> main@dBm(7), main@RSSI(5), STR_11(15), 
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;  iter            1   10[COMMON] unsigned char 
  5292 ;; Return value:  Size  Location     Type
  5293 ;;		None               void
  5294 ;; Registers used:
  5295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5301 ;;      Params:         2       0       0       0       0
  5302 ;;      Locals:         1       0       0       0       0
  5303 ;;      Temps:          2       0       0       0       0
  5304 ;;      Totals:         5       0       0       0       0
  5305 ;;Total ram usage:        5 bytes
  5306 ;; Hardware stack levels used:    1
  5307 ;; Hardware stack levels required when called:    2
  5308 ;; This function calls:
  5309 ;;		_LCD_Write
  5310 ;;		_strlen
  5311 ;; This function is called by:
  5312 ;;		_main
  5313 ;;		_print_to_screen_button
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           
  5318                           ;psect for function _print_to_screen
  5319  0E60                     _print_to_screen:	
  5320                           
  5321                           ;LCD_Display_C_Code_MASTER.c: 23: for(unsigned char iter = 0 ; iter < strlen(word) ; ite
      +                          r++)
  5322                           
  5323                           ;incstack = 0
  5324                           ; Regs used in _print_to_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5325  0E60  01FA               	clrf	print_to_screen@iter
  5326  0E61                     l2190:	
  5327  0E61  0877               	movf	print_to_screen@word+1,w
  5328  0E62  01F1               	clrf	?_strlen+1
  5329  0E63  07F1               	addwf	?_strlen+1,f
  5330  0E64  0876               	movf	print_to_screen@word,w
  5331  0E65  01F0               	clrf	?_strlen
  5332  0E66  07F0               	addwf	?_strlen,f
  5333  0E67  120A  158A  25AD   	fcall	_strlen
      +       120A  158A         
  5334  0E6C  087A               	movf	print_to_screen@iter,w
  5335  0E6D  00F8               	movwf	??_print_to_screen
  5336  0E6E  01F9               	clrf	??_print_to_screen+1
  5337  0E6F  0871               	movf	?_strlen+1,w
  5338  0E70  0279               	subwf	??_print_to_screen+1,w
  5339  0E71  1D03               	skipz
  5340  0E72  2E75               	goto	u1595
  5341  0E73  0870               	movf	?_strlen,w
  5342  0E74  0278               	subwf	??_print_to_screen,w
  5343  0E75                     u1595:	
  5344  0E75  1803               	btfsc	3,0
  5345  0E76  2E8F               	goto	l2192
  5346                           
  5347                           ;LCD_Display_C_Code_MASTER.c: 24: {
  5348                           ;LCD_Display_C_Code_MASTER.c: 25: LCD_Write(word[iter]);
  5349  0E77  087A               	movf	print_to_screen@iter,w
  5350  0E78  0776               	addwf	print_to_screen@word,w
  5351  0E79  0084               	movwf	4
  5352  0E7A  0877               	movf	print_to_screen@word+1,w
  5353  0E7B  1803               	skipnc
  5354  0E7C  0A77               	incf	print_to_screen@word+1,w
  5355  0E7D  1283               	bcf	3,5	;RP0=0, select bank0
  5356  0E7E  1303               	bcf	3,6	;RP1=0, select bank0
  5357  0E7F  00FF               	movwf	127
  5358  0E80  120A  118A  2003   	fcall	stringtab
      +       120A  158A         
  5359  0E85  120A  158A  2519   	fcall	_LCD_Write
      +       120A  158A         
  5360  0E8A  3001               	movlw	1
  5361  0E8B  00F8               	movwf	??_print_to_screen
  5362  0E8C  0878               	movf	??_print_to_screen,w
  5363  0E8D  07FA               	addwf	print_to_screen@iter,f
  5364  0E8E  2E61               	goto	l2190
  5365  0E8F                     l2192:	
  5366                           
  5367                           ;LCD_Display_C_Code_MASTER.c: 26: }
  5368                           ;LCD_Display_C_Code_MASTER.c: 30: LCD_Write(' ');
  5369  0E8F  3020               	movlw	32
  5370  0E90  120A  158A  2519   	fcall	_LCD_Write
  5371  0E93  0008               	return
  5372  0E94                     __end_of_print_to_screen:	
  5373                           ;LCD_Display_C_Code_MASTER.c: 32: return;
  5374                           
  5375                           
  5376                           	psect	text31
  5377  0DAD                     __ptext31:	
  5378 ;; *************** function _strlen *****************
  5379 ;; Defined at:
  5380 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\strlen.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;  s               2    0[COMMON] PTR const unsigned char 
  5383 ;;		 -> STR_18(16), main@lightingValue(4), STR_17(6), STR_16(8), 
  5384 ;;		 -> STR_15(10), STR_14(10), STR_13(15), main@percentage(7), 
  5385 ;;		 -> main@dBm(7), main@RSSI(5), main@mobile(17), main@broadcastNumber(4), 
  5386 ;;		 -> main@sensor(18), STR_11(15), STR_10(6), STR_9(4), 
  5387 ;;		 -> STR_8(2), setDestination@subbuff2(9), STR_7(5), STR_6(2), 
  5388 ;;		 -> setDestination@subbuff(9), STR_5(5), STR_4(6), STR_3(6), 
  5389 ;;		 -> STR_1(6), 
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;  cp              2    4[COMMON] PTR const unsigned char 
  5392 ;;		 -> STR_18(16), main@lightingValue(4), STR_17(6), STR_16(8), 
  5393 ;;		 -> STR_15(10), STR_14(10), STR_13(15), main@percentage(7), 
  5394 ;;		 -> main@dBm(7), main@RSSI(5), main@mobile(17), main@broadcastNumber(4), 
  5395 ;;		 -> main@sensor(18), STR_11(15), STR_10(6), STR_9(4), 
  5396 ;;		 -> STR_8(2), setDestination@subbuff2(9), STR_7(5), STR_6(2), 
  5397 ;;		 -> setDestination@subbuff(9), STR_5(5), STR_4(6), STR_3(6), 
  5398 ;;		 -> STR_1(6), 
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  2    0[COMMON] unsigned int 
  5401 ;; Registers used:
  5402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5408 ;;      Params:         2       0       0       0       0
  5409 ;;      Locals:         2       0       0       0       0
  5410 ;;      Temps:          2       0       0       0       0
  5411 ;;      Totals:         6       0       0       0       0
  5412 ;;Total ram usage:        6 bytes
  5413 ;; Hardware stack levels used:    2
  5414 ;; This function calls:
  5415 ;;		Nothing
  5416 ;; This function is called by:
  5417 ;;		_print_to_screen
  5418 ;;		_send_USART_string
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           
  5423                           ;psect for function _strlen
  5424  0DAD                     _strlen:	
  5425                           
  5426                           ;incstack = 0
  5427                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  5428  0DAD  0871               	movf	strlen@s+1,w
  5429  0DAE  01F5               	clrf	strlen@cp+1
  5430  0DAF  07F5               	addwf	strlen@cp+1,f
  5431  0DB0  0870               	movf	strlen@s,w
  5432  0DB1  01F4               	clrf	strlen@cp
  5433  0DB2  07F4               	addwf	strlen@cp,f
  5434  0DB3                     l1894:	
  5435  0DB3  0875               	movf	strlen@cp+1,w
  5436  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  5437  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  5438  0DB6  00FF               	movwf	127
  5439  0DB7  0874               	movf	strlen@cp,w
  5440  0DB8  0084               	movwf	4
  5441  0DB9  120A  118A  2003   	fcall	stringtab
      +       120A  158A         
  5442  0DBE  3800               	iorlw	0
  5443  0DBF  1903               	btfsc	3,2
  5444  0DC0  2DC6               	goto	l1896
  5445  0DC1  3001               	movlw	1
  5446  0DC2  07F4               	addwf	strlen@cp,f
  5447  0DC3  1803               	skipnc
  5448  0DC4  0AF5               	incf	strlen@cp+1,f
  5449  0DC5  2DB3               	goto	l1894
  5450  0DC6                     l1896:	
  5451  0DC6  0970               	comf	strlen@s,w
  5452  0DC7  00F2               	movwf	??_strlen
  5453  0DC8  0971               	comf	strlen@s+1,w
  5454  0DC9  00F3               	movwf	??_strlen+1
  5455  0DCA  0AF2               	incf	??_strlen,f
  5456  0DCB  1903               	skipnz
  5457  0DCC  0AF3               	incf	??_strlen+1,f
  5458  0DCD  0874               	movf	strlen@cp,w
  5459  0DCE  0772               	addwf	??_strlen,w
  5460  0DCF  00F0               	movwf	?_strlen
  5461  0DD0  0875               	movf	strlen@cp+1,w
  5462  0DD1  1803               	skipnc
  5463  0DD2  0A75               	incf	strlen@cp+1,w
  5464  0DD3  0773               	addwf	??_strlen+1,w
  5465  0DD4  00F1               	movwf	?_strlen+1
  5466  0DD5  0008               	return
  5467  0DD6                     __end_of_strlen:	
  5468                           
  5469                           	psect	text32
  5470  0D19                     __ptext32:	
  5471 ;; *************** function _LCD_Write *****************
  5472 ;; Defined at:
  5473 ;;		line 64 in file "..\Header Files\..\C Source Code\LCD_Display_C_Code_MASTER.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;  data            1    wreg     unsigned char 
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;  data            1    1[COMMON] unsigned char 
  5478 ;; Return value:  Size  Location     Type
  5479 ;;		None               void
  5480 ;; Registers used:
  5481 ;;		wreg
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5487 ;;      Params:         0       0       0       0       0
  5488 ;;      Locals:         1       0       0       0       0
  5489 ;;      Temps:          1       0       0       0       0
  5490 ;;      Totals:         2       0       0       0       0
  5491 ;;Total ram usage:        2 bytes
  5492 ;; Hardware stack levels used:    1
  5493 ;; This function calls:
  5494 ;;		Nothing
  5495 ;; This function is called by:
  5496 ;;		_print_to_screen
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           
  5501                           ;psect for function _LCD_Write
  5502  0D19                     _LCD_Write:	
  5503                           
  5504                           ;incstack = 0
  5505                           ; Regs used in _LCD_Write: [wreg]
  5506                           ;LCD_Write@data stored from wreg
  5507  0D19  00F1               	movwf	LCD_Write@data
  5508                           
  5509                           ;LCD_Display_C_Code_MASTER.c: 65: PORTB = data;
  5510  0D1A  0871               	movf	LCD_Write@data,w
  5511  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  5512  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  5513  0D1D  0086               	movwf	6	;volatile
  5514                           
  5515                           ;LCD_Display_C_Code_MASTER.c: 66: RA2 = 0;
  5516  0D1E  1105               	bcf	5,2	;volatile
  5517                           
  5518                           ;LCD_Display_C_Code_MASTER.c: 67: RA1 = 1;
  5519  0D1F  1485               	bsf	5,1	;volatile
  5520                           
  5521                           ;LCD_Display_C_Code_MASTER.c: 68: RA3 = 1;
  5522  0D20  1585               	bsf	5,3	;volatile
  5523                           
  5524                           ;LCD_Display_C_Code_MASTER.c: 69: _delay((unsigned long)((200)*(4000000/4000000.0)));
  5525  0D21  3042               	movlw	66
  5526  0D22  00F0               	movwf	??_LCD_Write
  5527  0D23                     u2457:	
  5528  0D23  0BF0               	decfsz	??_LCD_Write,f
  5529  0D24  2D23               	goto	u2457
  5530  0D25  0000               	nop
  5531                           
  5532                           ;LCD_Display_C_Code_MASTER.c: 70: _delay((unsigned long)((200)*(4000000/4000000.0)));
  5533  0D26  3042               	movlw	66
  5534  0D27  00F0               	movwf	??_LCD_Write
  5535  0D28                     u2467:	
  5536  0D28  0BF0               	decfsz	??_LCD_Write,f
  5537  0D29  2D28               	goto	u2467
  5538  0D2A  0000               	nop
  5539                           
  5540                           ;LCD_Display_C_Code_MASTER.c: 71: RA3 = 0;
  5541  0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  5542  0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  5543  0D2D  1185               	bcf	5,3	;volatile
  5544                           
  5545                           ;LCD_Display_C_Code_MASTER.c: 72: _delay((unsigned long)((100)*(4000000/4000000.0)));
  5546  0D2E  3021               	movlw	33
  5547  0D2F  00F0               	movwf	??_LCD_Write
  5548  0D30                     u2477:	
  5549  0D30  0BF0               	decfsz	??_LCD_Write,f
  5550  0D31  2D30               	goto	u2477
  5551  0D32  0008               	return
  5552  0D33                     __end_of_LCD_Write:	
  5553                           ;LCD_Display_C_Code_MASTER.c: 73: return;
  5554                           
  5555  007E                     btemp	set	126	;btemp
  5556  007E                     wtemp0	set	126


Data Sizes:
    Strings     138
    Constant    10
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     31      48
    BANK1            80     66      66
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ?___lmul	unsigned long  size(1) Largest target is 0

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    ?___lwmod	unsigned int  size(1) Largest target is 0

    ?_memcpy	PTR void  size(1) Largest target is 9
		 -> setDestination@subbuff2(BANK0[9]), setDestination@subbuff(BANK0[9]), 

    ?_strtol	long  size(1) Largest target is 0

    ?_strlen	unsigned int  size(2) Largest target is 18
		 -> STR_18(CODE[16]), main@lightingValue(BANK1[4]), STR_17(CODE[6]), STR_16(CODE[8]), 
		 -> STR_15(CODE[10]), STR_14(CODE[10]), STR_13(CODE[15]), main@percentage(BANK1[7]), 
		 -> main@dBm(BANK1[7]), main@RSSI(BANK1[5]), main@mobile(BANK1[17]), main@broadcastNumber(BANK1[4]), 
		 -> main@sensor(BANK1[18]), STR_11(CODE[15]), STR_10(CODE[6]), STR_9(CODE[4]), 
		 -> STR_8(CODE[2]), setDestination@subbuff2(BANK0[9]), STR_7(CODE[5]), STR_6(CODE[2]), 
		 -> setDestination@subbuff(BANK0[9]), STR_5(CODE[5]), STR_4(CODE[6]), STR_3(CODE[6]), 
		 -> STR_1(CODE[6]), 

    strtol@endptr	PTR PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(1) Largest target is 3
		 -> getRSSI@RSSInum(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[16]), main@lightingValue(BANK1[4]), STR_17(CODE[6]), STR_16(CODE[8]), 
		 -> STR_15(CODE[10]), STR_14(CODE[10]), STR_13(CODE[15]), main@percentage(BANK1[7]), 
		 -> main@dBm(BANK1[7]), main@RSSI(BANK1[5]), main@mobile(BANK1[17]), main@broadcastNumber(BANK1[4]), 
		 -> main@sensor(BANK1[18]), STR_11(CODE[15]), STR_10(CODE[6]), STR_9(CODE[4]), 
		 -> STR_8(CODE[2]), setDestination@subbuff2(BANK0[9]), STR_7(CODE[5]), STR_6(CODE[2]), 
		 -> setDestination@subbuff(BANK0[9]), STR_5(CODE[5]), STR_4(CODE[6]), STR_3(CODE[6]), 
		 -> STR_1(CODE[6]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[16]), main@lightingValue(BANK1[4]), STR_17(CODE[6]), STR_16(CODE[8]), 
		 -> STR_15(CODE[10]), STR_14(CODE[10]), STR_13(CODE[15]), main@percentage(BANK1[7]), 
		 -> main@dBm(BANK1[7]), main@RSSI(BANK1[5]), main@mobile(BANK1[17]), main@broadcastNumber(BANK1[4]), 
		 -> main@sensor(BANK1[18]), STR_11(CODE[15]), STR_10(CODE[6]), STR_9(CODE[4]), 
		 -> STR_8(CODE[2]), setDestination@subbuff2(BANK0[9]), STR_7(CODE[5]), STR_6(CODE[2]), 
		 -> setDestination@subbuff(BANK0[9]), STR_5(CODE[5]), STR_4(CODE[6]), STR_3(CODE[6]), 
		 -> STR_1(CODE[6]), 

    memcpy@d1	PTR void  size(1) Largest target is 9
		 -> setDestination@subbuff2(BANK0[9]), setDestination@subbuff(BANK0[9]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 9
		 -> setDestination@subbuff2(BANK0[9]), setDestination@subbuff(BANK0[9]), 

    memcpy@s1	PTR const void  size(1) Largest target is 17
		 -> STR_12(CODE[17]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_12(CODE[17]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
		 -> getRSSI@dBmbuf(BANK0[2]), 

    ?_sprintf	int  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S217$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    sp__memcpy	PTR void  size(1) Largest target is 9
		 -> setDestination@subbuff2(BANK0[9]), setDestination@subbuff(BANK0[9]), 

    setDestination@destination	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_12(CODE[17]), 

    getIdentification@result	PTR unsigned char  size(1) Largest target is 18
		 -> main@sensor(BANK1[18]), 

    getRSSI@percentage	PTR unsigned char  size(1) Largest target is 7
		 -> main@percentage(BANK1[7]), 

    getRSSI@dBm	PTR unsigned char  size(1) Largest target is 7
		 -> main@dBm(BANK1[7]), 

    getRSSI@RSSI	PTR unsigned char  size(1) Largest target is 5
		 -> main@RSSI(BANK1[5]), 

    send_USART_string@string	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[8]), STR_15(CODE[10]), STR_14(CODE[10]), STR_13(CODE[15]), 
		 -> main@percentage(BANK1[7]), main@dBm(BANK1[7]), main@RSSI(BANK1[5]), main@mobile(BANK1[17]), 
		 -> main@broadcastNumber(BANK1[4]), main@sensor(BANK1[18]), STR_10(CODE[6]), STR_9(CODE[4]), 
		 -> STR_8(CODE[2]), setDestination@subbuff2(BANK0[9]), STR_7(CODE[5]), STR_6(CODE[2]), 
		 -> setDestination@subbuff(BANK0[9]), STR_5(CODE[5]), STR_4(CODE[6]), STR_3(CODE[6]), 
		 -> STR_1(CODE[6]), 

    print_to_screen@word	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_18(CODE[16]), main@lightingValue(BANK1[4]), STR_17(CODE[6]), main@percentage(BANK1[7]), 
		 -> main@dBm(BANK1[7]), main@RSSI(BANK1[5]), STR_11(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_enterCommandMode
    _exitCommandMode->_send_USART_string
    _enterCommandMode->_send_USART_string
    _setDestination->_send_USART_string
    _getIdentification->_send_USART_string
    _get_USART_char_timeout->_clear_usart_errors
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _strtol->___lmul
    _isalpha->_isupper
    _send_USART_string->_strlen
    _send_USART_char->_clear_usart_errors
    _get_USART_char->_clear_usart_errors
    _USART_Init->_Setup_Baud_Gen
    _Goto_Second_Line->_LCD_Command
    _LCD_Clear_Display->_LCD_Command
    _LCD_Init->_LCD_Command
    _print_to_screen->_strlen

Critical Paths under _main in BANK0

    _main->_getRSSI
    _getRSSI->_strtol
    _getRSSI->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                69    69      0    7776
                                             28 BANK0      3     3      0
                                              0 BANK1     66    66      0
                    _print_to_screen
                           _LCD_Init
                  _LCD_Clear_Display
                   _Goto_Second_Line
                         _USART_Init
                     _get_USART_char
                    _send_USART_char
                  _send_USART_string
                        _flush_RCREG
                            _getRSSI
                  _getIdentification
                     _setDestination
                   _enterCommandMode
                    _exitCommandMode
                 _PIC_Initialization
 ---------------------------------------------------------------------------------
 (1) _PIC_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _exitCommandMode                                      2     2      0     270
                                             11 COMMON     2     2      0
                     _get_USART_char
                  _send_USART_string
                        _flush_RCREG
 ---------------------------------------------------------------------------------
 (1) _enterCommandMode                                     3     3      0     270
                                             11 COMMON     3     3      0
                     _get_USART_char
                  _send_USART_string
                        _flush_RCREG
 ---------------------------------------------------------------------------------
 (1) _setDestination                                      23    23      0     646
                                             11 COMMON     2     2      0
                                              0 BANK0     21    21      0
                     _get_USART_char
                  _send_USART_string
                        _flush_RCREG
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                               7     4      3     120
                                              0 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (1) _getIdentification                                   19    19      0    1134
                                             11 COMMON     2     2      0
                                              0 BANK0     17    17      0
             _get_USART_char_timeout
                  _send_USART_string
                        _flush_RCREG
 ---------------------------------------------------------------------------------
 (2) _get_USART_char_timeout                               2     2      0      46
                                              1 COMMON     2     2      0
                 _clear_usart_errors
 ---------------------------------------------------------------------------------
 (1) _getRSSI                                             13    11      2    4093
                                             15 BANK0     13    11      2
                     _get_USART_char
                  _send_USART_string
                        _flush_RCREG
                             _strtol
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             15    12      3     798
                                              0 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     159
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     162
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _strtol                                              15    11      4    1156
                                              0 BANK0     15    11      4
                             ___lmul
                            _isspace
                            _isalpha
                            _toupper
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _toupper                                              2     2      0      67
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _isalpha                                              2     2      0     158
                                              2 COMMON     2     2      0
                            _isupper
 ---------------------------------------------------------------------------------
 (4) _isupper                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _isspace                                              2     2      0      90
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8      92
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) _flush_RCREG                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _send_USART_string                                    5     3      2     202
                                              6 COMMON     5     3      2
                             _strlen
                    _send_USART_char
 ---------------------------------------------------------------------------------
 (3) _send_USART_char                                      2     2      0      22
                                              1 COMMON     2     2      0
                 _clear_usart_errors
 ---------------------------------------------------------------------------------
 (2) _get_USART_char                                       0     0      0       0
                 _clear_usart_errors
 ---------------------------------------------------------------------------------
 (4) _clear_usart_errors                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0      22
                     _Setup_Baud_Gen
 ---------------------------------------------------------------------------------
 (2) _Setup_Baud_Gen                                       2     0      2      22
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Goto_Second_Line                                     1     1      0      22
                                              4 COMMON     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear_Display                                    0     0      0      22
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      22
                                              4 COMMON     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _print_to_screen                                      5     3      2     202
                                              6 COMMON     5     3      2
                          _LCD_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               6     4      2      90
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) _LCD_Write                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _print_to_screen
     _LCD_Write
     _strlen
   _LCD_Init
     _LCD_Command
   _LCD_Clear_Display
     _LCD_Command
   _Goto_Second_Line
     _LCD_Command
   _USART_Init
     _Setup_Baud_Gen
   _get_USART_char
     _clear_usart_errors
   _send_USART_char
     _clear_usart_errors
   _send_USART_string
     _strlen
     _send_USART_char
       _clear_usart_errors
   _flush_RCREG
   _getRSSI
     _get_USART_char
       _clear_usart_errors
     _send_USART_string
       _strlen
       _send_USART_char
         _clear_usart_errors
     _flush_RCREG
     _strtol
       ___lmul
       _isspace
       _isalpha
         _isupper
       _toupper
       _isdigit
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _getIdentification
     _get_USART_char_timeout
       _clear_usart_errors
     _send_USART_string
       _strlen
       _send_USART_char
         _clear_usart_errors
     _flush_RCREG
   _setDestination
     _get_USART_char
       _clear_usart_errors
     _send_USART_string
       _strlen
       _send_USART_char
         _clear_usart_errors
     _flush_RCREG
     _memcpy
   _enterCommandMode
     _get_USART_char
       _clear_usart_errors
     _send_USART_string
       _strlen
       _send_USART_char
         _clear_usart_errors
     _flush_RCREG
   _exitCommandMode
     _get_USART_char
       _clear_usart_errors
     _send_USART_string
       _strlen
       _send_USART_char
         _clear_usart_errors
     _flush_RCREG
   _PIC_Initialization

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       4       2        0.0%
ABS                  0      0      80       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1F      30       5       60.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     42      42       7       82.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      84      12        0.0%


Microchip Technology PIC Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Sat Feb 01 23:33:19 2014

                                pc 0002                       ?_LCD_Command 0070  
                               fsr 0004                   _Goto_Second_Line 0C9C  
                main@lightingValue 00CE                                l144 0C75  
                              l208 02FA                                l155 0CEF  
                              l149 0E12                                l166 0D0E  
                              l199 0295                                l721 031C  
                              _GIE 005F                                _RA1 0029  
                              _RA2 002A                                _RA3 002B  
                              _RA4 002C                                _RC5 003D  
                              _RX9 00C6                                _TX9 04C6  
                 ?_print_to_screen 0076                                fsr0 0004  
                              indf 0000                     _setDestination 00AB  
                     __CFG_LVP$OFF 0000           __end_of_enterCommandMode 0EFE  
                      main@command 00D7                               l2030 0CD8  
                             l2014 0F68                               l2006 0F44  
                             l2032 0CD9                               l2008 0F52  
                             l2042 0CC7                               l2018 0F73  
                             l2130 0E18                               l2300 0426  
                             l2054 0C9A                               l2240 034A  
                             l2312 0180                               l2218 0E32  
                             l2066 0C8C                               l2226 0334  
                             l2162 0EB6                               l2138 0E2F  
                             l2180 0CEC                               l2244 0355  
                             l2156 0E9A                               l2340 01D4  
                             l2332 01B3                               l2190 0E61  
                             l2254 036D                               l2238 0346  
                             l2158 0EA8                               l2166 0EC1  
                             l2318 0196                               l2414 06A8  
                             l2502 0267                               l2192 0E8F  
                             l2176 0CE6                               l2280 03B9  
                             l2272 0394                               l2264 0384  
                             l2328 01AD                               l2424 06E0  
                             l2290 0407                               l2258 0375  
                             l2354 01E7                               l2346 01E3  
                             l2434 0718                               l2522 029B  
                             l2514 0283                               l2602 00FE  
                             l2276 03AB                               l2268 038C  
                             l2356 0160                               l2444 0750  
                             l2380 0601                               l2508 027D  
                             l2620 0139                               l1910 0FCC  
                             l2294 0413                               l2358 022D  
                             l2454 0788                               l2374 05E8  
                             l2534 02B6                               l2518 0291  
                             l2702 04A0                               l1912 0FCF  
                             l1904 0FC3                               l2464 07C0  
                             l2552 02E2                               l2528 02A0  
                             l1914 0FD2                               l1906 0FC6  
                             l2562 02F6                               l2546 02CC  
                             l2482 023A                               l2626 014F  
                             l2714 04C2                               l1908 0FC9  
                             l2708 04A6                               l1918 0FD5  
                             l2566 0300                               l2558 02E8  
                             l2488 024C                               l1960 0DDF  
                             l2690 047F                               l2596 00E8  
                             l2772 05AD                               l2684 0571  
                             l1894 0DB3                               l2766 0591  
                             l1896 0DC6                               l1984 0F82  
                             l2696 0484                               l2890 0FFA  
                             l2882 0FE6                               l2884 0FEB  
                             l1988 0F98                               l2886 0FF0  
                             l2888 0FF5                               STR_1 0078  
                             STR_2 00A4                               STR_3 007E  
                             STR_4 0084                               STR_5 0096  
                             STR_6 007C                               STR_7 009B  
                             STR_8 007C                               STR_9 00A0  
                             _BRGH 04C2                               _CREN 00C4  
                             _FERR 00C2                               u1305 0F47  
                             u1235 0DEB                               u1325 0F53  
                             u1335 0F5F                               u1265 0F9A  
                             u1345 0F69                               u1275 0FA2  
                             u1515 0E9D                               u1605 0E46  
                             u2407 0CFC                               u1535 0EAE  
                             u2417 0C9E                               u1545 0EB7  
                             u1465 0E10                               u2427 0F36  
                             u1740 03E8                               u2437 0D59  
                             u1741 03E9                               u1805 01CA  
                             u1485 0E2D                               u2357 0452  
                             u1742 03EE                               u2447 0D65  
                             u1743 03EF                               u1735 03C0  
                             u2367 0477                               u2457 0D23  
                             u2377 0ED1                               u2467 0D28  
                             u1595 0E75                               u2387 0EE3  
                             u2477 0D30                               u2397 0153  
                             _RCIE 0465                               _RCIF 0065  
                             _OERR 00C1                               _SPEN 00C7  
                             _TXIE 0464                               _TXEN 04C5  
                             _TXIF 0064                               _SYNC 04C4  
                             _main 042F                               btemp 007E  
                             start 0000                 __size_of_LCD_Write 001A  
                    __CFG_IESO$OFF 0000                       ?_flush_RCREG 0070  
                  _exitCommandMode 0D89                   __end_of_LCD_Init 0F3C  
              print_to_screen@iter 007A                print_to_screen@word 0076  
                            ?_main 0070                              STR_10 008A  
                            STR_11 004D                              STR_12 001D  
                            STR_13 003E                              STR_14 005C  
                            STR_15 0066                              STR_16 0070  
                            _BRG16 0C3B                              STR_17 0090  
                    __CFG_WDTE$OFF 0000                              STR_18 002E  
                            _ANSEL 0188                    __end_of___lwdiv 0F7A  
           __end_of_setDestination 0159                    __end_of___lwmod 0EC8  
                            _RCREG 001A                       main@iter_187 00D9  
                     main@iter_197 00E1                              _SPBRG 0099  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
      __size_of_clear_usart_errors 0017                              _TXREG 0019  
               Setup_Baud_Gen@BAUD 0070                    __end_of_getRSSI 07F5  
              ___lmul@multiplicand 0074                     __CFG_FCMEN$OFF 0000  
                  __end_of_dpowers 001D                              _dummy 004F  
                  __end_of_isalpha 0CEE                    __end_of_isdigit 0C9C  
                  __end_of_isspace 0CDB                     __CFG_BOREN$OFF 0000  
                  __end_of_isupper 0C8E                              pclath 000A  
                  _send_USART_char 0CEE        __size_of_PIC_Initialization 001B  
                            status 0003                              wtemp0 007E  
                  __end_of_sprintf 0232                    __end_of_toupper 0CC9  
                      ?_USART_Init 0070                     __CFG_MCLRE$OFF 0000  
                  __initialization 07F5                       __end_of_main 05C3  
                           ??_main 003C                    ?_setDestination 0070  
                __end_of_LCD_Write 0D33                             _ANSELH 0189  
                           _SPBRGH 009A              setDestination@subbuff 0020  
                           _WDTCON 0105            __end_of_exitCommandMode 0DAD  
                           ___lmul 0F7A                          ??___lwdiv 0074  
                        ??___lwmod 007C                             _memcpy 0DD6  
                        ??_getRSSI 0031               __size_of_LCD_Command 001D  
                           _strlen 0DAD                             _strtol 0319  
          __size_of_Setup_Baud_Gen 0047                          ??_isalpha 0072  
                        ??_isdigit 0070            send_USART_string@string 0076  
                        ??_isspace 0070                          ??_isupper 0070  
          __end_of_send_USART_char 0D02                __size_of_USART_Init 001E  
                        ??_sprintf 0023                          ??_toupper 0070  
               LCD_Command@command 0070            __size_of_get_USART_char 000B  
         __end_of_Goto_Second_Line 0CAB            __end_of__initialization 07FC  
                        ?_LCD_Init 0070                     __pcstackCOMMON 0070  
        setDestination@destination 0032               __size_of_flush_RCREG 000F  
                ?_enterCommandMode 0070                         __pbssBANK0 003F  
               ??_enterCommandMode 007B                         ??_LCD_Init 0074  
         ??_get_USART_char_timeout 0071                   ?_exitCommandMode 0070  
                       __pmaintext 042F                            ?___lmul 0070  
                _LCD_Clear_Display 0C65             setDestination@iter_172 0034  
                          ?_memcpy 0070                     ___lmul@product 0079  
               ?_LCD_Clear_Display 0070                  _getIdentification 0232  
                          ?_strlen 0070                            ?_strtol 0020  
             enterCommandMode@iter 007D                 ?_getIdentification 0070  
              ??_LCD_Clear_Display 0074                   ?_send_USART_char 0070  
           setDestination@subbuff2 0029                            _PSTRCON 009D  
              ??_getIdentification 007B                         __stringtab 0003  
         __size_of_print_to_screen 0034                       ??_USART_Init 0072  
                    LCD_Write@data 0071              getIdentification@iter 0029  
            getIdentification@temp 0020          __end_of_LCD_Clear_Display 0C6D  
                   main@percentage 00DA                    __size_of___lmul 003F  
                 ??_setDestination 007B                            ___lwdiv 0F3C  
                          ___lwmod 0E94          __end_of_getIdentification 0319  
                  __size_of_memcpy 002D                            _getRSSI 05C3  
       __end_of_clear_usart_errors 0D19                            __ptext1 0D33  
                          __ptext2 0D89                            __ptext3 0EC8  
                          __ptext4 00AB                            __ptext5 0DD6  
                          __ptext6 0232                            __ptext7 0E03  
                          __ptext8 05C3                            __ptext9 0159  
                   _Setup_Baud_Gen 0FB9                    __size_of_strlen 0029  
                  __size_of_strtol 0116                            _dpowers 0013  
                          _isalpha 0CDB                            _isdigit 0C8E  
                          _isspace 0CC9                            _isupper 0C80  
                       getRSSI@dBm 002F                 __end_of_USART_Init 0D89  
                          main@dBm 00C3                            _sprintf 0159  
                          clrloop0 0C6E                          _LCD_Write 0D19  
                          _toupper 0CBA         __end_of_PIC_Initialization 0D4E  
                   _get_USART_char 0C75               end_of_initialization 07FC  
                          memcpy@d 0075                            memcpy@n 0071  
                          memcpy@s 0076    __size_of_get_USART_char_timeout 002E  
                    getRSSI@dBmNum 003A                      getRSSI@dBmbuf 0036  
           __end_of_Setup_Baud_Gen 1000                            strlen@s 0070  
                _send_USART_string 0E31                            strtol@a 0029  
                          strtol@c 002E                            strtol@s 002D  
               ?_send_USART_string 0076                       strtol@endptr 0020  
           __end_of_get_USART_char 0C80                ??_send_USART_string 0078  
                       ?_LCD_Write 0070                  ?_Goto_Second_Line 0070  
                       main@mobile 00B2                 ??_Goto_Second_Line 0074  
                       main@sensor 00A0                  __size_of_LCD_Init 003E  
                     _BYTES_BUFFER 003F                  ??_print_to_screen 0078  
       __size_of_LCD_Clear_Display 0008          __end_of_send_USART_string 0E60  
                    ??_LCD_Command 0072         __size_of_getIdentification 00E7  
                   __end_of___lmul 0FB9                    ?_Setup_Baud_Gen 0070  
                   __end_of_memcpy 0E03              send_USART_string@iter 007A  
           _get_USART_char_timeout 0E03                     __end_of_strlen 0DD6  
                   __end_of_strtol 042F                start_initialization 07F5  
                  ?_get_USART_char 0070                main@broadcastNumber 00CA  
         __CFG_FOSC$INTRC_NOCLKOUT 0000                      ??_flush_RCREG 0070  
get_USART_char_timeout@timeout_int 0071            getIdentification@offset 0028  
                         ??___lmul 0078          __size_of_enterCommandMode 0036  
          getIdentification@result 002C                           ??_memcpy 0073  
                         ??_strlen 0072                           ??_strtol 0024  
              __end_of_LCD_Command 0D6B                      __pcstackBANK0 0020  
                    __pcstackBANK1 00A0                __end_of__stringdata 00A7  
                      ??_LCD_Write 0070                 setDestination@iter 0033  
                      sprintf@_val 0029                        sprintf@flag 0027  
                      sprintf@prec 0028                   ___lwdiv@dividend 0072  
       __size_of_send_USART_string 002F                           ?___lwdiv 0070  
                         ?___lwmod 0078                __end_of_flush_RCREG 0CBA  
                         ?_getRSSI 002F           __size_of_exitCommandMode 0024  
                        __pstrings 0003                           ?_isalpha 0070  
                         ?_isdigit 0070                           ?_isspace 0070  
                         ?_isupper 0070                   ___lwdiv@quotient 0075  
                         ?_sprintf 0020                           ?_toupper 0070  
               _clear_usart_errors 0D02           send_USART_char@character 0072  
                         _LCD_Init 0EFE           __size_of_send_USART_char 0014  
                        clear_ram0 0C6D                ?_clear_usart_errors 0070  
               _PIC_Initialization 0D33                        _LCD_Command 0D4E  
              ?_PIC_Initialization 0070                        __stringbase 0012  
                      __stringdata 001D               ??_clear_usart_errors 0070  
                ___lmul@multiplier 0070                    _print_to_screen 0E60  
             ??_PIC_Initialization 0070                        _flush_RCREG 0CAB  
                 ??_Setup_Baud_Gen 0072                   _enterCommandMode 0EC8  
              exitCommandMode@iter 007C                   __size_of___lwdiv 003E  
          ?_get_USART_char_timeout 0070                   __size_of___lwmod 0034  
        __size_of_Goto_Second_Line 000F                        _isalpha$503 0072  
               __end_of__stringtab 0013                        _isdigit$506 0070  
                 __size_of_getRSSI 0232                   ??_get_USART_char 0071  
                 __size_of_isalpha 0013                   __size_of_isdigit 000E  
                  ___lwdiv@divisor 0070            __size_of_setDestination 00AE  
                ??_exitCommandMode 007B                   __size_of_isspace 0012  
                  ___lwdiv@counter 0077                           __ptext10 0E94  
                         __ptext11 0F3C                           __ptext20 0E31  
                         __ptext12 0319                           __ptext21 0CEE  
                         __ptext13 0C8E                           __ptext30 0E60  
                         __ptext22 0C75                           __ptext14 0CBA  
                         __ptext31 0DAD                           __ptext23 0D02  
                         __ptext15 0CDB                           __ptext32 0D19  
                         __ptext24 0D6B                           __ptext16 0C80  
                         __ptext25 0FB9                           __ptext17 0CC9  
                         __ptext26 0C9C                           __ptext18 0F7A  
                         __ptext27 0C65                           __ptext19 0CAB  
                         __ptext28 0EFE                           __ptext29 0D4E  
                 __size_of_isupper 000E                   __size_of_sprintf 00D9  
                 __size_of_toupper 000F                      __size_of_main 0194  
                      getRSSI@RSSI 0039                        getRSSI@iter 0038  
                ??_send_USART_char 0071                         strtol@base 0021  
   __end_of_get_USART_char_timeout 0E31                           main@RSSI 00D2  
                       strtol@sign 0028                           main@iter 00D8  
                getRSSI@percentage 0030                        _isspace$509 0070  
          __end_of_print_to_screen 0E94                           memcpy@d1 0074  
                         memcpy@s1 0070                           isalpha@c 0073  
                         isdigit@c 0071                          sprintf@ap 0026  
                        sprintf@sp 002D                        _isupper$512 0070  
                 ___lwmod@dividend 007A                           isspace@c 0071  
                         isupper@c 0071                          stringcode 000D  
                   getRSSI@RSSInum 0033                         _OPTION_REG 0081  
                         sprintf@c 002E                           sprintf@f 0020  
                  ___lwmod@divisor 0078                           strlen@cp 0074  
                  ___lwmod@counter 007D                           stringdir 000D  
                         toupper@c 0071                           stringtab 0003  
                       _USART_Init 0D6B          getIdentification@iter_160 002B  
        getIdentification@iter_161 002F          getIdentification@iter_162 0030  
        getIdentification@iter_156 002A          getIdentification@iter_157 002D  
        getIdentification@iter_158 002E  
